// Code generated by protoc-gen-go. DO NOT EDIT.
// source: activitystream.proto

/*
Package activity is a generated protocol buffer package.

It is generated from these files:
	activitystream.proto

It has these top-level messages:
	Object
	PostActivityRequest
	PostActivityResponse
	PostActivityEvent
	StreamActivitiesRequest
	StreamActivitiesResponse
	Subscription
	SubscribeRequest
	SubscribeResponse
	SearchSubscriptionsRequest
	SearchSubscriptionsResponse
	UnreadActivitiesRequest
	UnreadActivitiesResponse
	UserLastActivityRequest
	UserLastActivityResponse
*/
package activity

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ObjectType int32

const (
	ObjectType_BaseObject ObjectType = 0
	ObjectType_Activity   ObjectType = 1
	ObjectType_Link       ObjectType = 47
	ObjectType_Mention    ObjectType = 48
	// CollectionTypes
	ObjectType_Collection            ObjectType = 49
	ObjectType_OrderedCollection     ObjectType = 50
	ObjectType_CollectionPage        ObjectType = 51
	ObjectType_OrderedCollectionPage ObjectType = 52
	// Actor Types
	ObjectType_Application  ObjectType = 2
	ObjectType_Group        ObjectType = 3
	ObjectType_Organization ObjectType = 4
	ObjectType_Person       ObjectType = 5
	ObjectType_Service      ObjectType = 6
	// Objects Types
	ObjectType_Article      ObjectType = 7
	ObjectType_Audio        ObjectType = 8
	ObjectType_Document     ObjectType = 9
	ObjectType_Event        ObjectType = 10
	ObjectType_Image        ObjectType = 11
	ObjectType_Note         ObjectType = 12
	ObjectType_Page         ObjectType = 13
	ObjectType_Place        ObjectType = 14
	ObjectType_Profile      ObjectType = 15
	ObjectType_Relationship ObjectType = 16
	ObjectType_Tombstone    ObjectType = 17
	ObjectType_Video        ObjectType = 18
	// Activity Types
	ObjectType_Accept          ObjectType = 19
	ObjectType_Add             ObjectType = 20
	ObjectType_Announce        ObjectType = 21
	ObjectType_Arrive          ObjectType = 22
	ObjectType_Block           ObjectType = 23
	ObjectType_Create          ObjectType = 24
	ObjectType_Delete          ObjectType = 25
	ObjectType_Dislike         ObjectType = 26
	ObjectType_Flag            ObjectType = 27
	ObjectType_Follow          ObjectType = 28
	ObjectType_Ignore          ObjectType = 29
	ObjectType_Invite          ObjectType = 30
	ObjectType_Join            ObjectType = 31
	ObjectType_Leave           ObjectType = 32
	ObjectType_Like            ObjectType = 33
	ObjectType_Listen          ObjectType = 34
	ObjectType_Move            ObjectType = 35
	ObjectType_Offer           ObjectType = 36
	ObjectType_Question        ObjectType = 37
	ObjectType_Reject          ObjectType = 38
	ObjectType_Read            ObjectType = 39
	ObjectType_Remove          ObjectType = 40
	ObjectType_TentativeReject ObjectType = 41
	ObjectType_TentativeAccept ObjectType = 42
	ObjectType_Travel          ObjectType = 43
	ObjectType_Undo            ObjectType = 44
	ObjectType_Update          ObjectType = 45
	ObjectType_View            ObjectType = 46
	// Pydio Types
	ObjectType_Workspace ObjectType = 53
	ObjectType_Digest    ObjectType = 54
	ObjectType_Folder    ObjectType = 55
)

var ObjectType_name = map[int32]string{
	0:  "BaseObject",
	1:  "Activity",
	47: "Link",
	48: "Mention",
	49: "Collection",
	50: "OrderedCollection",
	51: "CollectionPage",
	52: "OrderedCollectionPage",
	2:  "Application",
	3:  "Group",
	4:  "Organization",
	5:  "Person",
	6:  "Service",
	7:  "Article",
	8:  "Audio",
	9:  "Document",
	10: "Event",
	11: "Image",
	12: "Note",
	13: "Page",
	14: "Place",
	15: "Profile",
	16: "Relationship",
	17: "Tombstone",
	18: "Video",
	19: "Accept",
	20: "Add",
	21: "Announce",
	22: "Arrive",
	23: "Block",
	24: "Create",
	25: "Delete",
	26: "Dislike",
	27: "Flag",
	28: "Follow",
	29: "Ignore",
	30: "Invite",
	31: "Join",
	32: "Leave",
	33: "Like",
	34: "Listen",
	35: "Move",
	36: "Offer",
	37: "Question",
	38: "Reject",
	39: "Read",
	40: "Remove",
	41: "TentativeReject",
	42: "TentativeAccept",
	43: "Travel",
	44: "Undo",
	45: "Update",
	46: "View",
	53: "Workspace",
	54: "Digest",
	55: "Folder",
}
var ObjectType_value = map[string]int32{
	"BaseObject":            0,
	"Activity":              1,
	"Link":                  47,
	"Mention":               48,
	"Collection":            49,
	"OrderedCollection":     50,
	"CollectionPage":        51,
	"OrderedCollectionPage": 52,
	"Application":           2,
	"Group":                 3,
	"Organization":          4,
	"Person":                5,
	"Service":               6,
	"Article":               7,
	"Audio":                 8,
	"Document":              9,
	"Event":                 10,
	"Image":                 11,
	"Note":                  12,
	"Page":                  13,
	"Place":                 14,
	"Profile":               15,
	"Relationship":          16,
	"Tombstone":             17,
	"Video":                 18,
	"Accept":                19,
	"Add":                   20,
	"Announce":              21,
	"Arrive":                22,
	"Block":                 23,
	"Create":                24,
	"Delete":                25,
	"Dislike":               26,
	"Flag":                  27,
	"Follow":                28,
	"Ignore":                29,
	"Invite":                30,
	"Join":                  31,
	"Leave":                 32,
	"Like":                  33,
	"Listen":                34,
	"Move":                  35,
	"Offer":                 36,
	"Question":              37,
	"Reject":                38,
	"Read":                  39,
	"Remove":                40,
	"TentativeReject":       41,
	"TentativeAccept":       42,
	"Travel":                43,
	"Undo":                  44,
	"Update":                45,
	"View":                  46,
	"Workspace":             53,
	"Digest":                54,
	"Folder":                55,
}

func (x ObjectType) String() string {
	return proto.EnumName(ObjectType_name, int32(x))
}
func (ObjectType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type StreamContext int32

const (
	StreamContext_MYFEED  StreamContext = 0
	StreamContext_USER_ID StreamContext = 1
	StreamContext_NODE_ID StreamContext = 2
)

var StreamContext_name = map[int32]string{
	0: "MYFEED",
	1: "USER_ID",
	2: "NODE_ID",
}
var StreamContext_value = map[string]int32{
	"MYFEED":  0,
	"USER_ID": 1,
	"NODE_ID": 2,
}

func (x StreamContext) String() string {
	return proto.EnumName(StreamContext_name, int32(x))
}
func (StreamContext) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type SummaryPointOfView int32

const (
	SummaryPointOfView_GENERIC SummaryPointOfView = 0
	SummaryPointOfView_ACTOR   SummaryPointOfView = 1
	SummaryPointOfView_SUBJECT SummaryPointOfView = 2
)

var SummaryPointOfView_name = map[int32]string{
	0: "GENERIC",
	1: "ACTOR",
	2: "SUBJECT",
}
var SummaryPointOfView_value = map[string]int32{
	"GENERIC": 0,
	"ACTOR":   1,
	"SUBJECT": 2,
}

func (x SummaryPointOfView) String() string {
	return proto.EnumName(SummaryPointOfView_name, int32(x))
}
func (SummaryPointOfView) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type OwnerType int32

const (
	OwnerType_NODE OwnerType = 0
	OwnerType_USER OwnerType = 1
)

var OwnerType_name = map[int32]string{
	0: "NODE",
	1: "USER",
}
var OwnerType_value = map[string]int32{
	"NODE": 0,
	"USER": 1,
}

func (x OwnerType) String() string {
	return proto.EnumName(OwnerType_name, int32(x))
}
func (OwnerType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type Object struct {
	JsonLdContext string                     `protobuf:"bytes,53,opt,name=jsonLdContext,json=@context" json:"jsonLdContext,omitempty"`
	Type          ObjectType                 `protobuf:"varint,1,opt,name=type,enum=activity.ObjectType" json:"type,omitempty"`
	Id            string                     `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Name          string                     `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Summary       string                     `protobuf:"bytes,4,opt,name=summary" json:"summary,omitempty"`
	Context       *Object                    `protobuf:"bytes,5,opt,name=context" json:"context,omitempty"`
	Attachment    *Object                    `protobuf:"bytes,6,opt,name=attachment" json:"attachment,omitempty"`
	AttributedTo  *Object                    `protobuf:"bytes,7,opt,name=attributedTo" json:"attributedTo,omitempty"`
	Audience      *Object                    `protobuf:"bytes,8,opt,name=audience" json:"audience,omitempty"`
	Content       *Object                    `protobuf:"bytes,9,opt,name=content" json:"content,omitempty"`
	StartTime     *google_protobuf.Timestamp `protobuf:"bytes,10,opt,name=startTime" json:"startTime,omitempty"`
	EndTime       *google_protobuf.Timestamp `protobuf:"bytes,11,opt,name=endTime" json:"endTime,omitempty"`
	Published     *google_protobuf.Timestamp `protobuf:"bytes,12,opt,name=published" json:"published,omitempty"`
	Updated       *google_protobuf.Timestamp `protobuf:"bytes,13,opt,name=updated" json:"updated,omitempty"`
	Duration      *google_protobuf.Timestamp `protobuf:"bytes,14,opt,name=duration" json:"duration,omitempty"`
	Url           *Object                    `protobuf:"bytes,15,opt,name=url" json:"url,omitempty"`
	MediaType     string                     `protobuf:"bytes,16,opt,name=mediaType" json:"mediaType,omitempty"`
	Icon          *Object                    `protobuf:"bytes,17,opt,name=icon" json:"icon,omitempty"`
	Image         *Object                    `protobuf:"bytes,18,opt,name=image" json:"image,omitempty"`
	Preview       *Object                    `protobuf:"bytes,19,opt,name=preview" json:"preview,omitempty"`
	Location      *Object                    `protobuf:"bytes,20,opt,name=location" json:"location,omitempty"`
	InReplyTo     *Object                    `protobuf:"bytes,21,opt,name=inReplyTo" json:"inReplyTo,omitempty"`
	Replies       *Object                    `protobuf:"bytes,22,opt,name=replies" json:"replies,omitempty"`
	Tag           *Object                    `protobuf:"bytes,23,opt,name=tag" json:"tag,omitempty"`
	Generator     *Object                    `protobuf:"bytes,24,opt,name=generator" json:"generator,omitempty"`
	To            *Object                    `protobuf:"bytes,25,opt,name=to" json:"to,omitempty"`
	Bto           *Object                    `protobuf:"bytes,26,opt,name=bto" json:"bto,omitempty"`
	Cc            *Object                    `protobuf:"bytes,27,opt,name=cc" json:"cc,omitempty"`
	Bcc           *Object                    `protobuf:"bytes,28,opt,name=bcc" json:"bcc,omitempty"`
	// Activity Properties
	Actor      *Object `protobuf:"bytes,29,opt,name=actor" json:"actor,omitempty"`
	Object     *Object `protobuf:"bytes,30,opt,name=object" json:"object,omitempty"`
	Target     *Object `protobuf:"bytes,31,opt,name=target" json:"target,omitempty"`
	Result     *Object `protobuf:"bytes,32,opt,name=result" json:"result,omitempty"`
	Origin     *Object `protobuf:"bytes,33,opt,name=origin" json:"origin,omitempty"`
	Instrument *Object `protobuf:"bytes,34,opt,name=instrument" json:"instrument,omitempty"`
	// Link Properties
	Href     string `protobuf:"bytes,35,opt,name=href" json:"href,omitempty"`
	Rel      string `protobuf:"bytes,36,opt,name=rel" json:"rel,omitempty"`
	Hreflang string `protobuf:"bytes,37,opt,name=hreflang" json:"hreflang,omitempty"`
	Height   int32  `protobuf:"varint,38,opt,name=height" json:"height,omitempty"`
	Width    int32  `protobuf:"varint,39,opt,name=width" json:"width,omitempty"`
	// Question Properties
	OneOf  *Object                    `protobuf:"bytes,40,opt,name=oneOf" json:"oneOf,omitempty"`
	AnyOf  *Object                    `protobuf:"bytes,41,opt,name=anyOf" json:"anyOf,omitempty"`
	Closed *google_protobuf.Timestamp `protobuf:"bytes,42,opt,name=closed" json:"closed,omitempty"`
	// Relationship Properties
	Subject      *Object `protobuf:"bytes,43,opt,name=subject" json:"subject,omitempty"`
	Relationship *Object `protobuf:"bytes,44,opt,name=relationship" json:"relationship,omitempty"`
	// Tombstone Properties
	FormerType ObjectType                 `protobuf:"varint,45,opt,name=formerType,enum=activity.ObjectType" json:"formerType,omitempty"`
	Deleted    *google_protobuf.Timestamp `protobuf:"bytes,46,opt,name=deleted" json:"deleted,omitempty"`
	// Place Properties
	Accuracy  float32 `protobuf:"fixed32,47,opt,name=accuracy" json:"accuracy,omitempty"`
	Altitude  float32 `protobuf:"fixed32,48,opt,name=altitude" json:"altitude,omitempty"`
	Latitude  float32 `protobuf:"fixed32,49,opt,name=latitude" json:"latitude,omitempty"`
	Longitude float32 `protobuf:"fixed32,50,opt,name=longitude" json:"longitude,omitempty"`
	Radius    float32 `protobuf:"fixed32,51,opt,name=radius" json:"radius,omitempty"`
	Units     string  `protobuf:"bytes,52,opt,name=units" json:"units,omitempty"`
	// Collection Properties
	Items      []*Object `protobuf:"bytes,54,rep,name=items" json:"items,omitempty"`
	TotalItems int32     `protobuf:"varint,55,opt,name=totalItems" json:"totalItems,omitempty"`
	Current    *Object   `protobuf:"bytes,56,opt,name=current" json:"current,omitempty"`
	First      *Object   `protobuf:"bytes,57,opt,name=first" json:"first,omitempty"`
	Last       *Object   `protobuf:"bytes,58,opt,name=last" json:"last,omitempty"`
	PartOf     *Object   `protobuf:"bytes,59,opt,name=partOf" json:"partOf,omitempty"`
	Next       *Object   `protobuf:"bytes,60,opt,name=next" json:"next,omitempty"`
	Prev       *Object   `protobuf:"bytes,61,opt,name=prev" json:"prev,omitempty"`
}

func (m *Object) Reset()                    { *m = Object{} }
func (m *Object) String() string            { return proto.CompactTextString(m) }
func (*Object) ProtoMessage()               {}
func (*Object) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Object) GetJsonLdContext() string {
	if m != nil {
		return m.JsonLdContext
	}
	return ""
}

func (m *Object) GetType() ObjectType {
	if m != nil {
		return m.Type
	}
	return ObjectType_BaseObject
}

func (m *Object) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Object) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Object) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Object) GetContext() *Object {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *Object) GetAttachment() *Object {
	if m != nil {
		return m.Attachment
	}
	return nil
}

func (m *Object) GetAttributedTo() *Object {
	if m != nil {
		return m.AttributedTo
	}
	return nil
}

func (m *Object) GetAudience() *Object {
	if m != nil {
		return m.Audience
	}
	return nil
}

func (m *Object) GetContent() *Object {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Object) GetStartTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *Object) GetEndTime() *google_protobuf.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *Object) GetPublished() *google_protobuf.Timestamp {
	if m != nil {
		return m.Published
	}
	return nil
}

func (m *Object) GetUpdated() *google_protobuf.Timestamp {
	if m != nil {
		return m.Updated
	}
	return nil
}

func (m *Object) GetDuration() *google_protobuf.Timestamp {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *Object) GetUrl() *Object {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *Object) GetMediaType() string {
	if m != nil {
		return m.MediaType
	}
	return ""
}

func (m *Object) GetIcon() *Object {
	if m != nil {
		return m.Icon
	}
	return nil
}

func (m *Object) GetImage() *Object {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *Object) GetPreview() *Object {
	if m != nil {
		return m.Preview
	}
	return nil
}

func (m *Object) GetLocation() *Object {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Object) GetInReplyTo() *Object {
	if m != nil {
		return m.InReplyTo
	}
	return nil
}

func (m *Object) GetReplies() *Object {
	if m != nil {
		return m.Replies
	}
	return nil
}

func (m *Object) GetTag() *Object {
	if m != nil {
		return m.Tag
	}
	return nil
}

func (m *Object) GetGenerator() *Object {
	if m != nil {
		return m.Generator
	}
	return nil
}

func (m *Object) GetTo() *Object {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *Object) GetBto() *Object {
	if m != nil {
		return m.Bto
	}
	return nil
}

func (m *Object) GetCc() *Object {
	if m != nil {
		return m.Cc
	}
	return nil
}

func (m *Object) GetBcc() *Object {
	if m != nil {
		return m.Bcc
	}
	return nil
}

func (m *Object) GetActor() *Object {
	if m != nil {
		return m.Actor
	}
	return nil
}

func (m *Object) GetObject() *Object {
	if m != nil {
		return m.Object
	}
	return nil
}

func (m *Object) GetTarget() *Object {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *Object) GetResult() *Object {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *Object) GetOrigin() *Object {
	if m != nil {
		return m.Origin
	}
	return nil
}

func (m *Object) GetInstrument() *Object {
	if m != nil {
		return m.Instrument
	}
	return nil
}

func (m *Object) GetHref() string {
	if m != nil {
		return m.Href
	}
	return ""
}

func (m *Object) GetRel() string {
	if m != nil {
		return m.Rel
	}
	return ""
}

func (m *Object) GetHreflang() string {
	if m != nil {
		return m.Hreflang
	}
	return ""
}

func (m *Object) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *Object) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *Object) GetOneOf() *Object {
	if m != nil {
		return m.OneOf
	}
	return nil
}

func (m *Object) GetAnyOf() *Object {
	if m != nil {
		return m.AnyOf
	}
	return nil
}

func (m *Object) GetClosed() *google_protobuf.Timestamp {
	if m != nil {
		return m.Closed
	}
	return nil
}

func (m *Object) GetSubject() *Object {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Object) GetRelationship() *Object {
	if m != nil {
		return m.Relationship
	}
	return nil
}

func (m *Object) GetFormerType() ObjectType {
	if m != nil {
		return m.FormerType
	}
	return ObjectType_BaseObject
}

func (m *Object) GetDeleted() *google_protobuf.Timestamp {
	if m != nil {
		return m.Deleted
	}
	return nil
}

func (m *Object) GetAccuracy() float32 {
	if m != nil {
		return m.Accuracy
	}
	return 0
}

func (m *Object) GetAltitude() float32 {
	if m != nil {
		return m.Altitude
	}
	return 0
}

func (m *Object) GetLatitude() float32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Object) GetLongitude() float32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *Object) GetRadius() float32 {
	if m != nil {
		return m.Radius
	}
	return 0
}

func (m *Object) GetUnits() string {
	if m != nil {
		return m.Units
	}
	return ""
}

func (m *Object) GetItems() []*Object {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Object) GetTotalItems() int32 {
	if m != nil {
		return m.TotalItems
	}
	return 0
}

func (m *Object) GetCurrent() *Object {
	if m != nil {
		return m.Current
	}
	return nil
}

func (m *Object) GetFirst() *Object {
	if m != nil {
		return m.First
	}
	return nil
}

func (m *Object) GetLast() *Object {
	if m != nil {
		return m.Last
	}
	return nil
}

func (m *Object) GetPartOf() *Object {
	if m != nil {
		return m.PartOf
	}
	return nil
}

func (m *Object) GetNext() *Object {
	if m != nil {
		return m.Next
	}
	return nil
}

func (m *Object) GetPrev() *Object {
	if m != nil {
		return m.Prev
	}
	return nil
}

type PostActivityRequest struct {
	Object *Object `protobuf:"bytes,1,opt,name=Object" json:"Object,omitempty"`
}

func (m *PostActivityRequest) Reset()                    { *m = PostActivityRequest{} }
func (m *PostActivityRequest) String() string            { return proto.CompactTextString(m) }
func (*PostActivityRequest) ProtoMessage()               {}
func (*PostActivityRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PostActivityRequest) GetObject() *Object {
	if m != nil {
		return m.Object
	}
	return nil
}

type PostActivityResponse struct {
}

func (m *PostActivityResponse) Reset()                    { *m = PostActivityResponse{} }
func (m *PostActivityResponse) String() string            { return proto.CompactTextString(m) }
func (*PostActivityResponse) ProtoMessage()               {}
func (*PostActivityResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type PostActivityEvent struct {
	JsonType  string    `protobuf:"bytes,1,opt,name=jsonType,json=@type" json:"jsonType,omitempty"`
	OwnerType OwnerType `protobuf:"varint,2,opt,name=OwnerType,enum=activity.OwnerType" json:"OwnerType,omitempty"`
	OwnerId   string    `protobuf:"bytes,3,opt,name=OwnerId" json:"OwnerId,omitempty"`
	BoxName   string    `protobuf:"bytes,4,opt,name=BoxName" json:"BoxName,omitempty"`
	Activity  *Object   `protobuf:"bytes,5,opt,name=Activity" json:"Activity,omitempty"`
}

func (m *PostActivityEvent) Reset()                    { *m = PostActivityEvent{} }
func (m *PostActivityEvent) String() string            { return proto.CompactTextString(m) }
func (*PostActivityEvent) ProtoMessage()               {}
func (*PostActivityEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PostActivityEvent) GetJsonType() string {
	if m != nil {
		return m.JsonType
	}
	return ""
}

func (m *PostActivityEvent) GetOwnerType() OwnerType {
	if m != nil {
		return m.OwnerType
	}
	return OwnerType_NODE
}

func (m *PostActivityEvent) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *PostActivityEvent) GetBoxName() string {
	if m != nil {
		return m.BoxName
	}
	return ""
}

func (m *PostActivityEvent) GetActivity() *Object {
	if m != nil {
		return m.Activity
	}
	return nil
}

type StreamActivitiesRequest struct {
	Context         StreamContext      `protobuf:"varint,1,opt,name=Context,enum=activity.StreamContext" json:"Context,omitempty"`
	ContextData     string             `protobuf:"bytes,2,opt,name=ContextData" json:"ContextData,omitempty"`
	StreamFilter    string             `protobuf:"bytes,3,opt,name=StreamFilter" json:"StreamFilter,omitempty"`
	BoxName         string             `protobuf:"bytes,4,opt,name=BoxName" json:"BoxName,omitempty"`
	UnreadCountOnly bool               `protobuf:"varint,5,opt,name=UnreadCountOnly" json:"UnreadCountOnly,omitempty"`
	Offset          int64              `protobuf:"varint,6,opt,name=Offset" json:"Offset,omitempty"`
	Limit           int64              `protobuf:"varint,7,opt,name=Limit" json:"Limit,omitempty"`
	AsDigest        bool               `protobuf:"varint,8,opt,name=AsDigest" json:"AsDigest,omitempty"`
	PointOfView     SummaryPointOfView `protobuf:"varint,9,opt,name=PointOfView,enum=activity.SummaryPointOfView" json:"PointOfView,omitempty"`
	Language        string             `protobuf:"bytes,10,opt,name=Language" json:"Language,omitempty"`
}

func (m *StreamActivitiesRequest) Reset()                    { *m = StreamActivitiesRequest{} }
func (m *StreamActivitiesRequest) String() string            { return proto.CompactTextString(m) }
func (*StreamActivitiesRequest) ProtoMessage()               {}
func (*StreamActivitiesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *StreamActivitiesRequest) GetContext() StreamContext {
	if m != nil {
		return m.Context
	}
	return StreamContext_MYFEED
}

func (m *StreamActivitiesRequest) GetContextData() string {
	if m != nil {
		return m.ContextData
	}
	return ""
}

func (m *StreamActivitiesRequest) GetStreamFilter() string {
	if m != nil {
		return m.StreamFilter
	}
	return ""
}

func (m *StreamActivitiesRequest) GetBoxName() string {
	if m != nil {
		return m.BoxName
	}
	return ""
}

func (m *StreamActivitiesRequest) GetUnreadCountOnly() bool {
	if m != nil {
		return m.UnreadCountOnly
	}
	return false
}

func (m *StreamActivitiesRequest) GetOffset() int64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *StreamActivitiesRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *StreamActivitiesRequest) GetAsDigest() bool {
	if m != nil {
		return m.AsDigest
	}
	return false
}

func (m *StreamActivitiesRequest) GetPointOfView() SummaryPointOfView {
	if m != nil {
		return m.PointOfView
	}
	return SummaryPointOfView_GENERIC
}

func (m *StreamActivitiesRequest) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

type StreamActivitiesResponse struct {
	Activity *Object `protobuf:"bytes,1,opt,name=activity" json:"activity,omitempty"`
}

func (m *StreamActivitiesResponse) Reset()                    { *m = StreamActivitiesResponse{} }
func (m *StreamActivitiesResponse) String() string            { return proto.CompactTextString(m) }
func (*StreamActivitiesResponse) ProtoMessage()               {}
func (*StreamActivitiesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *StreamActivitiesResponse) GetActivity() *Object {
	if m != nil {
		return m.Activity
	}
	return nil
}

type Subscription struct {
	UserId     string    `protobuf:"bytes,1,opt,name=UserId" json:"UserId,omitempty"`
	ObjectType OwnerType `protobuf:"varint,2,opt,name=ObjectType,enum=activity.OwnerType" json:"ObjectType,omitempty"`
	ObjectId   string    `protobuf:"bytes,3,opt,name=ObjectId" json:"ObjectId,omitempty"`
	Events     []string  `protobuf:"bytes,4,rep,name=Events" json:"Events,omitempty"`
}

func (m *Subscription) Reset()                    { *m = Subscription{} }
func (m *Subscription) String() string            { return proto.CompactTextString(m) }
func (*Subscription) ProtoMessage()               {}
func (*Subscription) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Subscription) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Subscription) GetObjectType() OwnerType {
	if m != nil {
		return m.ObjectType
	}
	return OwnerType_NODE
}

func (m *Subscription) GetObjectId() string {
	if m != nil {
		return m.ObjectId
	}
	return ""
}

func (m *Subscription) GetEvents() []string {
	if m != nil {
		return m.Events
	}
	return nil
}

type SubscribeRequest struct {
	Subscription *Subscription `protobuf:"bytes,1,opt,name=Subscription" json:"Subscription,omitempty"`
}

func (m *SubscribeRequest) Reset()                    { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string            { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()               {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *SubscribeRequest) GetSubscription() *Subscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

type SubscribeResponse struct {
	Subscription *Subscription `protobuf:"bytes,1,opt,name=Subscription" json:"Subscription,omitempty"`
}

func (m *SubscribeResponse) Reset()                    { *m = SubscribeResponse{} }
func (m *SubscribeResponse) String() string            { return proto.CompactTextString(m) }
func (*SubscribeResponse) ProtoMessage()               {}
func (*SubscribeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *SubscribeResponse) GetSubscription() *Subscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

type SearchSubscriptionsRequest struct {
	UserIds     []string    `protobuf:"bytes,1,rep,name=UserIds" json:"UserIds,omitempty"`
	ObjectTypes []OwnerType `protobuf:"varint,2,rep,packed,name=ObjectTypes,enum=activity.OwnerType" json:"ObjectTypes,omitempty"`
	ObjectIds   []string    `protobuf:"bytes,3,rep,name=ObjectIds" json:"ObjectIds,omitempty"`
}

func (m *SearchSubscriptionsRequest) Reset()                    { *m = SearchSubscriptionsRequest{} }
func (m *SearchSubscriptionsRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchSubscriptionsRequest) ProtoMessage()               {}
func (*SearchSubscriptionsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *SearchSubscriptionsRequest) GetUserIds() []string {
	if m != nil {
		return m.UserIds
	}
	return nil
}

func (m *SearchSubscriptionsRequest) GetObjectTypes() []OwnerType {
	if m != nil {
		return m.ObjectTypes
	}
	return nil
}

func (m *SearchSubscriptionsRequest) GetObjectIds() []string {
	if m != nil {
		return m.ObjectIds
	}
	return nil
}

type SearchSubscriptionsResponse struct {
	Subscription *Subscription `protobuf:"bytes,1,opt,name=Subscription" json:"Subscription,omitempty"`
}

func (m *SearchSubscriptionsResponse) Reset()                    { *m = SearchSubscriptionsResponse{} }
func (m *SearchSubscriptionsResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchSubscriptionsResponse) ProtoMessage()               {}
func (*SearchSubscriptionsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *SearchSubscriptionsResponse) GetSubscription() *Subscription {
	if m != nil {
		return m.Subscription
	}
	return nil
}

type UnreadActivitiesRequest struct {
	UserId string `protobuf:"bytes,1,opt,name=UserId" json:"UserId,omitempty"`
}

func (m *UnreadActivitiesRequest) Reset()                    { *m = UnreadActivitiesRequest{} }
func (m *UnreadActivitiesRequest) String() string            { return proto.CompactTextString(m) }
func (*UnreadActivitiesRequest) ProtoMessage()               {}
func (*UnreadActivitiesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *UnreadActivitiesRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type UnreadActivitiesResponse struct {
	Number int32 `protobuf:"varint,1,opt,name=number" json:"number,omitempty"`
}

func (m *UnreadActivitiesResponse) Reset()                    { *m = UnreadActivitiesResponse{} }
func (m *UnreadActivitiesResponse) String() string            { return proto.CompactTextString(m) }
func (*UnreadActivitiesResponse) ProtoMessage()               {}
func (*UnreadActivitiesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *UnreadActivitiesResponse) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type UserLastActivityRequest struct {
	UserId     string `protobuf:"bytes,1,opt,name=UserId" json:"UserId,omitempty"`
	BoxName    string `protobuf:"bytes,2,opt,name=BoxName" json:"BoxName,omitempty"`
	ActivityId string `protobuf:"bytes,3,opt,name=ActivityId" json:"ActivityId,omitempty"`
}

func (m *UserLastActivityRequest) Reset()                    { *m = UserLastActivityRequest{} }
func (m *UserLastActivityRequest) String() string            { return proto.CompactTextString(m) }
func (*UserLastActivityRequest) ProtoMessage()               {}
func (*UserLastActivityRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *UserLastActivityRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserLastActivityRequest) GetBoxName() string {
	if m != nil {
		return m.BoxName
	}
	return ""
}

func (m *UserLastActivityRequest) GetActivityId() string {
	if m != nil {
		return m.ActivityId
	}
	return ""
}

type UserLastActivityResponse struct {
	Success bool `protobuf:"varint,1,opt,name=Success" json:"Success,omitempty"`
}

func (m *UserLastActivityResponse) Reset()                    { *m = UserLastActivityResponse{} }
func (m *UserLastActivityResponse) String() string            { return proto.CompactTextString(m) }
func (*UserLastActivityResponse) ProtoMessage()               {}
func (*UserLastActivityResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *UserLastActivityResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*Object)(nil), "activity.Object")
	proto.RegisterType((*PostActivityRequest)(nil), "activity.PostActivityRequest")
	proto.RegisterType((*PostActivityResponse)(nil), "activity.PostActivityResponse")
	proto.RegisterType((*PostActivityEvent)(nil), "activity.PostActivityEvent")
	proto.RegisterType((*StreamActivitiesRequest)(nil), "activity.StreamActivitiesRequest")
	proto.RegisterType((*StreamActivitiesResponse)(nil), "activity.StreamActivitiesResponse")
	proto.RegisterType((*Subscription)(nil), "activity.Subscription")
	proto.RegisterType((*SubscribeRequest)(nil), "activity.SubscribeRequest")
	proto.RegisterType((*SubscribeResponse)(nil), "activity.SubscribeResponse")
	proto.RegisterType((*SearchSubscriptionsRequest)(nil), "activity.SearchSubscriptionsRequest")
	proto.RegisterType((*SearchSubscriptionsResponse)(nil), "activity.SearchSubscriptionsResponse")
	proto.RegisterType((*UnreadActivitiesRequest)(nil), "activity.UnreadActivitiesRequest")
	proto.RegisterType((*UnreadActivitiesResponse)(nil), "activity.UnreadActivitiesResponse")
	proto.RegisterType((*UserLastActivityRequest)(nil), "activity.UserLastActivityRequest")
	proto.RegisterType((*UserLastActivityResponse)(nil), "activity.UserLastActivityResponse")
	proto.RegisterEnum("activity.ObjectType", ObjectType_name, ObjectType_value)
	proto.RegisterEnum("activity.StreamContext", StreamContext_name, StreamContext_value)
	proto.RegisterEnum("activity.SummaryPointOfView", SummaryPointOfView_name, SummaryPointOfView_value)
	proto.RegisterEnum("activity.OwnerType", OwnerType_name, OwnerType_value)
}

func init() { proto.RegisterFile("activitystream.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2057 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0xdb, 0x5a, 0x1b, 0xc9,
	0x11, 0x46, 0xe2, 0x24, 0x15, 0x18, 0xda, 0x0d, 0x86, 0x36, 0x3e, 0xc9, 0x5a, 0xdb, 0xcb, 0xb2,
	0x5e, 0x6c, 0x63, 0xec, 0x3d, 0xe4, 0xb4, 0x18, 0xf0, 0x86, 0xfd, 0x30, 0x62, 0x07, 0xb1, 0xf9,
	0xf6, 0x22, 0xc9, 0x37, 0x9a, 0x29, 0x89, 0x5e, 0x46, 0xd3, 0x4a, 0x4f, 0x0f, 0x5e, 0xf2, 0x0a,
	0xb9, 0xc8, 0xdb, 0xe4, 0x3e, 0x8f, 0x91, 0x77, 0xc8, 0x23, 0xe4, 0x22, 0x5f, 0xf5, 0xcc, 0x48,
	0x03, 0xb8, 0xcd, 0x45, 0x72, 0xa5, 0xa9, 0xfa, 0xff, 0xae, 0xaa, 0xae, 0xae, 0xae, 0x2e, 0xc1,
	0xa2, 0x1f, 0x18, 0x79, 0x26, 0xcd, 0x79, 0x62, 0x34, 0xfa, 0xfd, 0xf5, 0x81, 0x56, 0x46, 0xf1,
	0x5a, 0xa1, 0x5d, 0x79, 0xd0, 0x53, 0xaa, 0x17, 0xe1, 0x33, 0xab, 0xef, 0xa4, 0xdd, 0x67, 0x46,
	0xf6, 0x31, 0x31, 0x7e, 0x7f, 0x90, 0x51, 0x9b, 0xff, 0xe2, 0x30, 0xd5, 0xea, 0xfc, 0x8c, 0x81,
	0xe1, 0x0f, 0xe0, 0xc6, 0xcf, 0x89, 0x8a, 0xf7, 0xc3, 0x6d, 0x15, 0x1b, 0xfc, 0xc5, 0x88, 0x57,
	0x8d, 0xca, 0x6a, 0xdd, 0xab, 0x7d, 0x1b, 0x64, 0x32, 0x5f, 0x85, 0x09, 0x73, 0x3e, 0x40, 0x51,
	0x69, 0x54, 0x56, 0xe7, 0x36, 0x16, 0xd7, 0x0b, 0x2f, 0xeb, 0x99, 0x81, 0xf6, 0xf9, 0x00, 0x3d,
	0xcb, 0xe0, 0x73, 0x50, 0x95, 0xa1, 0xa8, 0xda, 0xf5, 0x55, 0x19, 0x72, 0x0e, 0x13, 0xb1, 0xdf,
	0x47, 0x31, 0x6e, 0x35, 0xf6, 0x9b, 0x0b, 0x98, 0x4e, 0xd2, 0x7e, 0xdf, 0xd7, 0xe7, 0x62, 0xc2,
	0xaa, 0x0b, 0x91, 0xaf, 0xc1, 0x74, 0xee, 0x52, 0x4c, 0x36, 0x2a, 0xab, 0x33, 0x1b, 0xec, 0xb2,
	0x2b, 0xaf, 0x20, 0xf0, 0xe7, 0x00, 0xbe, 0x31, 0x7e, 0x70, 0xd2, 0xc7, 0xd8, 0x88, 0x29, 0x07,
	0xbd, 0xc4, 0xe1, 0x9b, 0x30, 0xeb, 0x1b, 0xa3, 0x65, 0x27, 0x35, 0x18, 0xb6, 0x95, 0x98, 0x76,
	0xac, 0xb9, 0xc0, 0xe2, 0x4f, 0xa1, 0xe6, 0xa7, 0xa1, 0xc4, 0x38, 0x40, 0x51, 0x73, 0xac, 0x18,
	0x32, 0x86, 0x3b, 0x88, 0x8d, 0xa8, 0x7f, 0x74, 0x07, 0xb1, 0xe1, 0x5f, 0x41, 0x3d, 0x31, 0xbe,
	0x36, 0x6d, 0xd9, 0x47, 0x01, 0x96, 0xbd, 0xb2, 0x9e, 0x1d, 0xdb, 0x7a, 0x71, 0x6c, 0xeb, 0xed,
	0xe2, 0xd8, 0xbc, 0x11, 0x99, 0x6f, 0xc2, 0x34, 0xc6, 0xa1, 0x5d, 0x37, 0x73, 0xed, 0xba, 0x82,
	0x4a, 0xfe, 0x06, 0x69, 0x27, 0x92, 0xc9, 0x09, 0x86, 0x62, 0xf6, 0x7a, 0x7f, 0x43, 0x32, 0xf9,
	0x4b, 0x07, 0xa1, 0x6f, 0x30, 0x14, 0x37, 0xae, 0xf7, 0x97, 0x53, 0xf9, 0x6b, 0xa8, 0x85, 0xa9,
	0xf6, 0x8d, 0x54, 0xb1, 0x98, 0xbb, 0x76, 0xd9, 0x90, 0xcb, 0x9b, 0x30, 0x9e, 0xea, 0x48, 0xcc,
	0x3b, 0xf2, 0x47, 0x20, 0xbf, 0x0b, 0xf5, 0x3e, 0x86, 0xd2, 0xa7, 0xd2, 0x13, 0xcc, 0x56, 0xd1,
	0x48, 0xc1, 0x1f, 0xc1, 0x84, 0x0c, 0x54, 0x2c, 0x6e, 0x3a, 0x4c, 0x58, 0x94, 0x3f, 0x81, 0x49,
	0xd9, 0xf7, 0x7b, 0x28, 0xb8, 0x83, 0x96, 0xc1, 0x74, 0xa6, 0x03, 0x8d, 0x67, 0x12, 0xdf, 0x8b,
	0x05, 0xd7, 0x99, 0xe6, 0x04, 0xaa, 0x96, 0x48, 0x05, 0xd9, 0x9e, 0x17, 0x5d, 0xd5, 0x52, 0x30,
	0xf8, 0x3a, 0xd4, 0x65, 0xec, 0xe1, 0x20, 0x3a, 0x6f, 0x2b, 0x71, 0xcb, 0x41, 0x1f, 0x51, 0x28,
	0x12, 0x8d, 0x83, 0x48, 0x62, 0x22, 0x96, 0x5c, 0x91, 0xe4, 0x04, 0xca, 0xa2, 0xf1, 0x7b, 0x62,
	0xd9, 0x95, 0x45, 0xe3, 0xf7, 0xc8, 0x7f, 0x0f, 0x63, 0xd4, 0xbe, 0x51, 0x5a, 0x08, 0x97, 0xff,
	0x21, 0x85, 0x37, 0xa0, 0x6a, 0x94, 0xb8, 0xed, 0x20, 0x56, 0x8d, 0x22, 0xaf, 0x1d, 0xa3, 0xc4,
	0x8a, 0xcb, 0x6b, 0xc7, 0x28, 0xb2, 0x12, 0x04, 0xe2, 0x8e, 0xcb, 0x4a, 0x10, 0x58, 0x2b, 0x41,
	0x20, 0xee, 0x3a, 0xad, 0x04, 0x01, 0x9d, 0x9e, 0x1f, 0x50, 0xdc, 0xf7, 0x5c, 0xa7, 0x67, 0x61,
	0xbe, 0x0a, 0x53, 0xca, 0x2a, 0xc4, 0x7d, 0x07, 0x31, 0xc7, 0x89, 0x69, 0x7c, 0xdd, 0x43, 0x23,
	0x1e, 0xb8, 0x98, 0x19, 0x4e, 0x4c, 0x8d, 0x49, 0x1a, 0x19, 0xd1, 0x70, 0x31, 0x33, 0xdc, 0x7a,
	0xd7, 0xb2, 0x27, 0x63, 0xf1, 0xd0, 0xe9, 0xdd, 0xe2, 0xd4, 0xcf, 0x64, 0x9c, 0x18, 0x9d, 0xda,
	0x7e, 0xd6, 0x74, 0xf5, 0xb3, 0x11, 0x87, 0x7a, 0xeb, 0x89, 0xc6, 0xae, 0xf8, 0x24, 0xeb, 0xad,
	0xf4, 0xcd, 0x19, 0x8c, 0x6b, 0x8c, 0xc4, 0x23, 0xab, 0xa2, 0x4f, 0xbe, 0x02, 0x35, 0x42, 0x22,
	0x3f, 0xee, 0x89, 0xc7, 0x59, 0x5f, 0x2f, 0x64, 0xbe, 0x04, 0x53, 0x27, 0x28, 0x7b, 0x27, 0x46,
	0x3c, 0x69, 0x54, 0x56, 0x27, 0xbd, 0x5c, 0xe2, 0x8b, 0x30, 0xf9, 0x5e, 0x86, 0xe6, 0x44, 0x7c,
	0x6a, 0xd5, 0x99, 0x40, 0x19, 0x57, 0x31, 0xb6, 0xba, 0x62, 0xd5, 0x95, 0x71, 0x0b, 0xdb, 0x93,
	0x89, 0xcf, 0x5b, 0x5d, 0xf1, 0x99, 0xf3, 0x64, 0x08, 0xe6, 0x1b, 0x30, 0x15, 0x44, 0x2a, 0xc1,
	0x50, 0xac, 0x5d, 0xdb, 0x1d, 0x72, 0x26, 0xdd, 0x80, 0x24, 0xcd, 0x8e, 0xf3, 0x73, 0xd7, 0x0d,
	0xc8, 0x09, 0xd4, 0xef, 0x35, 0x46, 0xf6, 0xa6, 0x25, 0x27, 0x72, 0x20, 0x9e, 0xba, 0xfa, 0x7d,
	0x99, 0xc5, 0x37, 0x01, 0xba, 0x4a, 0xf7, 0x51, 0xdb, 0xd6, 0xf2, 0xc5, 0x47, 0x5e, 0xbc, 0x12,
	0x8f, 0x3a, 0x64, 0x88, 0x11, 0x52, 0x87, 0x5c, 0xbf, 0xbe, 0x43, 0xe6, 0x54, 0x3a, 0x1b, 0x3f,
	0x08, 0x52, 0xed, 0x07, 0xe7, 0xe2, 0x59, 0xa3, 0xb2, 0x5a, 0xf5, 0x86, 0xb2, 0xc5, 0x22, 0x23,
	0x4d, 0x1a, 0xa2, 0x78, 0x9e, 0x63, 0xb9, 0x4c, 0x18, 0x45, 0x6c, 0xb1, 0x17, 0x19, 0x56, 0xc8,
	0xd4, 0x19, 0x23, 0x15, 0xf7, 0x32, 0x70, 0xc3, 0x82, 0x23, 0x05, 0x9d, 0xb8, 0xf6, 0x43, 0x99,
	0x26, 0xe2, 0xa5, 0x85, 0x72, 0x89, 0x4e, 0x3c, 0x8d, 0xa5, 0x49, 0xc4, 0xa6, 0x2d, 0x91, 0x4c,
	0xb0, 0x1d, 0xd2, 0x60, 0x3f, 0x11, 0xaf, 0x1b, 0xe3, 0x8e, 0x0e, 0x49, 0x30, 0xbf, 0x0f, 0x60,
	0x94, 0xf1, 0xa3, 0x3d, 0x4b, 0xfe, 0xd2, 0x16, 0x4d, 0x49, 0x63, 0x5f, 0xc5, 0x54, 0x6b, 0x2a,
	0xec, 0xaf, 0x9c, 0xaf, 0x62, 0x46, 0x20, 0x9f, 0x5d, 0xa9, 0x13, 0x23, 0xbe, 0x76, 0x55, 0x8f,
	0x85, 0xa9, 0xc7, 0x47, 0x7e, 0x62, 0xc4, 0x37, 0xae, 0x1e, 0x4f, 0x28, 0xdd, 0xbf, 0x81, 0xaf,
	0x4d, 0xab, 0x2b, 0x7e, 0xe5, 0xba, 0x7f, 0x19, 0x4e, 0xf6, 0x62, 0x1a, 0x3c, 0x7e, 0xed, 0xb2,
	0x47, 0x28, 0xb1, 0xa8, 0xd5, 0x8b, 0xdf, 0xb8, 0x58, 0x84, 0x36, 0x7f, 0x07, 0x0b, 0x87, 0x2a,
	0x31, 0x5b, 0x39, 0xe8, 0xe1, 0x5f, 0x52, 0xcc, 0x82, 0xc9, 0x68, 0x76, 0x90, 0xfa, 0x60, 0x30,
	0xd9, 0x6f, 0x73, 0x09, 0x16, 0x2f, 0x1a, 0x48, 0x06, 0x2a, 0x4e, 0xb0, 0xf9, 0xcf, 0x0a, 0xdc,
	0x2c, 0x03, 0xbb, 0x67, 0x94, 0xb2, 0x65, 0xa8, 0xd1, 0xfc, 0xd6, 0x2e, 0x46, 0xb4, 0xba, 0x37,
	0xf9, 0xad, 0x9d, 0xc6, 0x5e, 0x40, 0xbd, 0xf5, 0x3e, 0xce, 0x4b, 0xb9, 0x6a, 0x4b, 0x79, 0xa1,
	0xe4, 0xb3, 0x80, 0xbc, 0x11, 0x8b, 0x86, 0x33, 0x2b, 0xec, 0x85, 0xf9, 0xcc, 0x56, 0x88, 0x84,
	0xbc, 0x51, 0xbf, 0x1c, 0xd0, 0x34, 0x97, 0x8f, 0x6d, 0xb9, 0x48, 0x8f, 0x5e, 0x11, 0x90, 0x73,
	0x6e, 0x1b, 0x32, 0x9a, 0xff, 0xa9, 0xc2, 0xf2, 0x91, 0x1d, 0x5a, 0x73, 0x95, 0xc4, 0xa4, 0xc8,
	0xd0, 0x0b, 0x98, 0x2e, 0x66, 0xd0, 0x6c, 0xd6, 0x5c, 0x1e, 0x19, 0xca, 0xd6, 0xe4, 0xb0, 0x57,
	0xf0, 0x78, 0x03, 0x66, 0xf2, 0xcf, 0x1d, 0xdf, 0xf8, 0xf9, 0xe8, 0x59, 0x56, 0xf1, 0x26, 0xcc,
	0x66, 0x6b, 0xdf, 0xca, 0xc8, 0xa0, 0xce, 0xf7, 0x75, 0x41, 0xf7, 0x91, 0xcd, 0xad, 0xc2, 0xfc,
	0x71, 0xac, 0xd1, 0x0f, 0xb7, 0x55, 0x1a, 0x9b, 0x56, 0x1c, 0x65, 0x7b, 0xac, 0x79, 0x97, 0xd5,
	0x74, 0xb7, 0x5a, 0xdd, 0x6e, 0x82, 0xd9, 0x34, 0x3a, 0xee, 0xe5, 0x12, 0xdd, 0xad, 0x7d, 0xd9,
	0x97, 0xc6, 0x0e, 0x9c, 0xe3, 0x5e, 0x26, 0xd0, 0x1d, 0xde, 0x4a, 0x76, 0x64, 0x0f, 0x13, 0x63,
	0xe7, 0xca, 0x9a, 0x37, 0x94, 0xf9, 0x6f, 0x61, 0xe6, 0x50, 0xc9, 0xd8, 0xb4, 0xba, 0x3f, 0xd2,
	0xd4, 0x51, 0xb7, 0xa9, 0xb8, 0x5b, 0x4a, 0x45, 0x36, 0x2f, 0x97, 0x38, 0x5e, 0x79, 0x01, 0xd9,
	0xde, 0xf7, 0xe3, 0x5e, 0x4a, 0xc3, 0x0d, 0x64, 0x3d, 0xbf, 0x90, 0x9b, 0xbf, 0x07, 0x71, 0x35,
	0xfb, 0x59, 0x79, 0xd9, 0x59, 0xb7, 0x38, 0xc8, 0x8a, 0x73, 0xd6, 0x2d, 0x0e, 0xf2, 0xef, 0x15,
	0x98, 0x3d, 0x4a, 0x3b, 0x49, 0xa0, 0xe5, 0xc0, 0x8e, 0x33, 0x4b, 0x30, 0x75, 0x9c, 0xd8, 0xd2,
	0xc9, 0xaa, 0x30, 0x97, 0xf8, 0x4b, 0x80, 0x51, 0xdb, 0xfc, 0x58, 0x1d, 0x96, 0x68, 0xb4, 0x87,
	0x4c, 0x1a, 0x56, 0xe2, 0x50, 0x26, 0x47, 0xb6, 0xf2, 0x13, 0x31, 0xd1, 0x18, 0x27, 0x47, 0x99,
	0xd4, 0x3c, 0x00, 0x96, 0x07, 0xd4, 0xc1, 0xa2, 0xa4, 0xbe, 0xb9, 0x18, 0x64, 0xbe, 0xaf, 0xa5,
	0x72, 0x32, 0x47, 0xa8, 0x77, 0x81, 0xdb, 0x6c, 0xc1, 0xcd, 0x92, 0xbd, 0x3c, 0x49, 0xff, 0x8b,
	0xc1, 0xbf, 0x55, 0x60, 0xe5, 0x08, 0x7d, 0x1d, 0x9c, 0x94, 0xd5, 0xc3, 0xf2, 0x17, 0x30, 0x9d,
	0xa5, 0x2c, 0x11, 0x15, 0xbb, 0xb1, 0x42, 0xe4, 0xaf, 0x60, 0x66, 0x94, 0x9b, 0x44, 0x54, 0x1b,
	0xe3, 0xae, 0x1c, 0x96, 0x79, 0xf4, 0x18, 0x14, 0x49, 0x4b, 0xc4, 0xb8, 0x35, 0x39, 0x52, 0x34,
	0x7f, 0x82, 0x3b, 0x1f, 0x0c, 0xe6, 0xff, 0xb0, 0xd1, 0x17, 0xb0, 0x9c, 0x5d, 0x8f, 0xab, 0x77,
	0xdc, 0x51, 0x25, 0xcd, 0x0d, 0x10, 0x57, 0x97, 0xe4, 0xa1, 0x2c, 0xc1, 0x54, 0x9c, 0xf6, 0x3b,
	0xa8, 0xed, 0x9a, 0x49, 0x2f, 0x97, 0x9a, 0xa7, 0xb0, 0x4c, 0xab, 0xf7, 0xfd, 0xab, 0xcd, 0xd6,
	0x55, 0x8c, 0xa5, 0x9b, 0x5e, 0xbd, 0x78, 0xd3, 0xef, 0x03, 0x14, 0x46, 0x86, 0x35, 0x57, 0xd2,
	0x34, 0x37, 0x41, 0x5c, 0x75, 0x96, 0x07, 0x28, 0x60, 0xfa, 0x28, 0x0d, 0x02, 0x4c, 0x12, 0xeb,
	0xae, 0xe6, 0x15, 0xe2, 0xda, 0xbf, 0x27, 0xcb, 0xd5, 0xcf, 0xe7, 0x00, 0xde, 0xf8, 0x09, 0x66,
	0x1a, 0x36, 0xc6, 0x67, 0x47, 0xbd, 0x93, 0x55, 0x78, 0x0d, 0x26, 0xf6, 0x65, 0x7c, 0xca, 0x9e,
	0xf1, 0x19, 0x98, 0x7e, 0x87, 0x31, 0xe5, 0x92, 0x3d, 0xa7, 0x45, 0xdb, 0x2a, 0x8a, 0x30, 0xb0,
	0xf2, 0x0b, 0x7e, 0x0b, 0x6e, 0xb6, 0x74, 0x88, 0x1a, 0xc3, 0x92, 0x7a, 0x83, 0x73, 0x98, 0x1b,
	0xc9, 0x87, 0x7e, 0x0f, 0xd9, 0x4b, 0x7e, 0x1b, 0x6e, 0x5d, 0xa1, 0x5a, 0x68, 0x93, 0xcf, 0xc3,
	0xcc, 0xd6, 0x60, 0x10, 0xc9, 0xec, 0xcf, 0x08, 0xab, 0xf2, 0x3a, 0x4c, 0x7e, 0xa7, 0x55, 0x3a,
	0x60, 0xe3, 0x9c, 0xc1, 0x6c, 0x4b, 0xf7, 0xfc, 0x58, 0xfe, 0x35, 0x03, 0x27, 0x38, 0xc0, 0xd4,
	0x21, 0xea, 0x44, 0xc5, 0x6c, 0x92, 0x82, 0x3b, 0x42, 0x7d, 0x26, 0x03, 0x64, 0x53, 0x24, 0x6c,
	0x69, 0x23, 0x83, 0x08, 0xd9, 0x34, 0x99, 0xd8, 0x4a, 0x43, 0xa9, 0x58, 0x8d, 0x76, 0xb6, 0xa3,
	0x02, 0x3b, 0xaa, 0xb2, 0x3a, 0x01, 0xf6, 0x92, 0x32, 0xa0, 0xcf, 0x3d, 0xfa, 0x63, 0xc5, 0x66,
	0x68, 0xbf, 0x07, 0xca, 0x20, 0x9b, 0xa5, 0x2f, 0x1b, 0xd6, 0x0d, 0x82, 0x0f, 0x23, 0x3f, 0x40,
	0x36, 0x47, 0xa6, 0x0f, 0xb5, 0xea, 0xca, 0x08, 0xd9, 0x3c, 0x85, 0xe4, 0x95, 0x06, 0x35, 0xc6,
	0xf8, 0x0d, 0xa8, 0xb7, 0x55, 0xbf, 0x93, 0x18, 0x15, 0x23, 0xbb, 0x49, 0x0b, 0x7f, 0x94, 0x21,
	0x2a, 0xc6, 0x29, 0xd8, 0xad, 0x20, 0xc0, 0x81, 0x61, 0x0b, 0x7c, 0x1a, 0xc6, 0xb7, 0xc2, 0x90,
	0x2d, 0xda, 0x54, 0xc7, 0xb1, 0x4a, 0xe3, 0x00, 0xd9, 0x2d, 0x4b, 0xd1, 0x5a, 0x9e, 0x21, 0x5b,
	0xa2, 0x95, 0x6f, 0x22, 0x15, 0x9c, 0xb2, 0x65, 0x52, 0x6f, 0x6b, 0xf4, 0x0d, 0x32, 0x41, 0xdf,
	0x3b, 0x76, 0x52, 0x63, 0xb7, 0x29, 0x94, 0x1d, 0x99, 0x44, 0xf2, 0x14, 0xd9, 0x0a, 0x05, 0xfb,
	0x36, 0xf2, 0x7b, 0xec, 0x0e, 0x51, 0xde, 0xaa, 0x28, 0x52, 0xef, 0xd9, 0x5d, 0xfa, 0xde, 0xeb,
	0xc5, 0x4a, 0x23, 0xbb, 0x67, 0xbf, 0xe3, 0x33, 0x69, 0x90, 0xdd, 0x27, 0xf6, 0xf7, 0x4a, 0xc6,
	0xec, 0x01, 0xf9, 0xd9, 0x47, 0xff, 0x0c, 0x59, 0x23, 0x3b, 0xe9, 0x53, 0x64, 0x0f, 0x89, 0xba,
	0x2f, 0x13, 0x83, 0x31, 0x6b, 0x92, 0xf6, 0x9d, 0x3a, 0x43, 0xf6, 0x09, 0x51, 0x5b, 0xdd, 0x2e,
	0x6a, 0xf6, 0x88, 0xe2, 0xfe, 0x81, 0x4a, 0x9a, 0xce, 0xe1, 0x31, 0xd1, 0x3d, 0xb4, 0xc5, 0xf3,
	0x84, 0xe8, 0x1e, 0xfa, 0x21, 0xfb, 0x34, 0xd3, 0xf6, 0x69, 0xe9, 0x2a, 0x5f, 0x80, 0xf9, 0x36,
	0xc6, 0xc6, 0x37, 0xf2, 0x0c, 0x73, 0xea, 0x67, 0x17, 0x94, 0x79, 0x6a, 0xd6, 0x68, 0x55, 0x5b,
	0xfb, 0x67, 0x18, 0xb1, 0xcf, 0xc9, 0xd6, 0x71, 0x1c, 0x2a, 0xf6, 0x94, 0xb4, 0xc7, 0xf6, 0x2f,
	0x3c, 0xfb, 0x82, 0xb4, 0xf4, 0xa2, 0xb0, 0x75, 0x4a, 0xf6, 0x1f, 0x94, 0x3e, 0x4d, 0x06, 0x74,
	0x34, 0xaf, 0x6c, 0x6e, 0xec, 0x63, 0xc5, 0x5e, 0xe7, 0x49, 0x08, 0x51, 0xb3, 0x2f, 0xd7, 0x5e,
	0xc1, 0x8d, 0x0b, 0x0f, 0x35, 0x81, 0xef, 0x7e, 0x7a, 0xbb, 0xbb, 0xbb, 0xc3, 0xc6, 0x28, 0x89,
	0xc7, 0x47, 0xbb, 0xde, 0x9f, 0xf7, 0x76, 0x58, 0x85, 0x84, 0x83, 0xd6, 0xce, 0x2e, 0x09, 0xd5,
	0xb5, 0xaf, 0x81, 0x5f, 0x7d, 0xd4, 0x88, 0xf2, 0xdd, 0xee, 0xc1, 0xae, 0xb7, 0xb7, 0xcd, 0xc6,
	0x6c, 0x69, 0x6d, 0xb7, 0x5b, 0x5e, 0xb6, 0xf4, 0xe8, 0xf8, 0xcd, 0xf7, 0xbb, 0xdb, 0x6d, 0x56,
	0x5d, 0x7b, 0x50, 0x1a, 0x72, 0x6c, 0x41, 0xb5, 0x76, 0x76, 0xd9, 0x98, 0xdd, 0xcf, 0xd1, 0xae,
	0xc7, 0x2a, 0x1b, 0xff, 0x98, 0x80, 0xf9, 0xe2, 0x8e, 0xe5, 0x65, 0xcb, 0x7f, 0x80, 0xd9, 0xf2,
	0x1c, 0xc5, 0xef, 0x8d, 0xba, 0xda, 0x07, 0x26, 0xb7, 0x95, 0xfb, 0x2e, 0x38, 0x9f, 0xcb, 0xc6,
	0x56, 0x2b, 0xfc, 0x8f, 0xc0, 0x2e, 0x3f, 0xac, 0xfc, 0xe1, 0xe5, 0xf1, 0xe5, 0x4a, 0x3b, 0x5c,
	0x69, 0x7e, 0x8c, 0x52, 0x98, 0x7f, 0x5e, 0xe1, 0x3e, 0x2c, 0x5d, 0x6e, 0x8f, 0x07, 0xb6, 0x09,
	0x96, 0x9d, 0x38, 0x7a, 0x6e, 0xd9, 0x89, 0xab, 0xc7, 0x36, 0xc7, 0xf8, 0x9f, 0x60, 0xe1, 0x08,
	0xcd, 0xe5, 0x1e, 0x77, 0xc1, 0xfe, 0x87, 0x9b, 0xed, 0x05, 0xfb, 0x8e, 0x16, 0xd9, 0x1c, 0xe3,
	0x6f, 0xa1, 0x3e, 0x7c, 0x4e, 0xf9, 0xca, 0x95, 0x77, 0x64, 0xf8, 0x66, 0xaf, 0xdc, 0xf9, 0x20,
	0x36, 0xb4, 0xd3, 0xa5, 0x38, 0xaf, 0xbc, 0x5b, 0xfc, 0x51, 0x69, 0x95, 0xf3, 0x8d, 0x5d, 0x79,
	0x7c, 0x0d, 0x6b, 0x94, 0xf2, 0xce, 0x94, 0xfd, 0xef, 0xf6, 0xf2, 0xbf, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x4f, 0x59, 0xb8, 0x65, 0x6c, 0x15, 0x00, 0x00,
}
