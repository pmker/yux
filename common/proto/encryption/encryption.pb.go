// Code generated by protoc-gen-go. DO NOT EDIT.
// source: encryption.proto

/*
Package encryption is a generated protocol buffer package.

It is generated from these files:
	encryption.proto

It has these top-level messages:
	Export
	Import
	KeyInfo
	Key
	AddKeyRequest
	AddKeyResponse
	GetKeyRequest
	GetKeyResponse
	AdminListKeysRequest
	AdminListKeysResponse
	AdminDeleteKeyRequest
	AdminDeleteKeyResponse
	AdminExportKeyRequest
	AdminExportKeyResponse
	AdminImportKeyRequest
	AdminImportKeyResponse
	AdminCreateKeyRequest
	AdminCreateKeyResponse
	Params
	NodeKey
	DeleteNodeRequest
	DeleteNodeResponse
	SetNodeParamsRequest
	SetNodeParamsResponse
	GetNodeKeyRequest
	GetNodeKeyResponse
	SetNodeKeyRequest
	SetNodeKeyResponse
	DeleteNodeKeyRequest
	DeleteNodeKeyResponse
	DeleteNodeSharedKeyRequest
	DeleteNodeSharedKeyResponse
*/
package encryption

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Export struct {
	By   string `protobuf:"bytes,1,opt,name=By" json:"By,omitempty"`
	Date int32  `protobuf:"varint,2,opt,name=Date" json:"Date,omitempty"`
}

func (m *Export) Reset()                    { *m = Export{} }
func (m *Export) String() string            { return proto.CompactTextString(m) }
func (*Export) ProtoMessage()               {}
func (*Export) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Export) GetBy() string {
	if m != nil {
		return m.By
	}
	return ""
}

func (m *Export) GetDate() int32 {
	if m != nil {
		return m.Date
	}
	return 0
}

type Import struct {
	By   string `protobuf:"bytes,1,opt,name=By" json:"By,omitempty"`
	Date int32  `protobuf:"varint,3,opt,name=Date" json:"Date,omitempty"`
}

func (m *Import) Reset()                    { *m = Import{} }
func (m *Import) String() string            { return proto.CompactTextString(m) }
func (*Import) ProtoMessage()               {}
func (*Import) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Import) GetBy() string {
	if m != nil {
		return m.By
	}
	return ""
}

func (m *Import) GetDate() int32 {
	if m != nil {
		return m.Date
	}
	return 0
}

type KeyInfo struct {
	Exports []*Export `protobuf:"bytes,1,rep,name=Exports" json:"Exports,omitempty"`
	Imports []*Import `protobuf:"bytes,2,rep,name=Imports" json:"Imports,omitempty"`
}

func (m *KeyInfo) Reset()                    { *m = KeyInfo{} }
func (m *KeyInfo) String() string            { return proto.CompactTextString(m) }
func (*KeyInfo) ProtoMessage()               {}
func (*KeyInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *KeyInfo) GetExports() []*Export {
	if m != nil {
		return m.Exports
	}
	return nil
}

func (m *KeyInfo) GetImports() []*Import {
	if m != nil {
		return m.Imports
	}
	return nil
}

type Key struct {
	Owner        string   `protobuf:"bytes,1,opt,name=Owner" json:"Owner,omitempty"`
	ID           string   `protobuf:"bytes,2,opt,name=ID" json:"ID,omitempty"`
	Label        string   `protobuf:"bytes,3,opt,name=Label" json:"Label,omitempty"`
	Content      string   `protobuf:"bytes,4,opt,name=Content" json:"Content,omitempty"`
	CreationDate int32    `protobuf:"varint,5,opt,name=CreationDate" json:"CreationDate,omitempty"`
	Info         *KeyInfo `protobuf:"bytes,6,opt,name=Info" json:"Info,omitempty"`
}

func (m *Key) Reset()                    { *m = Key{} }
func (m *Key) String() string            { return proto.CompactTextString(m) }
func (*Key) ProtoMessage()               {}
func (*Key) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Key) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Key) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Key) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Key) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Key) GetCreationDate() int32 {
	if m != nil {
		return m.CreationDate
	}
	return 0
}

func (m *Key) GetInfo() *KeyInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type AddKeyRequest struct {
	Key         *Key   `protobuf:"bytes,1,opt,name=Key" json:"Key,omitempty"`
	StrPassword string `protobuf:"bytes,2,opt,name=StrPassword" json:"StrPassword,omitempty"`
}

func (m *AddKeyRequest) Reset()                    { *m = AddKeyRequest{} }
func (m *AddKeyRequest) String() string            { return proto.CompactTextString(m) }
func (*AddKeyRequest) ProtoMessage()               {}
func (*AddKeyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *AddKeyRequest) GetKey() *Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *AddKeyRequest) GetStrPassword() string {
	if m != nil {
		return m.StrPassword
	}
	return ""
}

type AddKeyResponse struct {
	Success bool `protobuf:"varint,1,opt,name=Success" json:"Success,omitempty"`
}

func (m *AddKeyResponse) Reset()                    { *m = AddKeyResponse{} }
func (m *AddKeyResponse) String() string            { return proto.CompactTextString(m) }
func (*AddKeyResponse) ProtoMessage()               {}
func (*AddKeyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *AddKeyResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type GetKeyRequest struct {
	Owner       string `protobuf:"bytes,1,opt,name=Owner" json:"Owner,omitempty"`
	KeyID       string `protobuf:"bytes,2,opt,name=KeyID" json:"KeyID,omitempty"`
	StrPassword string `protobuf:"bytes,3,opt,name=StrPassword" json:"StrPassword,omitempty"`
}

func (m *GetKeyRequest) Reset()                    { *m = GetKeyRequest{} }
func (m *GetKeyRequest) String() string            { return proto.CompactTextString(m) }
func (*GetKeyRequest) ProtoMessage()               {}
func (*GetKeyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetKeyRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *GetKeyRequest) GetKeyID() string {
	if m != nil {
		return m.KeyID
	}
	return ""
}

func (m *GetKeyRequest) GetStrPassword() string {
	if m != nil {
		return m.StrPassword
	}
	return ""
}

type GetKeyResponse struct {
	Key *Key `protobuf:"bytes,1,opt,name=Key" json:"Key,omitempty"`
}

func (m *GetKeyResponse) Reset()                    { *m = GetKeyResponse{} }
func (m *GetKeyResponse) String() string            { return proto.CompactTextString(m) }
func (*GetKeyResponse) ProtoMessage()               {}
func (*GetKeyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GetKeyResponse) GetKey() *Key {
	if m != nil {
		return m.Key
	}
	return nil
}

type AdminListKeysRequest struct {
}

func (m *AdminListKeysRequest) Reset()                    { *m = AdminListKeysRequest{} }
func (m *AdminListKeysRequest) String() string            { return proto.CompactTextString(m) }
func (*AdminListKeysRequest) ProtoMessage()               {}
func (*AdminListKeysRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type AdminListKeysResponse struct {
	Keys []*Key `protobuf:"bytes,1,rep,name=Keys" json:"Keys,omitempty"`
}

func (m *AdminListKeysResponse) Reset()                    { *m = AdminListKeysResponse{} }
func (m *AdminListKeysResponse) String() string            { return proto.CompactTextString(m) }
func (*AdminListKeysResponse) ProtoMessage()               {}
func (*AdminListKeysResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *AdminListKeysResponse) GetKeys() []*Key {
	if m != nil {
		return m.Keys
	}
	return nil
}

type AdminDeleteKeyRequest struct {
	KeyID string `protobuf:"bytes,1,opt,name=KeyID" json:"KeyID,omitempty"`
}

func (m *AdminDeleteKeyRequest) Reset()                    { *m = AdminDeleteKeyRequest{} }
func (m *AdminDeleteKeyRequest) String() string            { return proto.CompactTextString(m) }
func (*AdminDeleteKeyRequest) ProtoMessage()               {}
func (*AdminDeleteKeyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *AdminDeleteKeyRequest) GetKeyID() string {
	if m != nil {
		return m.KeyID
	}
	return ""
}

type AdminDeleteKeyResponse struct {
	Success bool `protobuf:"varint,1,opt,name=Success" json:"Success,omitempty"`
}

func (m *AdminDeleteKeyResponse) Reset()                    { *m = AdminDeleteKeyResponse{} }
func (m *AdminDeleteKeyResponse) String() string            { return proto.CompactTextString(m) }
func (*AdminDeleteKeyResponse) ProtoMessage()               {}
func (*AdminDeleteKeyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *AdminDeleteKeyResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type AdminExportKeyRequest struct {
	KeyID       string `protobuf:"bytes,1,opt,name=KeyID" json:"KeyID,omitempty"`
	StrPassword string `protobuf:"bytes,2,opt,name=StrPassword" json:"StrPassword,omitempty"`
}

func (m *AdminExportKeyRequest) Reset()                    { *m = AdminExportKeyRequest{} }
func (m *AdminExportKeyRequest) String() string            { return proto.CompactTextString(m) }
func (*AdminExportKeyRequest) ProtoMessage()               {}
func (*AdminExportKeyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *AdminExportKeyRequest) GetKeyID() string {
	if m != nil {
		return m.KeyID
	}
	return ""
}

func (m *AdminExportKeyRequest) GetStrPassword() string {
	if m != nil {
		return m.StrPassword
	}
	return ""
}

type AdminExportKeyResponse struct {
	Key *Key `protobuf:"bytes,1,opt,name=Key" json:"Key,omitempty"`
}

func (m *AdminExportKeyResponse) Reset()                    { *m = AdminExportKeyResponse{} }
func (m *AdminExportKeyResponse) String() string            { return proto.CompactTextString(m) }
func (*AdminExportKeyResponse) ProtoMessage()               {}
func (*AdminExportKeyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *AdminExportKeyResponse) GetKey() *Key {
	if m != nil {
		return m.Key
	}
	return nil
}

type AdminImportKeyRequest struct {
	Key         *Key   `protobuf:"bytes,1,opt,name=Key" json:"Key,omitempty"`
	StrPassword string `protobuf:"bytes,2,opt,name=StrPassword" json:"StrPassword,omitempty"`
	Override    bool   `protobuf:"varint,3,opt,name=Override" json:"Override,omitempty"`
}

func (m *AdminImportKeyRequest) Reset()                    { *m = AdminImportKeyRequest{} }
func (m *AdminImportKeyRequest) String() string            { return proto.CompactTextString(m) }
func (*AdminImportKeyRequest) ProtoMessage()               {}
func (*AdminImportKeyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *AdminImportKeyRequest) GetKey() *Key {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *AdminImportKeyRequest) GetStrPassword() string {
	if m != nil {
		return m.StrPassword
	}
	return ""
}

func (m *AdminImportKeyRequest) GetOverride() bool {
	if m != nil {
		return m.Override
	}
	return false
}

type AdminImportKeyResponse struct {
	Success bool `protobuf:"varint,1,opt,name=Success" json:"Success,omitempty"`
}

func (m *AdminImportKeyResponse) Reset()                    { *m = AdminImportKeyResponse{} }
func (m *AdminImportKeyResponse) String() string            { return proto.CompactTextString(m) }
func (*AdminImportKeyResponse) ProtoMessage()               {}
func (*AdminImportKeyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *AdminImportKeyResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type AdminCreateKeyRequest struct {
	KeyID string `protobuf:"bytes,1,opt,name=KeyID" json:"KeyID,omitempty"`
	Label string `protobuf:"bytes,2,opt,name=Label" json:"Label,omitempty"`
}

func (m *AdminCreateKeyRequest) Reset()                    { *m = AdminCreateKeyRequest{} }
func (m *AdminCreateKeyRequest) String() string            { return proto.CompactTextString(m) }
func (*AdminCreateKeyRequest) ProtoMessage()               {}
func (*AdminCreateKeyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *AdminCreateKeyRequest) GetKeyID() string {
	if m != nil {
		return m.KeyID
	}
	return ""
}

func (m *AdminCreateKeyRequest) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

type AdminCreateKeyResponse struct {
	Success bool `protobuf:"varint,1,opt,name=Success" json:"Success,omitempty"`
}

func (m *AdminCreateKeyResponse) Reset()                    { *m = AdminCreateKeyResponse{} }
func (m *AdminCreateKeyResponse) String() string            { return proto.CompactTextString(m) }
func (*AdminCreateKeyResponse) ProtoMessage()               {}
func (*AdminCreateKeyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *AdminCreateKeyResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type Params struct {
	Nonce     []byte `protobuf:"bytes,1,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	BlockSize int32  `protobuf:"varint,2,opt,name=BlockSize" json:"BlockSize,omitempty"`
}

func (m *Params) Reset()                    { *m = Params{} }
func (m *Params) String() string            { return proto.CompactTextString(m) }
func (*Params) ProtoMessage()               {}
func (*Params) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *Params) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *Params) GetBlockSize() int32 {
	if m != nil {
		return m.BlockSize
	}
	return 0
}

type NodeKey struct {
	NodeId    string `protobuf:"bytes,1,opt,name=NodeId" json:"NodeId,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=UserId" json:"UserId,omitempty"`
	OwnerId   string `protobuf:"bytes,3,opt,name=OwnerId" json:"OwnerId,omitempty"`
	Nonce     []byte `protobuf:"bytes,4,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	BlockSize int32  `protobuf:"varint,5,opt,name=BlockSize" json:"BlockSize,omitempty"`
	Data      []byte `protobuf:"bytes,6,opt,name=Data,proto3" json:"Data,omitempty"`
}

func (m *NodeKey) Reset()                    { *m = NodeKey{} }
func (m *NodeKey) String() string            { return proto.CompactTextString(m) }
func (*NodeKey) ProtoMessage()               {}
func (*NodeKey) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *NodeKey) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *NodeKey) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *NodeKey) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *NodeKey) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *NodeKey) GetBlockSize() int32 {
	if m != nil {
		return m.BlockSize
	}
	return 0
}

func (m *NodeKey) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type DeleteNodeRequest struct {
	NodeIds []string `protobuf:"bytes,1,rep,name=NodeIds" json:"NodeIds,omitempty"`
}

func (m *DeleteNodeRequest) Reset()                    { *m = DeleteNodeRequest{} }
func (m *DeleteNodeRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteNodeRequest) ProtoMessage()               {}
func (*DeleteNodeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *DeleteNodeRequest) GetNodeIds() []string {
	if m != nil {
		return m.NodeIds
	}
	return nil
}

type DeleteNodeResponse struct {
	AllDeleted bool     `protobuf:"varint,1,opt,name=AllDeleted" json:"AllDeleted,omitempty"`
	Deleted    []string `protobuf:"bytes,2,rep,name=Deleted" json:"Deleted,omitempty"`
}

func (m *DeleteNodeResponse) Reset()                    { *m = DeleteNodeResponse{} }
func (m *DeleteNodeResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteNodeResponse) ProtoMessage()               {}
func (*DeleteNodeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *DeleteNodeResponse) GetAllDeleted() bool {
	if m != nil {
		return m.AllDeleted
	}
	return false
}

func (m *DeleteNodeResponse) GetDeleted() []string {
	if m != nil {
		return m.Deleted
	}
	return nil
}

type SetNodeParamsRequest struct {
	NodeId string  `protobuf:"bytes,1,opt,name=NodeId" json:"NodeId,omitempty"`
	Params *Params `protobuf:"bytes,2,opt,name=Params" json:"Params,omitempty"`
}

func (m *SetNodeParamsRequest) Reset()                    { *m = SetNodeParamsRequest{} }
func (m *SetNodeParamsRequest) String() string            { return proto.CompactTextString(m) }
func (*SetNodeParamsRequest) ProtoMessage()               {}
func (*SetNodeParamsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *SetNodeParamsRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *SetNodeParamsRequest) GetParams() *Params {
	if m != nil {
		return m.Params
	}
	return nil
}

type SetNodeParamsResponse struct {
}

func (m *SetNodeParamsResponse) Reset()                    { *m = SetNodeParamsResponse{} }
func (m *SetNodeParamsResponse) String() string            { return proto.CompactTextString(m) }
func (*SetNodeParamsResponse) ProtoMessage()               {}
func (*SetNodeParamsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

type GetNodeKeyRequest struct {
	NodeId string `protobuf:"bytes,1,opt,name=NodeId" json:"NodeId,omitempty"`
	UserId string `protobuf:"bytes,2,opt,name=UserId" json:"UserId,omitempty"`
}

func (m *GetNodeKeyRequest) Reset()                    { *m = GetNodeKeyRequest{} }
func (m *GetNodeKeyRequest) String() string            { return proto.CompactTextString(m) }
func (*GetNodeKeyRequest) ProtoMessage()               {}
func (*GetNodeKeyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *GetNodeKeyRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *GetNodeKeyRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type GetNodeKeyResponse struct {
	OwnerId      string `protobuf:"bytes,1,opt,name=OwnerId" json:"OwnerId,omitempty"`
	EncryptedKey []byte `protobuf:"bytes,2,opt,name=EncryptedKey,proto3" json:"EncryptedKey,omitempty"`
	Nonce        []byte `protobuf:"bytes,3,opt,name=Nonce,proto3" json:"Nonce,omitempty"`
	BlockSize    int32  `protobuf:"varint,4,opt,name=BlockSize" json:"BlockSize,omitempty"`
}

func (m *GetNodeKeyResponse) Reset()                    { *m = GetNodeKeyResponse{} }
func (m *GetNodeKeyResponse) String() string            { return proto.CompactTextString(m) }
func (*GetNodeKeyResponse) ProtoMessage()               {}
func (*GetNodeKeyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *GetNodeKeyResponse) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *GetNodeKeyResponse) GetEncryptedKey() []byte {
	if m != nil {
		return m.EncryptedKey
	}
	return nil
}

func (m *GetNodeKeyResponse) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

func (m *GetNodeKeyResponse) GetBlockSize() int32 {
	if m != nil {
		return m.BlockSize
	}
	return 0
}

type SetNodeKeyRequest struct {
	Key *NodeKey `protobuf:"bytes,1,opt,name=Key" json:"Key,omitempty"`
}

func (m *SetNodeKeyRequest) Reset()                    { *m = SetNodeKeyRequest{} }
func (m *SetNodeKeyRequest) String() string            { return proto.CompactTextString(m) }
func (*SetNodeKeyRequest) ProtoMessage()               {}
func (*SetNodeKeyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *SetNodeKeyRequest) GetKey() *NodeKey {
	if m != nil {
		return m.Key
	}
	return nil
}

type SetNodeKeyResponse struct {
}

func (m *SetNodeKeyResponse) Reset()                    { *m = SetNodeKeyResponse{} }
func (m *SetNodeKeyResponse) String() string            { return proto.CompactTextString(m) }
func (*SetNodeKeyResponse) ProtoMessage()               {}
func (*SetNodeKeyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

type DeleteNodeKeyRequest struct {
	NodeId string   `protobuf:"bytes,1,opt,name=NodeId" json:"NodeId,omitempty"`
	Users  []string `protobuf:"bytes,3,rep,name=Users" json:"Users,omitempty"`
}

func (m *DeleteNodeKeyRequest) Reset()                    { *m = DeleteNodeKeyRequest{} }
func (m *DeleteNodeKeyRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteNodeKeyRequest) ProtoMessage()               {}
func (*DeleteNodeKeyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *DeleteNodeKeyRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *DeleteNodeKeyRequest) GetUsers() []string {
	if m != nil {
		return m.Users
	}
	return nil
}

type DeleteNodeKeyResponse struct {
}

func (m *DeleteNodeKeyResponse) Reset()                    { *m = DeleteNodeKeyResponse{} }
func (m *DeleteNodeKeyResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteNodeKeyResponse) ProtoMessage()               {}
func (*DeleteNodeKeyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

type DeleteNodeSharedKeyRequest struct {
	NodeId  string   `protobuf:"bytes,1,opt,name=NodeId" json:"NodeId,omitempty"`
	OwnerId string   `protobuf:"bytes,2,opt,name=OwnerId" json:"OwnerId,omitempty"`
	Users   []string `protobuf:"bytes,3,rep,name=Users" json:"Users,omitempty"`
}

func (m *DeleteNodeSharedKeyRequest) Reset()                    { *m = DeleteNodeSharedKeyRequest{} }
func (m *DeleteNodeSharedKeyRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteNodeSharedKeyRequest) ProtoMessage()               {}
func (*DeleteNodeSharedKeyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *DeleteNodeSharedKeyRequest) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *DeleteNodeSharedKeyRequest) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

func (m *DeleteNodeSharedKeyRequest) GetUsers() []string {
	if m != nil {
		return m.Users
	}
	return nil
}

type DeleteNodeSharedKeyResponse struct {
}

func (m *DeleteNodeSharedKeyResponse) Reset()                    { *m = DeleteNodeSharedKeyResponse{} }
func (m *DeleteNodeSharedKeyResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteNodeSharedKeyResponse) ProtoMessage()               {}
func (*DeleteNodeSharedKeyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func init() {
	proto.RegisterType((*Export)(nil), "encryption.Export")
	proto.RegisterType((*Import)(nil), "encryption.Import")
	proto.RegisterType((*KeyInfo)(nil), "encryption.KeyInfo")
	proto.RegisterType((*Key)(nil), "encryption.Key")
	proto.RegisterType((*AddKeyRequest)(nil), "encryption.AddKeyRequest")
	proto.RegisterType((*AddKeyResponse)(nil), "encryption.AddKeyResponse")
	proto.RegisterType((*GetKeyRequest)(nil), "encryption.GetKeyRequest")
	proto.RegisterType((*GetKeyResponse)(nil), "encryption.GetKeyResponse")
	proto.RegisterType((*AdminListKeysRequest)(nil), "encryption.AdminListKeysRequest")
	proto.RegisterType((*AdminListKeysResponse)(nil), "encryption.AdminListKeysResponse")
	proto.RegisterType((*AdminDeleteKeyRequest)(nil), "encryption.AdminDeleteKeyRequest")
	proto.RegisterType((*AdminDeleteKeyResponse)(nil), "encryption.AdminDeleteKeyResponse")
	proto.RegisterType((*AdminExportKeyRequest)(nil), "encryption.AdminExportKeyRequest")
	proto.RegisterType((*AdminExportKeyResponse)(nil), "encryption.AdminExportKeyResponse")
	proto.RegisterType((*AdminImportKeyRequest)(nil), "encryption.AdminImportKeyRequest")
	proto.RegisterType((*AdminImportKeyResponse)(nil), "encryption.AdminImportKeyResponse")
	proto.RegisterType((*AdminCreateKeyRequest)(nil), "encryption.AdminCreateKeyRequest")
	proto.RegisterType((*AdminCreateKeyResponse)(nil), "encryption.AdminCreateKeyResponse")
	proto.RegisterType((*Params)(nil), "encryption.Params")
	proto.RegisterType((*NodeKey)(nil), "encryption.NodeKey")
	proto.RegisterType((*DeleteNodeRequest)(nil), "encryption.DeleteNodeRequest")
	proto.RegisterType((*DeleteNodeResponse)(nil), "encryption.DeleteNodeResponse")
	proto.RegisterType((*SetNodeParamsRequest)(nil), "encryption.SetNodeParamsRequest")
	proto.RegisterType((*SetNodeParamsResponse)(nil), "encryption.SetNodeParamsResponse")
	proto.RegisterType((*GetNodeKeyRequest)(nil), "encryption.GetNodeKeyRequest")
	proto.RegisterType((*GetNodeKeyResponse)(nil), "encryption.GetNodeKeyResponse")
	proto.RegisterType((*SetNodeKeyRequest)(nil), "encryption.SetNodeKeyRequest")
	proto.RegisterType((*SetNodeKeyResponse)(nil), "encryption.SetNodeKeyResponse")
	proto.RegisterType((*DeleteNodeKeyRequest)(nil), "encryption.DeleteNodeKeyRequest")
	proto.RegisterType((*DeleteNodeKeyResponse)(nil), "encryption.DeleteNodeKeyResponse")
	proto.RegisterType((*DeleteNodeSharedKeyRequest)(nil), "encryption.DeleteNodeSharedKeyRequest")
	proto.RegisterType((*DeleteNodeSharedKeyResponse)(nil), "encryption.DeleteNodeSharedKeyResponse")
}

func init() { proto.RegisterFile("encryption.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 986 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0xdd, 0x8e, 0xdb, 0x44,
	0x14, 0x8e, 0x1d, 0x27, 0xbb, 0x39, 0xc9, 0x06, 0x76, 0x9a, 0x2e, 0xc6, 0xd0, 0x2a, 0x1d, 0x04,
	0x8d, 0xaa, 0xb6, 0x17, 0xe9, 0x1d, 0xf4, 0x26, 0x9b, 0x54, 0x95, 0x95, 0x76, 0xb7, 0xb2, 0xa1,
	0x12, 0x48, 0x5c, 0xb8, 0xf1, 0x40, 0x23, 0xb2, 0x76, 0xb0, 0x5d, 0xda, 0xf0, 0x00, 0xbc, 0x02,
	0x17, 0xbc, 0x00, 0x8f, 0xc4, 0xe3, 0xa0, 0xf9, 0x8b, 0x67, 0xec, 0xc9, 0x0f, 0x12, 0x77, 0x39,
	0x33, 0xc7, 0xdf, 0xf9, 0xce, 0x99, 0x73, 0xbe, 0xa3, 0xc0, 0xc7, 0x24, 0x59, 0x64, 0x9b, 0x75,
	0xb1, 0x4c, 0x93, 0xc7, 0xeb, 0x2c, 0x2d, 0x52, 0x04, 0xe5, 0x09, 0x7e, 0x08, 0xed, 0x67, 0x1f,
	0xd6, 0x69, 0x56, 0xa0, 0x3e, 0xd8, 0x97, 0x1b, 0xd7, 0x1a, 0x5a, 0xa3, 0x4e, 0x60, 0x5f, 0x6e,
	0x10, 0x02, 0x67, 0x16, 0x15, 0xc4, 0xb5, 0x87, 0xd6, 0xa8, 0x15, 0xb0, 0xdf, 0xd4, 0xdb, 0xbf,
	0xd9, 0xeb, 0xdd, 0x54, 0xbc, 0x09, 0x9c, 0xcc, 0xc9, 0xc6, 0x4f, 0x7e, 0x4a, 0xd1, 0x43, 0x38,
	0xe1, 0x61, 0x72, 0xd7, 0x1a, 0x36, 0x47, 0xdd, 0x31, 0x7a, 0xac, 0xd0, 0xe2, 0x57, 0x81, 0x74,
	0xa1, 0xde, 0x3c, 0x4c, 0xee, 0xda, 0x75, 0x6f, 0x7e, 0x15, 0x48, 0x17, 0xfc, 0xb7, 0x05, 0xcd,
	0x39, 0xd9, 0xa0, 0x01, 0xb4, 0xae, 0xdf, 0x27, 0x24, 0x13, 0xac, 0xb8, 0x41, 0x89, 0xfa, 0x33,
	0x96, 0x44, 0x27, 0xb0, 0xfd, 0x19, 0xf5, 0x7a, 0x11, 0xbd, 0x21, 0x2b, 0xc6, 0xb4, 0x13, 0x70,
	0x03, 0xb9, 0x70, 0x32, 0x4d, 0x93, 0x82, 0x24, 0x85, 0xeb, 0xb0, 0x73, 0x69, 0x22, 0x0c, 0xbd,
	0x69, 0x46, 0x22, 0x1a, 0x99, 0x25, 0xd8, 0x62, 0x09, 0x6a, 0x67, 0xe8, 0x3e, 0x38, 0x34, 0x4b,
	0xb7, 0x3d, 0xb4, 0x46, 0xdd, 0xf1, 0x2d, 0x95, 0xac, 0x28, 0x40, 0xc0, 0x1c, 0xf0, 0xb7, 0x70,
	0x36, 0x89, 0xe3, 0x39, 0xd9, 0x04, 0xe4, 0xd7, 0x77, 0x24, 0x2f, 0xd0, 0x3d, 0x46, 0x9d, 0x31,
	0xee, 0x8e, 0x3f, 0xaa, 0x7c, 0x18, 0xb0, 0xb4, 0x86, 0xd0, 0x0d, 0x8b, 0xec, 0x55, 0x94, 0xe7,
	0xef, 0xd3, 0x2c, 0x16, 0x99, 0xa8, 0x47, 0xf8, 0x01, 0xf4, 0x25, 0x6a, 0xbe, 0x4e, 0x93, 0x9c,
	0xd0, 0x74, 0xc2, 0x77, 0x8b, 0x05, 0xc9, 0x73, 0x06, 0x7d, 0x1a, 0x48, 0x13, 0xff, 0x08, 0x67,
	0xcf, 0x49, 0xa1, 0x30, 0x30, 0x57, 0x6d, 0x00, 0x2d, 0xca, 0x5c, 0x16, 0x8e, 0x1b, 0x55, 0x2a,
	0xcd, 0x3a, 0x95, 0x27, 0xd0, 0x97, 0xf0, 0x82, 0xca, 0xe1, 0x0c, 0xf1, 0x05, 0x0c, 0x26, 0xf1,
	0xcd, 0x32, 0x79, 0xb1, 0xcc, 0xe9, 0xa7, 0xb9, 0xa0, 0x86, 0x9f, 0xc2, 0xed, 0xca, 0xb9, 0xc0,
	0xfc, 0x02, 0x1c, 0x6a, 0x8b, 0x56, 0xaa, 0x81, 0xb2, 0x4b, 0xfc, 0x48, 0x7c, 0x3d, 0x23, 0x2b,
	0x52, 0x10, 0x3d, 0x63, 0x9e, 0x9b, 0xa5, 0xe4, 0x86, 0xc7, 0x70, 0x51, 0x75, 0x3f, 0x58, 0xcc,
	0x6b, 0x11, 0x82, 0xf7, 0xed, 0xa1, 0x10, 0x47, 0xbc, 0xe4, 0x37, 0x82, 0x84, 0x02, 0x78, 0x7c,
	0x19, 0x3f, 0x08, 0x36, 0x7c, 0x2e, 0xfe, 0xe7, 0x26, 0x43, 0x1e, 0x9c, 0x5e, 0xff, 0x46, 0xb2,
	0x6c, 0x19, 0xf3, 0x21, 0x3f, 0x0d, 0xb6, 0xf6, 0xb6, 0x76, 0x4a, 0xe4, 0x83, 0xb5, 0x9b, 0x0a,
	0xb6, 0x6c, 0x90, 0x0e, 0x3e, 0x4f, 0x39, 0xb6, 0xb6, 0x32, 0xb6, 0xdb, 0xc0, 0x0a, 0xc8, 0xc1,
	0xc0, 0x4f, 0xa1, 0xfd, 0x2a, 0xca, 0xa2, 0x9b, 0x9c, 0x62, 0x5e, 0xa5, 0xc9, 0x82, 0x30, 0x8f,
	0x5e, 0xc0, 0x0d, 0xf4, 0x39, 0x74, 0x2e, 0x57, 0xe9, 0xe2, 0x97, 0x70, 0xf9, 0xbb, 0x14, 0xbf,
	0xf2, 0x00, 0xff, 0x65, 0xc1, 0xc9, 0x55, 0x1a, 0xd3, 0x58, 0xe8, 0x02, 0xda, 0xf4, 0xa7, 0x1f,
	0x0b, 0xaa, 0xc2, 0xa2, 0xe7, 0xdf, 0xe5, 0x24, 0xf3, 0x65, 0x1d, 0x85, 0x45, 0x39, 0xb1, 0xe9,
	0xf2, 0xe5, 0xe8, 0x48, 0xb3, 0x64, 0xe2, 0xec, 0x64, 0xd2, 0xaa, 0x30, 0x11, 0x8a, 0x1b, 0x31,
	0xd1, 0xe9, 0x31, 0xc5, 0x8d, 0xf0, 0x23, 0x38, 0xe7, 0xfd, 0x4b, 0x99, 0xc8, 0x82, 0xba, 0x9c,
	0xb1, 0x1f, 0xf3, 0x81, 0xe9, 0x04, 0xd2, 0xc4, 0x57, 0x80, 0x54, 0x77, 0x51, 0xba, 0xbb, 0x00,
	0x93, 0xd5, 0x8a, 0x5f, 0xc4, 0xa2, 0x7a, 0xca, 0x09, 0xc5, 0x93, 0x97, 0x36, 0xc7, 0x13, 0x26,
	0xfe, 0x01, 0x06, 0x21, 0x29, 0x28, 0x18, 0xaf, 0xb0, 0x64, 0xb0, 0xab, 0x50, 0x0f, 0xe4, 0x53,
	0xb0, 0x42, 0x55, 0x64, 0x5e, 0x40, 0x08, 0x0f, 0xfc, 0x09, 0xdc, 0xae, 0x60, 0x73, 0xba, 0x78,
	0x0a, 0xe7, 0xcf, 0xf9, 0x85, 0xd2, 0x44, 0xff, 0xf1, 0x69, 0xf0, 0x1f, 0x16, 0x20, 0x15, 0xa5,
	0xec, 0x22, 0xf9, 0x62, 0x96, 0xfe, 0x62, 0x18, 0x7a, 0xcf, 0x38, 0x57, 0x42, 0x95, 0x97, 0xc1,
	0xf5, 0x02, 0xed, 0xac, 0x7c, 0xd5, 0xe6, 0xce, 0x57, 0x75, 0xaa, 0xfd, 0xf5, 0x35, 0x9c, 0x87,
	0xb5, 0x6c, 0xbe, 0x54, 0x07, 0x58, 0x5b, 0x2f, 0xd2, 0x91, 0x09, 0xc0, 0x00, 0x50, 0x58, 0xcb,
	0x01, 0xcf, 0x60, 0x50, 0x3e, 0xf2, 0x11, 0x25, 0x1a, 0x40, 0x8b, 0x16, 0x25, 0x77, 0x9b, 0xec,
	0x71, 0xb9, 0x41, 0xcb, 0x5f, 0x41, 0x11, 0xf0, 0x31, 0x78, 0xe5, 0x45, 0xf8, 0x36, 0xca, 0x48,
	0x7c, 0x44, 0x10, 0xa5, 0xb0, 0x76, 0x6d, 0x14, 0x0c, 0xe1, 0xef, 0xc0, 0x67, 0xc6, 0x28, 0x9c,
	0xc4, 0xf8, 0x1f, 0x07, 0x7a, 0xd4, 0x71, 0x4e, 0x36, 0x61, 0x91, 0x66, 0x04, 0x4d, 0xa0, 0xcd,
	0x57, 0x22, 0xfa, 0x54, 0x2d, 0x97, 0xb6, 0x7c, 0x3d, 0xcf, 0x74, 0x25, 0xd2, 0x6a, 0x50, 0x08,
	0xbe, 0xca, 0x74, 0x08, 0x6d, 0x7b, 0xea, 0x10, 0xfa, 0xe6, 0xc3, 0x0d, 0xf4, 0x9a, 0xae, 0x7b,
	0x65, 0x81, 0xa1, 0xa1, 0x1e, 0xb1, 0xbe, 0xf3, 0xbc, 0x7b, 0x7b, 0x3c, 0xb6, 0xb8, 0xdf, 0xd3,
	0x85, 0xaf, 0xca, 0x1e, 0xaa, 0x7f, 0x56, 0xd5, 0x55, 0x0f, 0xef, 0x73, 0xa9, 0x41, 0x6f, 0xd7,
	0xa0, 0x01, 0xba, 0xba, 0x51, 0x0d, 0xd0, 0xb5, 0x2d, 0xaa, 0x40, 0x6f, 0x97, 0x9b, 0x01, 0xba,
	0xba, 0x49, 0x0d, 0xd0, 0xb5, 0xdd, 0xa8, 0x40, 0x6f, 0x17, 0x90, 0x01, 0xba, 0xba, 0x16, 0x0d,
	0xd0, 0xb5, 0xfd, 0x85, 0x1b, 0xe3, 0x3f, 0x1d, 0xe8, 0x8b, 0x9e, 0x7f, 0x19, 0x25, 0xd1, 0xcf,
	0x24, 0x43, 0x2f, 0x01, 0xca, 0x66, 0x44, 0x77, 0x54, 0x98, 0x9a, 0xfa, 0x7a, 0x77, 0x77, 0x5d,
	0xab, 0x5d, 0xa2, 0x29, 0x9b, 0xde, 0x25, 0x26, 0x41, 0xd5, 0xbb, 0xc4, 0x2c, 0x8b, 0x0d, 0x4a,
	0xb3, 0x94, 0x34, 0x9d, 0x66, 0x4d, 0x30, 0x75, 0x9a, 0x75, 0x25, 0xe4, 0x70, 0xe1, 0x0e, 0xb8,
	0x70, 0x3f, 0x5c, 0x68, 0x82, 0x7b, 0x0d, 0x67, 0x9a, 0xa0, 0xe8, 0x59, 0x9b, 0x14, 0x4b, 0xcf,
	0xda, 0xac, 0x46, 0x0d, 0xf4, 0x16, 0x6e, 0x19, 0x94, 0x02, 0x7d, 0x65, 0xfe, 0xb6, 0x2a, 0x58,
	0xde, 0xfd, 0x83, 0x7e, 0x32, 0xd2, 0x9b, 0x36, 0xfb, 0x37, 0xf5, 0xe4, 0xdf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xa2, 0xb6, 0xb9, 0x7d, 0x61, 0x0d, 0x00, 0x00,
}
