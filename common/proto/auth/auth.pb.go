// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

/*
Package auth is a generated protocol buffer package.

It is generated from these files:
	auth.proto
	ldap.proto

It has these top-level messages:
	Token
	MatchInvalidTokenRequest
	MatchInvalidTokenResponse
	RevokeTokenRequest
	RevokeTokenResponse
	PruneTokensRequest
	PruneTokensResponse
	LdapSearchFilter
	LdapMapping
	LdapMemberOfMapping
	LdapServerConfig
*/
package auth

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type State int32

const (
	State_NO_MATCH State = 0
	State_REVOKED  State = 1
)

var State_name = map[int32]string{
	0: "NO_MATCH",
	1: "REVOKED",
}
var State_value = map[string]int32{
	"NO_MATCH": 0,
	"REVOKED":  1,
}

func (x State) String() string {
	return proto.EnumName(State_name, int32(x))
}
func (State) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Token struct {
	Value          string `protobuf:"bytes,1,opt,name=Value" json:"Value,omitempty"`
	AdditionalInfo string `protobuf:"bytes,2,opt,name=AdditionalInfo" json:"AdditionalInfo,omitempty"`
}

func (m *Token) Reset()                    { *m = Token{} }
func (m *Token) String() string            { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()               {}
func (*Token) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Token) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Token) GetAdditionalInfo() string {
	if m != nil {
		return m.AdditionalInfo
	}
	return ""
}

type MatchInvalidTokenRequest struct {
	Token string `protobuf:"bytes,1,opt,name=Token" json:"Token,omitempty"`
}

func (m *MatchInvalidTokenRequest) Reset()                    { *m = MatchInvalidTokenRequest{} }
func (m *MatchInvalidTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*MatchInvalidTokenRequest) ProtoMessage()               {}
func (*MatchInvalidTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *MatchInvalidTokenRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type MatchInvalidTokenResponse struct {
	State          State  `protobuf:"varint,1,opt,name=State,enum=auth.State" json:"State,omitempty"`
	RevocationInfo string `protobuf:"bytes,2,opt,name=RevocationInfo" json:"RevocationInfo,omitempty"`
}

func (m *MatchInvalidTokenResponse) Reset()                    { *m = MatchInvalidTokenResponse{} }
func (m *MatchInvalidTokenResponse) String() string            { return proto.CompactTextString(m) }
func (*MatchInvalidTokenResponse) ProtoMessage()               {}
func (*MatchInvalidTokenResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *MatchInvalidTokenResponse) GetState() State {
	if m != nil {
		return m.State
	}
	return State_NO_MATCH
}

func (m *MatchInvalidTokenResponse) GetRevocationInfo() string {
	if m != nil {
		return m.RevocationInfo
	}
	return ""
}

type RevokeTokenRequest struct {
	Token *Token `protobuf:"bytes,1,opt,name=Token" json:"Token,omitempty"`
}

func (m *RevokeTokenRequest) Reset()                    { *m = RevokeTokenRequest{} }
func (m *RevokeTokenRequest) String() string            { return proto.CompactTextString(m) }
func (*RevokeTokenRequest) ProtoMessage()               {}
func (*RevokeTokenRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RevokeTokenRequest) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

type RevokeTokenResponse struct {
	Success bool `protobuf:"varint,1,opt,name=Success" json:"Success,omitempty"`
}

func (m *RevokeTokenResponse) Reset()                    { *m = RevokeTokenResponse{} }
func (m *RevokeTokenResponse) String() string            { return proto.CompactTextString(m) }
func (*RevokeTokenResponse) ProtoMessage()               {}
func (*RevokeTokenResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *RevokeTokenResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type PruneTokensRequest struct {
}

func (m *PruneTokensRequest) Reset()                    { *m = PruneTokensRequest{} }
func (m *PruneTokensRequest) String() string            { return proto.CompactTextString(m) }
func (*PruneTokensRequest) ProtoMessage()               {}
func (*PruneTokensRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

type PruneTokensResponse struct {
	Tokens []string `protobuf:"bytes,1,rep,name=tokens" json:"tokens,omitempty"`
}

func (m *PruneTokensResponse) Reset()                    { *m = PruneTokensResponse{} }
func (m *PruneTokensResponse) String() string            { return proto.CompactTextString(m) }
func (*PruneTokensResponse) ProtoMessage()               {}
func (*PruneTokensResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *PruneTokensResponse) GetTokens() []string {
	if m != nil {
		return m.Tokens
	}
	return nil
}

func init() {
	proto.RegisterType((*Token)(nil), "auth.Token")
	proto.RegisterType((*MatchInvalidTokenRequest)(nil), "auth.MatchInvalidTokenRequest")
	proto.RegisterType((*MatchInvalidTokenResponse)(nil), "auth.MatchInvalidTokenResponse")
	proto.RegisterType((*RevokeTokenRequest)(nil), "auth.RevokeTokenRequest")
	proto.RegisterType((*RevokeTokenResponse)(nil), "auth.RevokeTokenResponse")
	proto.RegisterType((*PruneTokensRequest)(nil), "auth.PruneTokensRequest")
	proto.RegisterType((*PruneTokensResponse)(nil), "auth.PruneTokensResponse")
	proto.RegisterEnum("auth.State", State_name, State_value)
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0x4d, 0x4f, 0xfa, 0x40,
	0x10, 0xc6, 0xe9, 0xff, 0x2f, 0x6f, 0x53, 0x42, 0xc8, 0x40, 0x4c, 0xe1, 0xa0, 0xb0, 0x07, 0x43,
	0x4c, 0x44, 0x83, 0x07, 0x8f, 0x86, 0x08, 0x89, 0xc4, 0x20, 0xba, 0x10, 0xae, 0x66, 0x2d, 0x4b,
	0x20, 0x90, 0x2e, 0xd2, 0x2d, 0x9f, 0xda, 0x0f, 0x61, 0xf6, 0xa5, 0xa6, 0x15, 0xb8, 0xf1, 0x3c,
	0x33, 0xf3, 0xec, 0x6f, 0x86, 0x02, 0xb0, 0x48, 0x2e, 0x3b, 0xdb, 0x9d, 0x90, 0x02, 0xcf, 0xd4,
	0x6f, 0x32, 0x80, 0xec, 0x54, 0xac, 0x79, 0x80, 0x35, 0xc8, 0xce, 0xd8, 0x26, 0xe2, 0x9e, 0xd3,
	0x74, 0xda, 0x45, 0x6a, 0x04, 0x5e, 0x41, 0xb9, 0x37, 0x9f, 0xaf, 0xe4, 0x4a, 0x04, 0x6c, 0x33,
	0x0c, 0x16, 0xc2, 0xfb, 0xa7, 0xcb, 0x7f, 0x5c, 0x72, 0x07, 0xde, 0x88, 0x49, 0x7f, 0x39, 0x0c,
	0xf6, 0x6c, 0xb3, 0x9a, 0xeb, 0x48, 0xca, 0xbf, 0x22, 0x1e, 0x4a, 0x95, 0xac, 0x75, 0x9c, 0xac,
	0x05, 0x59, 0x40, 0xfd, 0xc8, 0x44, 0xb8, 0x15, 0x41, 0xc8, 0xb1, 0x05, 0xd9, 0x89, 0x64, 0xd2,
	0xc0, 0x94, 0xbb, 0x6e, 0x47, 0x73, 0x6b, 0x8b, 0x9a, 0x8a, 0x22, 0xa3, 0x7c, 0x2f, 0x7c, 0xa6,
	0x28, 0x92, 0x64, 0x69, 0x97, 0x3c, 0x00, 0x2a, 0x67, 0xcd, 0x53, 0x4c, 0xad, 0x24, 0x93, 0x1b,
	0x3f, 0x60, 0x5a, 0x2c, 0xe0, 0x2d, 0x54, 0x53, 0x83, 0x16, 0xcd, 0x83, 0xfc, 0x24, 0xf2, 0x7d,
	0x1e, 0x86, 0x7a, 0xb6, 0x40, 0x63, 0x49, 0x6a, 0x80, 0x6f, 0xbb, 0x28, 0x30, 0xfd, 0xa1, 0x7d,
	0x89, 0xdc, 0x40, 0x35, 0xe5, 0xda, 0x98, 0x73, 0xc8, 0x49, 0xed, 0x78, 0x4e, 0xf3, 0x7f, 0xbb,
	0x48, 0xad, 0xba, 0x26, 0x76, 0x73, 0x2c, 0x41, 0xe1, 0x75, 0xfc, 0x31, 0xea, 0x4d, 0x9f, 0x9e,
	0x2b, 0x19, 0x74, 0x21, 0x4f, 0x07, 0xb3, 0xf1, 0xcb, 0xa0, 0x5f, 0x71, 0xba, 0xdf, 0x0e, 0x54,
	0x7a, 0x91, 0x5c, 0x5a, 0x30, 0xc5, 0xb8, 0xc3, 0x77, 0x28, 0x25, 0xef, 0x89, 0x17, 0x66, 0xa5,
	0x53, 0xff, 0x4a, 0xe3, 0xf2, 0x64, 0xdd, 0x10, 0x92, 0x0c, 0x3e, 0x42, 0xce, 0xa4, 0xa3, 0x67,
	0x9a, 0x0f, 0x0f, 0xd9, 0xa8, 0x1f, 0xa9, 0xfc, 0x06, 0xf4, 0xc1, 0x4d, 0xec, 0x1e, 0xa7, 0x1c,
	0x1e, 0x29, 0x4e, 0x39, 0x72, 0x28, 0x92, 0xf9, 0xcc, 0xe9, 0xef, 0xf5, 0xfe, 0x27, 0x00, 0x00,
	0xff, 0xff, 0x5f, 0x36, 0x50, 0x49, 0xbd, 0x02, 0x00, 0x00,
}
