// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ldap.proto

package auth

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type LdapSearchFilter struct {
	DNs              []string `protobuf:"bytes,1,rep,name=DNs" json:"DNs,omitempty"`
	Filter           string   `protobuf:"bytes,2,opt,name=Filter" json:"Filter,omitempty"`
	IDAttribute      string   `protobuf:"bytes,3,opt,name=IDAttribute" json:"IDAttribute,omitempty"`
	DisplayAttribute string   `protobuf:"bytes,4,opt,name=DisplayAttribute" json:"DisplayAttribute,omitempty"`
	Scope            string   `protobuf:"bytes,5,opt,name=Scope" json:"Scope,omitempty"`
}

func (m *LdapSearchFilter) Reset()                    { *m = LdapSearchFilter{} }
func (m *LdapSearchFilter) String() string            { return proto.CompactTextString(m) }
func (*LdapSearchFilter) ProtoMessage()               {}
func (*LdapSearchFilter) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *LdapSearchFilter) GetDNs() []string {
	if m != nil {
		return m.DNs
	}
	return nil
}

func (m *LdapSearchFilter) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *LdapSearchFilter) GetIDAttribute() string {
	if m != nil {
		return m.IDAttribute
	}
	return ""
}

func (m *LdapSearchFilter) GetDisplayAttribute() string {
	if m != nil {
		return m.DisplayAttribute
	}
	return ""
}

func (m *LdapSearchFilter) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

type LdapMapping struct {
	LeftAttribute  string `protobuf:"bytes,1,opt,name=LeftAttribute" json:"LeftAttribute,omitempty"`
	RightAttribute string `protobuf:"bytes,2,opt,name=RightAttribute" json:"RightAttribute,omitempty"`
	RuleString     string `protobuf:"bytes,3,opt,name=RuleString" json:"RuleString,omitempty"`
	RolePrefix     string `protobuf:"bytes,4,opt,name=RolePrefix" json:"RolePrefix,omitempty"`
}

func (m *LdapMapping) Reset()                    { *m = LdapMapping{} }
func (m *LdapMapping) String() string            { return proto.CompactTextString(m) }
func (*LdapMapping) ProtoMessage()               {}
func (*LdapMapping) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *LdapMapping) GetLeftAttribute() string {
	if m != nil {
		return m.LeftAttribute
	}
	return ""
}

func (m *LdapMapping) GetRightAttribute() string {
	if m != nil {
		return m.RightAttribute
	}
	return ""
}

func (m *LdapMapping) GetRuleString() string {
	if m != nil {
		return m.RuleString
	}
	return ""
}

func (m *LdapMapping) GetRolePrefix() string {
	if m != nil {
		return m.RolePrefix
	}
	return ""
}

type LdapMemberOfMapping struct {
	Mapping                  *LdapMapping      `protobuf:"bytes,1,opt,name=Mapping" json:"Mapping,omitempty"`
	GroupFilter              *LdapSearchFilter `protobuf:"bytes,2,opt,name=GroupFilter" json:"GroupFilter,omitempty"`
	SupportNestedGroup       bool              `protobuf:"varint,3,opt,name=SupportNestedGroup" json:"SupportNestedGroup,omitempty"`
	RealMemberOf             bool              `protobuf:"varint,4,opt,name=RealMemberOf" json:"RealMemberOf,omitempty"`
	RealMemberOfAttribute    string            `protobuf:"bytes,5,opt,name=RealMemberOfAttribute" json:"RealMemberOfAttribute,omitempty"`
	RealMemberOfValueFormat  string            `protobuf:"bytes,6,opt,name=RealMemberOfValueFormat" json:"RealMemberOfValueFormat,omitempty"`
	PydioMemberOfAttribute   string            `protobuf:"bytes,7,opt,name=PydioMemberOfAttribute" json:"PydioMemberOfAttribute,omitempty"`
	PydioMemberOfValueFormat string            `protobuf:"bytes,8,opt,name=PydioMemberOfValueFormat" json:"PydioMemberOfValueFormat,omitempty"`
}

func (m *LdapMemberOfMapping) Reset()                    { *m = LdapMemberOfMapping{} }
func (m *LdapMemberOfMapping) String() string            { return proto.CompactTextString(m) }
func (*LdapMemberOfMapping) ProtoMessage()               {}
func (*LdapMemberOfMapping) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *LdapMemberOfMapping) GetMapping() *LdapMapping {
	if m != nil {
		return m.Mapping
	}
	return nil
}

func (m *LdapMemberOfMapping) GetGroupFilter() *LdapSearchFilter {
	if m != nil {
		return m.GroupFilter
	}
	return nil
}

func (m *LdapMemberOfMapping) GetSupportNestedGroup() bool {
	if m != nil {
		return m.SupportNestedGroup
	}
	return false
}

func (m *LdapMemberOfMapping) GetRealMemberOf() bool {
	if m != nil {
		return m.RealMemberOf
	}
	return false
}

func (m *LdapMemberOfMapping) GetRealMemberOfAttribute() string {
	if m != nil {
		return m.RealMemberOfAttribute
	}
	return ""
}

func (m *LdapMemberOfMapping) GetRealMemberOfValueFormat() string {
	if m != nil {
		return m.RealMemberOfValueFormat
	}
	return ""
}

func (m *LdapMemberOfMapping) GetPydioMemberOfAttribute() string {
	if m != nil {
		return m.PydioMemberOfAttribute
	}
	return ""
}

func (m *LdapMemberOfMapping) GetPydioMemberOfValueFormat() string {
	if m != nil {
		return m.PydioMemberOfValueFormat
	}
	return ""
}

type LdapServerConfig struct {
	ConfigId              string `protobuf:"bytes,1,opt,name=ConfigId" json:"ConfigId,omitempty"`
	DomainName            string `protobuf:"bytes,2,opt,name=DomainName" json:"DomainName,omitempty"`
	Host                  string `protobuf:"bytes,3,opt,name=Host" json:"Host,omitempty"`
	Connection            string `protobuf:"bytes,4,opt,name=Connection" json:"Connection,omitempty"`
	BindDN                string `protobuf:"bytes,5,opt,name=BindDN" json:"BindDN,omitempty"`
	BindPW                string `protobuf:"bytes,6,opt,name=BindPW" json:"BindPW,omitempty"`
	SkipVerifyCertificate bool   `protobuf:"varint,7,opt,name=SkipVerifyCertificate" json:"SkipVerifyCertificate,omitempty"`
	RootCA                string `protobuf:"bytes,8,opt,name=RootCA" json:"RootCA,omitempty"`
	// To be converted to []byte
	RootCAData       string               `protobuf:"bytes,9,opt,name=RootCAData" json:"RootCAData,omitempty"`
	PageSize         int32                `protobuf:"varint,10,opt,name=PageSize" json:"PageSize,omitempty"`
	User             *LdapSearchFilter    `protobuf:"bytes,11,opt,name=User" json:"User,omitempty"`
	MappingRules     []*LdapMapping       `protobuf:"bytes,12,rep,name=MappingRules" json:"MappingRules,omitempty"`
	MemberOfMapping  *LdapMemberOfMapping `protobuf:"bytes,13,opt,name=MemberOfMapping" json:"MemberOfMapping,omitempty"`
	RolePrefix       string               `protobuf:"bytes,14,opt,name=RolePrefix" json:"RolePrefix,omitempty"`
	Schedule         string               `protobuf:"bytes,15,opt,name=Schedule" json:"Schedule,omitempty"`
	SchedulerDetails string               `protobuf:"bytes,16,opt,name=SchedulerDetails" json:"SchedulerDetails,omitempty"`
}

func (m *LdapServerConfig) Reset()                    { *m = LdapServerConfig{} }
func (m *LdapServerConfig) String() string            { return proto.CompactTextString(m) }
func (*LdapServerConfig) ProtoMessage()               {}
func (*LdapServerConfig) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *LdapServerConfig) GetConfigId() string {
	if m != nil {
		return m.ConfigId
	}
	return ""
}

func (m *LdapServerConfig) GetDomainName() string {
	if m != nil {
		return m.DomainName
	}
	return ""
}

func (m *LdapServerConfig) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *LdapServerConfig) GetConnection() string {
	if m != nil {
		return m.Connection
	}
	return ""
}

func (m *LdapServerConfig) GetBindDN() string {
	if m != nil {
		return m.BindDN
	}
	return ""
}

func (m *LdapServerConfig) GetBindPW() string {
	if m != nil {
		return m.BindPW
	}
	return ""
}

func (m *LdapServerConfig) GetSkipVerifyCertificate() bool {
	if m != nil {
		return m.SkipVerifyCertificate
	}
	return false
}

func (m *LdapServerConfig) GetRootCA() string {
	if m != nil {
		return m.RootCA
	}
	return ""
}

func (m *LdapServerConfig) GetRootCAData() string {
	if m != nil {
		return m.RootCAData
	}
	return ""
}

func (m *LdapServerConfig) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *LdapServerConfig) GetUser() *LdapSearchFilter {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *LdapServerConfig) GetMappingRules() []*LdapMapping {
	if m != nil {
		return m.MappingRules
	}
	return nil
}

func (m *LdapServerConfig) GetMemberOfMapping() *LdapMemberOfMapping {
	if m != nil {
		return m.MemberOfMapping
	}
	return nil
}

func (m *LdapServerConfig) GetRolePrefix() string {
	if m != nil {
		return m.RolePrefix
	}
	return ""
}

func (m *LdapServerConfig) GetSchedule() string {
	if m != nil {
		return m.Schedule
	}
	return ""
}

func (m *LdapServerConfig) GetSchedulerDetails() string {
	if m != nil {
		return m.SchedulerDetails
	}
	return ""
}

func init() {
	proto.RegisterType((*LdapSearchFilter)(nil), "auth.LdapSearchFilter")
	proto.RegisterType((*LdapMapping)(nil), "auth.LdapMapping")
	proto.RegisterType((*LdapMemberOfMapping)(nil), "auth.LdapMemberOfMapping")
	proto.RegisterType((*LdapServerConfig)(nil), "auth.LdapServerConfig")
}

func init() { proto.RegisterFile("ldap.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 596 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0xcd, 0x6e, 0x13, 0x31,
	0x10, 0x56, 0x48, 0xda, 0xa6, 0x93, 0xfe, 0x04, 0x03, 0xc5, 0x70, 0x40, 0x51, 0x84, 0x50, 0x55,
	0xa4, 0x1c, 0xca, 0x8f, 0x2a, 0x6e, 0x25, 0xab, 0x42, 0xa5, 0x12, 0x22, 0xaf, 0x28, 0x67, 0x37,
	0x3b, 0x49, 0x2c, 0x36, 0xeb, 0x95, 0xd7, 0x8b, 0x28, 0xaf, 0xc2, 0x85, 0x87, 0xe0, 0x31, 0x78,
	0x28, 0x64, 0xaf, 0xdd, 0x38, 0xdb, 0x94, 0xdb, 0xcc, 0xf7, 0x7d, 0xb3, 0x3b, 0x1e, 0x7f, 0x63,
	0x80, 0x34, 0xe1, 0xf9, 0x20, 0x57, 0x52, 0x4b, 0xd2, 0xe2, 0xa5, 0x9e, 0xf7, 0x7f, 0x37, 0xa0,
	0x7b, 0x91, 0xf0, 0x3c, 0x46, 0xae, 0x26, 0xf3, 0x33, 0x91, 0x6a, 0x54, 0xa4, 0x0b, 0xcd, 0x68,
	0x54, 0xd0, 0x46, 0xaf, 0x79, 0xb8, 0xcd, 0x4c, 0x48, 0x0e, 0x60, 0xb3, 0xe2, 0xe8, 0xbd, 0x5e,
	0xe3, 0x70, 0x9b, 0xb9, 0x8c, 0xf4, 0xa0, 0x73, 0x1e, 0x9d, 0x6a, 0xad, 0xc4, 0x55, 0xa9, 0x91,
	0x36, 0x2d, 0x19, 0x42, 0xe4, 0x08, 0xba, 0x91, 0x28, 0xf2, 0x94, 0x5f, 0x2f, 0x65, 0x2d, 0x2b,
	0xbb, 0x85, 0x93, 0x87, 0xb0, 0x11, 0x4f, 0x64, 0x8e, 0x74, 0xc3, 0x0a, 0xaa, 0xa4, 0xff, 0xab,
	0x01, 0x1d, 0xd3, 0xe2, 0x27, 0x9e, 0xe7, 0x22, 0x9b, 0x91, 0xe7, 0xb0, 0x7b, 0x81, 0x53, 0xbd,
	0xfc, 0x5c, 0xc3, 0xaa, 0x57, 0x41, 0xf2, 0x02, 0xf6, 0x98, 0x98, 0xcd, 0x03, 0x59, 0xd5, 0x79,
	0x0d, 0x25, 0xcf, 0x00, 0x58, 0x99, 0x62, 0xac, 0x95, 0xc8, 0x66, 0xee, 0x00, 0x01, 0x62, 0x79,
	0x99, 0xe2, 0x58, 0xe1, 0x54, 0xfc, 0x70, 0x9d, 0x07, 0x48, 0xff, 0x4f, 0x13, 0x1e, 0xd8, 0xee,
	0x70, 0x71, 0x85, 0xea, 0xf3, 0xd4, 0x77, 0xf9, 0x12, 0xb6, 0x5c, 0x68, 0xfb, 0xeb, 0x1c, 0xdf,
	0x1f, 0x98, 0x81, 0x0f, 0x82, 0x93, 0x30, 0xaf, 0x20, 0x27, 0xd0, 0xf9, 0xa0, 0x64, 0x99, 0x07,
	0x33, 0xee, 0x1c, 0x1f, 0x2c, 0x0b, 0xc2, 0xdb, 0x61, 0xa1, 0x94, 0x0c, 0x80, 0xc4, 0x65, 0x9e,
	0x4b, 0xa5, 0x47, 0x58, 0x68, 0x4c, 0x2c, 0x67, 0x8f, 0xd1, 0x66, 0x6b, 0x18, 0xd2, 0x87, 0x1d,
	0x86, 0x3c, 0xf5, 0xdd, 0xda, 0x03, 0xb5, 0xd9, 0x0a, 0x46, 0x5e, 0xc3, 0xa3, 0x30, 0x5f, 0x4e,
	0xb0, 0xba, 0x96, 0xf5, 0x24, 0x39, 0x81, 0xc7, 0x21, 0x71, 0xc9, 0xd3, 0x12, 0xcf, 0xa4, 0x5a,
	0x70, 0x4d, 0x37, 0x6d, 0xdd, 0x5d, 0x34, 0x79, 0x0b, 0x07, 0xe3, 0xeb, 0x44, 0xc8, 0xdb, 0x3f,
	0xdc, 0xb2, 0x85, 0x77, 0xb0, 0xe4, 0x1d, 0xd0, 0x15, 0x26, 0xfc, 0x65, 0xdb, 0x56, 0xde, 0xc9,
	0xf7, 0xff, 0xb6, 0xbc, 0xef, 0xd5, 0x77, 0x54, 0x43, 0x99, 0x4d, 0xc5, 0x8c, 0x3c, 0x85, 0x76,
	0x15, 0x9d, 0x27, 0xce, 0x54, 0x37, 0xb9, 0xf1, 0x41, 0x24, 0x17, 0x5c, 0x64, 0x23, 0xbe, 0xf0,
	0x5e, 0x0a, 0x10, 0x42, 0xa0, 0xf5, 0x51, 0x16, 0xda, 0x39, 0xc8, 0xc6, 0xa6, 0x66, 0x28, 0xb3,
	0x0c, 0x27, 0x5a, 0xc8, 0xcc, 0x7b, 0x67, 0x89, 0x98, 0xad, 0x7a, 0x2f, 0xb2, 0x24, 0x1a, 0xb9,
	0xc9, 0xba, 0xcc, 0xe3, 0xe3, 0xaf, 0x6e, 0x72, 0x2e, 0x33, 0x17, 0x13, 0x7f, 0x13, 0xf9, 0x25,
	0x2a, 0x31, 0xbd, 0x1e, 0xa2, 0xd2, 0x62, 0x2a, 0x26, 0xdc, 0xcd, 0xa9, 0xcd, 0xd6, 0x93, 0xe6,
	0x6b, 0x4c, 0x4a, 0x3d, 0x3c, 0x75, 0x43, 0x71, 0x59, 0xe5, 0x6c, 0x13, 0x45, 0x5c, 0x73, 0xba,
	0xed, 0x9d, 0xed, 0x11, 0x33, 0x8d, 0x31, 0x9f, 0x61, 0x2c, 0x7e, 0x22, 0x85, 0x5e, 0xe3, 0x70,
	0x83, 0xdd, 0xe4, 0xe4, 0x08, 0x5a, 0x5f, 0x0a, 0x54, 0xb4, 0xf3, 0x5f, 0xa7, 0x5a, 0x0d, 0x79,
	0x03, 0x3b, 0xde, 0xf0, 0x65, 0x8a, 0x05, 0xdd, 0xe9, 0x35, 0xd7, 0xaf, 0xc3, 0x8a, 0x8c, 0x0c,
	0x61, 0xbf, 0xb6, 0x53, 0x74, 0xd7, 0xfe, 0xed, 0x49, 0x50, 0xb9, 0x2a, 0x60, 0xf5, 0x8a, 0xda,
	0xf6, 0xee, 0xd5, 0xb7, 0xd7, 0x9c, 0x31, 0x9e, 0xcc, 0x31, 0x29, 0x53, 0xa4, 0xfb, 0xd5, 0x8d,
	0xfb, 0xdc, 0xbc, 0x5c, 0x3e, 0x56, 0x11, 0x6a, 0x2e, 0xd2, 0x82, 0x76, 0xab, 0x97, 0xab, 0x8e,
	0x5f, 0x6d, 0xda, 0x37, 0xf5, 0xd5, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x44, 0x07, 0x62, 0xa2,
	0x61, 0x05, 0x00, 0x00,
}
