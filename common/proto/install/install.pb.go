// Code generated by protoc-gen-go. DO NOT EDIT.
// source: install.proto

/*
Package install is a generated protocol buffer package.

It is generated from these files:
	install.proto

It has these top-level messages:
	InstallConfig
	CheckResult
	PerformCheckRequest
	PerformCheckResponse
	GetDefaultsRequest
	GetDefaultsResponse
	GetAgreementRequest
	GetAgreementResponse
	InstallRequest
	InstallResponse
*/
package install

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type InstallConfig struct {
	InternalUrl              string         `protobuf:"bytes,32,opt,name=internalUrl" json:"internalUrl,omitempty"`
	DbConnectionType         string         `protobuf:"bytes,1,opt,name=dbConnectionType" json:"dbConnectionType,omitempty"`
	DbTCPHostname            string         `protobuf:"bytes,2,opt,name=dbTCPHostname" json:"dbTCPHostname,omitempty"`
	DbTCPPort                string         `protobuf:"bytes,3,opt,name=dbTCPPort" json:"dbTCPPort,omitempty"`
	DbTCPName                string         `protobuf:"bytes,4,opt,name=dbTCPName" json:"dbTCPName,omitempty"`
	DbTCPUser                string         `protobuf:"bytes,5,opt,name=dbTCPUser" json:"dbTCPUser,omitempty"`
	DbTCPPassword            string         `protobuf:"bytes,6,opt,name=dbTCPPassword" json:"dbTCPPassword,omitempty"`
	DbSocketFile             string         `protobuf:"bytes,7,opt,name=dbSocketFile" json:"dbSocketFile,omitempty"`
	DbSocketName             string         `protobuf:"bytes,8,opt,name=dbSocketName" json:"dbSocketName,omitempty"`
	DbSocketUser             string         `protobuf:"bytes,9,opt,name=dbSocketUser" json:"dbSocketUser,omitempty"`
	DbSocketPassword         string         `protobuf:"bytes,10,opt,name=dbSocketPassword" json:"dbSocketPassword,omitempty"`
	DbManualDSN              string         `protobuf:"bytes,11,opt,name=dbManualDSN" json:"dbManualDSN,omitempty"`
	DsName                   string         `protobuf:"bytes,12,opt,name=dsName" json:"dsName,omitempty"`
	DsPort                   string         `protobuf:"bytes,13,opt,name=dsPort" json:"dsPort,omitempty"`
	DsFolder                 string         `protobuf:"bytes,14,opt,name=dsFolder" json:"dsFolder,omitempty"`
	ExternalMicro            string         `protobuf:"bytes,15,opt,name=externalMicro" json:"externalMicro,omitempty"`
	ExternalGateway          string         `protobuf:"bytes,16,opt,name=externalGateway" json:"externalGateway,omitempty"`
	ExternalWebsocket        string         `protobuf:"bytes,17,opt,name=externalWebsocket" json:"externalWebsocket,omitempty"`
	ExternalFrontPlugins     string         `protobuf:"bytes,18,opt,name=externalFrontPlugins" json:"externalFrontPlugins,omitempty"`
	ExternalDAV              string         `protobuf:"bytes,19,opt,name=externalDAV" json:"externalDAV,omitempty"`
	ExternalWOPI             string         `protobuf:"bytes,20,opt,name=externalWOPI" json:"externalWOPI,omitempty"`
	ExternalDex              string         `protobuf:"bytes,21,opt,name=externalDex" json:"externalDex,omitempty"`
	ExternalDexID            string         `protobuf:"bytes,22,opt,name=externalDexID" json:"externalDexID,omitempty"`
	ExternalDexSecret        string         `protobuf:"bytes,23,opt,name=externalDexSecret" json:"externalDexSecret,omitempty"`
	FrontendHosts            string         `protobuf:"bytes,24,opt,name=frontendHosts" json:"frontendHosts,omitempty"`
	FrontendLogin            string         `protobuf:"bytes,25,opt,name=frontendLogin" json:"frontendLogin,omitempty"`
	FrontendPassword         string         `protobuf:"bytes,26,opt,name=frontendPassword" json:"frontendPassword,omitempty"`
	FrontendRepeatPassword   string         `protobuf:"bytes,27,opt,name=frontendRepeatPassword" json:"frontendRepeatPassword,omitempty"`
	FrontendApplicationTitle string         `protobuf:"bytes,28,opt,name=frontendApplicationTitle" json:"frontendApplicationTitle,omitempty"`
	FrontendDefaultLanguage  string         `protobuf:"bytes,33,opt,name=frontendDefaultLanguage" json:"frontendDefaultLanguage,omitempty"`
	LicenseRequired          bool           `protobuf:"varint,29,opt,name=licenseRequired" json:"licenseRequired,omitempty"`
	LicenseString            string         `protobuf:"bytes,30,opt,name=licenseString" json:"licenseString,omitempty"`
	CheckResults             []*CheckResult `protobuf:"bytes,31,rep,name=CheckResults" json:"CheckResults,omitempty"`
}

func (m *InstallConfig) Reset()                    { *m = InstallConfig{} }
func (m *InstallConfig) String() string            { return proto.CompactTextString(m) }
func (*InstallConfig) ProtoMessage()               {}
func (*InstallConfig) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *InstallConfig) GetInternalUrl() string {
	if m != nil {
		return m.InternalUrl
	}
	return ""
}

func (m *InstallConfig) GetDbConnectionType() string {
	if m != nil {
		return m.DbConnectionType
	}
	return ""
}

func (m *InstallConfig) GetDbTCPHostname() string {
	if m != nil {
		return m.DbTCPHostname
	}
	return ""
}

func (m *InstallConfig) GetDbTCPPort() string {
	if m != nil {
		return m.DbTCPPort
	}
	return ""
}

func (m *InstallConfig) GetDbTCPName() string {
	if m != nil {
		return m.DbTCPName
	}
	return ""
}

func (m *InstallConfig) GetDbTCPUser() string {
	if m != nil {
		return m.DbTCPUser
	}
	return ""
}

func (m *InstallConfig) GetDbTCPPassword() string {
	if m != nil {
		return m.DbTCPPassword
	}
	return ""
}

func (m *InstallConfig) GetDbSocketFile() string {
	if m != nil {
		return m.DbSocketFile
	}
	return ""
}

func (m *InstallConfig) GetDbSocketName() string {
	if m != nil {
		return m.DbSocketName
	}
	return ""
}

func (m *InstallConfig) GetDbSocketUser() string {
	if m != nil {
		return m.DbSocketUser
	}
	return ""
}

func (m *InstallConfig) GetDbSocketPassword() string {
	if m != nil {
		return m.DbSocketPassword
	}
	return ""
}

func (m *InstallConfig) GetDbManualDSN() string {
	if m != nil {
		return m.DbManualDSN
	}
	return ""
}

func (m *InstallConfig) GetDsName() string {
	if m != nil {
		return m.DsName
	}
	return ""
}

func (m *InstallConfig) GetDsPort() string {
	if m != nil {
		return m.DsPort
	}
	return ""
}

func (m *InstallConfig) GetDsFolder() string {
	if m != nil {
		return m.DsFolder
	}
	return ""
}

func (m *InstallConfig) GetExternalMicro() string {
	if m != nil {
		return m.ExternalMicro
	}
	return ""
}

func (m *InstallConfig) GetExternalGateway() string {
	if m != nil {
		return m.ExternalGateway
	}
	return ""
}

func (m *InstallConfig) GetExternalWebsocket() string {
	if m != nil {
		return m.ExternalWebsocket
	}
	return ""
}

func (m *InstallConfig) GetExternalFrontPlugins() string {
	if m != nil {
		return m.ExternalFrontPlugins
	}
	return ""
}

func (m *InstallConfig) GetExternalDAV() string {
	if m != nil {
		return m.ExternalDAV
	}
	return ""
}

func (m *InstallConfig) GetExternalWOPI() string {
	if m != nil {
		return m.ExternalWOPI
	}
	return ""
}

func (m *InstallConfig) GetExternalDex() string {
	if m != nil {
		return m.ExternalDex
	}
	return ""
}

func (m *InstallConfig) GetExternalDexID() string {
	if m != nil {
		return m.ExternalDexID
	}
	return ""
}

func (m *InstallConfig) GetExternalDexSecret() string {
	if m != nil {
		return m.ExternalDexSecret
	}
	return ""
}

func (m *InstallConfig) GetFrontendHosts() string {
	if m != nil {
		return m.FrontendHosts
	}
	return ""
}

func (m *InstallConfig) GetFrontendLogin() string {
	if m != nil {
		return m.FrontendLogin
	}
	return ""
}

func (m *InstallConfig) GetFrontendPassword() string {
	if m != nil {
		return m.FrontendPassword
	}
	return ""
}

func (m *InstallConfig) GetFrontendRepeatPassword() string {
	if m != nil {
		return m.FrontendRepeatPassword
	}
	return ""
}

func (m *InstallConfig) GetFrontendApplicationTitle() string {
	if m != nil {
		return m.FrontendApplicationTitle
	}
	return ""
}

func (m *InstallConfig) GetFrontendDefaultLanguage() string {
	if m != nil {
		return m.FrontendDefaultLanguage
	}
	return ""
}

func (m *InstallConfig) GetLicenseRequired() bool {
	if m != nil {
		return m.LicenseRequired
	}
	return false
}

func (m *InstallConfig) GetLicenseString() string {
	if m != nil {
		return m.LicenseString
	}
	return ""
}

func (m *InstallConfig) GetCheckResults() []*CheckResult {
	if m != nil {
		return m.CheckResults
	}
	return nil
}

type CheckResult struct {
	Name       string `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Success    bool   `protobuf:"varint,2,opt,name=Success" json:"Success,omitempty"`
	JsonResult string `protobuf:"bytes,3,opt,name=JsonResult" json:"JsonResult,omitempty"`
}

func (m *CheckResult) Reset()                    { *m = CheckResult{} }
func (m *CheckResult) String() string            { return proto.CompactTextString(m) }
func (*CheckResult) ProtoMessage()               {}
func (*CheckResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CheckResult) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CheckResult) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CheckResult) GetJsonResult() string {
	if m != nil {
		return m.JsonResult
	}
	return ""
}

type PerformCheckRequest struct {
	Name   string         `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Config *InstallConfig `protobuf:"bytes,2,opt,name=Config" json:"Config,omitempty"`
}

func (m *PerformCheckRequest) Reset()                    { *m = PerformCheckRequest{} }
func (m *PerformCheckRequest) String() string            { return proto.CompactTextString(m) }
func (*PerformCheckRequest) ProtoMessage()               {}
func (*PerformCheckRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PerformCheckRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PerformCheckRequest) GetConfig() *InstallConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type PerformCheckResponse struct {
	Result *CheckResult `protobuf:"bytes,1,opt,name=Result" json:"Result,omitempty"`
}

func (m *PerformCheckResponse) Reset()                    { *m = PerformCheckResponse{} }
func (m *PerformCheckResponse) String() string            { return proto.CompactTextString(m) }
func (*PerformCheckResponse) ProtoMessage()               {}
func (*PerformCheckResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PerformCheckResponse) GetResult() *CheckResult {
	if m != nil {
		return m.Result
	}
	return nil
}

type GetDefaultsRequest struct {
}

func (m *GetDefaultsRequest) Reset()                    { *m = GetDefaultsRequest{} }
func (m *GetDefaultsRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDefaultsRequest) ProtoMessage()               {}
func (*GetDefaultsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type GetDefaultsResponse struct {
	Config *InstallConfig `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
}

func (m *GetDefaultsResponse) Reset()                    { *m = GetDefaultsResponse{} }
func (m *GetDefaultsResponse) String() string            { return proto.CompactTextString(m) }
func (*GetDefaultsResponse) ProtoMessage()               {}
func (*GetDefaultsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetDefaultsResponse) GetConfig() *InstallConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type GetAgreementRequest struct {
}

func (m *GetAgreementRequest) Reset()                    { *m = GetAgreementRequest{} }
func (m *GetAgreementRequest) String() string            { return proto.CompactTextString(m) }
func (*GetAgreementRequest) ProtoMessage()               {}
func (*GetAgreementRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

type GetAgreementResponse struct {
	Text string `protobuf:"bytes,1,opt,name=Text" json:"Text,omitempty"`
}

func (m *GetAgreementResponse) Reset()                    { *m = GetAgreementResponse{} }
func (m *GetAgreementResponse) String() string            { return proto.CompactTextString(m) }
func (*GetAgreementResponse) ProtoMessage()               {}
func (*GetAgreementResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GetAgreementResponse) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type InstallRequest struct {
	Config *InstallConfig `protobuf:"bytes,1,opt,name=config" json:"config,omitempty"`
}

func (m *InstallRequest) Reset()                    { *m = InstallRequest{} }
func (m *InstallRequest) String() string            { return proto.CompactTextString(m) }
func (*InstallRequest) ProtoMessage()               {}
func (*InstallRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *InstallRequest) GetConfig() *InstallConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type InstallResponse struct {
	Success bool `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
}

func (m *InstallResponse) Reset()                    { *m = InstallResponse{} }
func (m *InstallResponse) String() string            { return proto.CompactTextString(m) }
func (*InstallResponse) ProtoMessage()               {}
func (*InstallResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *InstallResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*InstallConfig)(nil), "install.InstallConfig")
	proto.RegisterType((*CheckResult)(nil), "install.CheckResult")
	proto.RegisterType((*PerformCheckRequest)(nil), "install.PerformCheckRequest")
	proto.RegisterType((*PerformCheckResponse)(nil), "install.PerformCheckResponse")
	proto.RegisterType((*GetDefaultsRequest)(nil), "install.GetDefaultsRequest")
	proto.RegisterType((*GetDefaultsResponse)(nil), "install.GetDefaultsResponse")
	proto.RegisterType((*GetAgreementRequest)(nil), "install.GetAgreementRequest")
	proto.RegisterType((*GetAgreementResponse)(nil), "install.GetAgreementResponse")
	proto.RegisterType((*InstallRequest)(nil), "install.InstallRequest")
	proto.RegisterType((*InstallResponse)(nil), "install.InstallResponse")
}

func init() { proto.RegisterFile("install.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 807 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x96, 0xcf, 0x6e, 0x1b, 0x37,
	0x10, 0xc6, 0xa1, 0xc6, 0x95, 0xec, 0x91, 0x1d, 0x27, 0xb4, 0x62, 0xb3, 0x8e, 0x93, 0xaa, 0x8b,
	0x1e, 0x8c, 0x34, 0xf0, 0xc1, 0x05, 0x8a, 0xa0, 0xe8, 0xa1, 0x86, 0x55, 0x27, 0x6e, 0x13, 0x57,
	0x58, 0x39, 0x2d, 0x8a, 0x9e, 0x56, 0xbb, 0x23, 0x75, 0x91, 0x35, 0xa9, 0x2c, 0xb9, 0x88, 0xfc,
	0x44, 0x7d, 0xab, 0x3e, 0x4b, 0xb1, 0x43, 0x72, 0x45, 0xea, 0x4f, 0x81, 0xde, 0xc4, 0xdf, 0x7c,
	0x9c, 0x19, 0x7e, 0xc3, 0x25, 0x04, 0x7b, 0xb9, 0x50, 0x3a, 0x29, 0x8a, 0xb3, 0x59, 0x29, 0xb5,
	0x64, 0x1d, 0xbb, 0x8c, 0xfe, 0x06, 0xd8, 0xbb, 0x36, 0xbf, 0x2f, 0xa5, 0x98, 0xe4, 0x53, 0xd6,
	0x87, 0x6e, 0x2e, 0x34, 0x96, 0x22, 0x29, 0xde, 0x97, 0x05, 0xef, 0xf7, 0x5b, 0xa7, 0x3b, 0xb1,
	0x8f, 0xd8, 0x0b, 0x78, 0x94, 0x8d, 0x2f, 0xa5, 0x10, 0x98, 0xea, 0x5c, 0x8a, 0xdb, 0xfb, 0x19,
	0xf2, 0x16, 0xc9, 0x56, 0x38, 0xfb, 0x1a, 0xf6, 0xb2, 0xf1, 0xed, 0xe5, 0xf0, 0x8d, 0x54, 0x5a,
	0x24, 0x77, 0xc8, 0x3f, 0x23, 0x61, 0x08, 0xd9, 0x09, 0xec, 0x10, 0x18, 0xca, 0x52, 0xf3, 0x07,
	0xa4, 0x58, 0x80, 0x26, 0x7a, 0x53, 0xef, 0xdf, 0xf2, 0xa2, 0x37, 0xfe, 0xde, 0xf7, 0x0a, 0x4b,
	0xfe, 0xb9, 0x17, 0xad, 0x41, 0x53, 0x7f, 0x98, 0x28, 0xf5, 0x49, 0x96, 0x19, 0x6f, 0x7b, 0xf5,
	0x1d, 0x64, 0x11, 0xec, 0x66, 0xe3, 0x91, 0x4c, 0x3f, 0xa0, 0xbe, 0xca, 0x0b, 0xe4, 0x1d, 0x12,
	0x05, 0xcc, 0xd7, 0x50, 0x23, 0xdb, 0xa1, 0x86, 0x7a, 0xf1, 0x34, 0xd4, 0xce, 0x4e, 0xa8, 0xa1,
	0x8e, 0xc8, 0x3d, 0xb3, 0x6e, 0x9a, 0x02, 0xe7, 0x5e, 0xc8, 0xeb, 0x59, 0x64, 0xe3, 0x77, 0x89,
	0xa8, 0x92, 0x62, 0x30, 0xba, 0xe1, 0x5d, 0x33, 0x0b, 0x0f, 0xb1, 0x43, 0x68, 0x67, 0x8a, 0xfa,
	0xd9, 0xa5, 0xa0, 0x5d, 0x19, 0x4e, 0x76, 0xee, 0x39, 0x4e, 0x5e, 0x1e, 0xc3, 0x76, 0xa6, 0xae,
	0x64, 0x91, 0x61, 0xc9, 0x1f, 0x52, 0xa4, 0x59, 0xd7, 0x5e, 0xe1, 0xdc, 0x8c, 0xf9, 0x5d, 0x9e,
	0x96, 0x92, 0xef, 0x1b, 0xaf, 0x02, 0xc8, 0x4e, 0x61, 0xdf, 0x81, 0xd7, 0x89, 0xc6, 0x4f, 0xc9,
	0x3d, 0x7f, 0x44, 0xba, 0x65, 0xcc, 0x5e, 0xc2, 0x63, 0x87, 0x7e, 0xc7, 0xb1, 0xa2, 0xa3, 0xf1,
	0xc7, 0xa4, 0x5d, 0x0d, 0xb0, 0x73, 0xe8, 0x39, 0x78, 0x55, 0x4a, 0xa1, 0x87, 0x45, 0x35, 0xcd,
	0x85, 0xe2, 0x8c, 0x36, 0xac, 0x8d, 0xd5, 0xfe, 0x38, 0x3e, 0xb8, 0xf8, 0x8d, 0x1f, 0x18, 0x7f,
	0x3c, 0x54, 0x4f, 0xa4, 0x29, 0xf5, 0xeb, 0xf0, 0x9a, 0xf7, 0xcc, 0x44, 0x7c, 0x16, 0x64, 0xc1,
	0x39, 0x7f, 0xb2, 0x94, 0x05, 0xe7, 0xbe, 0x33, 0x03, 0x9c, 0x5f, 0x0f, 0xf8, 0x61, 0xe8, 0x0c,
	0x41, 0xff, 0xbc, 0x03, 0x9c, 0x8f, 0x30, 0x2d, 0x51, 0xf3, 0xa3, 0xf0, 0xbc, 0x4d, 0xa0, 0xce,
	0x39, 0xa9, 0xcf, 0x82, 0x22, 0xab, 0xbf, 0x03, 0xc5, 0xb9, 0xc9, 0x19, 0x40, 0x5f, 0xf5, 0x56,
	0x4e, 0x73, 0xc1, 0xbf, 0x08, 0x55, 0x04, 0xeb, 0x3b, 0xe5, 0x40, 0x73, 0xa7, 0x8e, 0xcd, 0x9d,
	0x5a, 0xe6, 0xec, 0x3b, 0x38, 0x74, 0x2c, 0xc6, 0x19, 0x26, 0x8b, 0x5b, 0xf8, 0x94, 0x76, 0x6c,
	0x88, 0xb2, 0xef, 0x81, 0xbb, 0xc8, 0xc5, 0x6c, 0x56, 0xe4, 0x69, 0x42, 0x1f, 0x79, 0xae, 0x0b,
	0xe4, 0x27, 0xb4, 0x73, 0x63, 0x9c, 0xbd, 0x82, 0x23, 0x17, 0x1b, 0xe0, 0x24, 0xa9, 0x0a, 0xfd,
	0x36, 0x11, 0xd3, 0x2a, 0x99, 0x22, 0xff, 0x8a, 0xb6, 0x6e, 0x0a, 0xd7, 0xb7, 0xad, 0xc8, 0x53,
	0x14, 0x0a, 0x63, 0xfc, 0x58, 0xe5, 0x25, 0x66, 0xfc, 0x59, 0xbf, 0x75, 0xba, 0x1d, 0x2f, 0xe3,
	0xda, 0x29, 0x8b, 0x46, 0xba, 0xcc, 0xc5, 0x94, 0x3f, 0x37, 0x4e, 0x05, 0x90, 0xbd, 0x82, 0xdd,
	0xcb, 0xbf, 0x30, 0xfd, 0x10, 0xa3, 0xaa, 0x0a, 0xad, 0xf8, 0x97, 0xfd, 0x07, 0xa7, 0xdd, 0xf3,
	0xde, 0x99, 0x7b, 0x1e, 0xbd, 0x60, 0x1c, 0x28, 0xa3, 0x3f, 0xa1, 0xeb, 0xad, 0x19, 0x83, 0x2d,
	0xfa, 0xec, 0xcc, 0xc3, 0x47, 0xbf, 0x19, 0x87, 0xce, 0xa8, 0x4a, 0x53, 0x54, 0x8a, 0x9e, 0xb9,
	0xed, 0xd8, 0x2d, 0xd9, 0x73, 0x80, 0x9f, 0x95, 0x14, 0x66, 0xaf, 0x7d, 0xe1, 0x3c, 0x12, 0xfd,
	0x01, 0x07, 0x43, 0x2c, 0x27, 0xb2, 0xbc, 0xb3, 0x35, 0x3e, 0x56, 0xa8, 0xd6, 0x17, 0x39, 0x83,
	0xb6, 0x79, 0xa9, 0xa9, 0x46, 0xf7, 0xfc, 0xb0, 0xe9, 0x3d, 0x78, 0xc7, 0x63, 0xab, 0x8a, 0x06,
	0xd0, 0x0b, 0x53, 0xab, 0x99, 0x14, 0x0a, 0xd9, 0x4b, 0x68, 0xdb, 0x76, 0x5a, 0x94, 0x67, 0xbd,
	0x07, 0x56, 0x13, 0xf5, 0x80, 0xbd, 0x46, 0x6d, 0xa7, 0xa3, 0x6c, 0x7f, 0xd1, 0x4f, 0x70, 0x10,
	0x50, 0x9b, 0xfa, 0x0c, 0xda, 0xa9, 0x69, 0xb1, 0xf5, 0xdf, 0x2d, 0x1a, 0x55, 0xf4, 0x84, 0xd2,
	0x5c, 0x4c, 0x4b, 0xc4, 0x3b, 0x14, 0xda, 0x65, 0x7f, 0x01, 0xbd, 0x10, 0xdb, 0xf4, 0x0c, 0xb6,
	0x6e, 0x71, 0xae, 0x9d, 0x2b, 0xf5, 0xef, 0xe8, 0x47, 0x78, 0x68, 0x73, 0x3b, 0xef, 0xfe, 0x6f,
	0x13, 0xdf, 0xc0, 0x7e, 0x93, 0xc1, 0x16, 0xe2, 0xd0, 0x51, 0x76, 0x9e, 0x2d, 0x33, 0x4f, 0xbb,
	0x3c, 0xff, 0xa7, 0x05, 0x1d, 0xab, 0x66, 0x6f, 0xa0, 0xeb, 0x99, 0xc0, 0x9e, 0x36, 0x75, 0x56,
	0x0d, 0x3b, 0x3e, 0x59, 0x1f, 0xb4, 0xf5, 0x7e, 0x58, 0x24, 0x3d, 0x5a, 0xee, 0xd6, 0x65, 0xe0,
	0xab, 0x01, 0xbb, 0xfb, 0x17, 0xd8, 0xf5, 0x07, 0xcd, 0x16, 0xb5, 0xd6, 0x5c, 0xad, 0xe3, 0x67,
	0x1b, 0xa2, 0x26, 0xd9, 0xb8, 0x4d, 0xff, 0x13, 0xbe, 0xfd, 0x37, 0x00, 0x00, 0xff, 0xff, 0x21,
	0xa6, 0xca, 0x77, 0x38, 0x08, 0x00, 0x00,
}
