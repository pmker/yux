// Code generated by protoc-gen-go. DO NOT EDIT.
// source: docstore.proto

/*
Package docstore is a generated protocol buffer package.

It is generated from these files:
	docstore.proto

It has these top-level messages:
	Document
	DocumentQuery
	PutDocumentRequest
	PutDocumentResponse
	GetDocumentRequest
	GetDocumentResponse
	DeleteDocumentsRequest
	DeleteDocumentsResponse
	ListDocumentsRequest
	ListDocumentsResponse
	CountDocumentsResponse
*/
package docstore

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DocumentType int32

const (
	DocumentType_JSON   DocumentType = 0
	DocumentType_BINARY DocumentType = 1
)

var DocumentType_name = map[int32]string{
	0: "JSON",
	1: "BINARY",
}
var DocumentType_value = map[string]int32{
	"JSON":   0,
	"BINARY": 1,
}

func (x DocumentType) String() string {
	return proto.EnumName(DocumentType_name, int32(x))
}
func (DocumentType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Document struct {
	ID            string       `protobuf:"bytes,2,opt,name=ID" json:"ID,omitempty"`
	Type          DocumentType `protobuf:"varint,3,opt,name=Type,enum=docstore.DocumentType" json:"Type,omitempty"`
	Owner         string       `protobuf:"bytes,4,opt,name=Owner" json:"Owner,omitempty"`
	Data          string       `protobuf:"bytes,5,opt,name=Data" json:"Data,omitempty"`
	IndexableMeta string       `protobuf:"bytes,6,opt,name=IndexableMeta" json:"IndexableMeta,omitempty"`
}

func (m *Document) Reset()                    { *m = Document{} }
func (m *Document) String() string            { return proto.CompactTextString(m) }
func (*Document) ProtoMessage()               {}
func (*Document) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Document) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Document) GetType() DocumentType {
	if m != nil {
		return m.Type
	}
	return DocumentType_JSON
}

func (m *Document) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Document) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *Document) GetIndexableMeta() string {
	if m != nil {
		return m.IndexableMeta
	}
	return ""
}

type DocumentQuery struct {
	ID        string `protobuf:"bytes,2,opt,name=ID" json:"ID,omitempty"`
	Owner     string `protobuf:"bytes,3,opt,name=Owner" json:"Owner,omitempty"`
	MetaQuery string `protobuf:"bytes,4,opt,name=MetaQuery" json:"MetaQuery,omitempty"`
}

func (m *DocumentQuery) Reset()                    { *m = DocumentQuery{} }
func (m *DocumentQuery) String() string            { return proto.CompactTextString(m) }
func (*DocumentQuery) ProtoMessage()               {}
func (*DocumentQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *DocumentQuery) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *DocumentQuery) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *DocumentQuery) GetMetaQuery() string {
	if m != nil {
		return m.MetaQuery
	}
	return ""
}

type PutDocumentRequest struct {
	StoreID    string    `protobuf:"bytes,1,opt,name=StoreID" json:"StoreID,omitempty"`
	DocumentID string    `protobuf:"bytes,2,opt,name=DocumentID" json:"DocumentID,omitempty"`
	Document   *Document `protobuf:"bytes,3,opt,name=Document" json:"Document,omitempty"`
}

func (m *PutDocumentRequest) Reset()                    { *m = PutDocumentRequest{} }
func (m *PutDocumentRequest) String() string            { return proto.CompactTextString(m) }
func (*PutDocumentRequest) ProtoMessage()               {}
func (*PutDocumentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PutDocumentRequest) GetStoreID() string {
	if m != nil {
		return m.StoreID
	}
	return ""
}

func (m *PutDocumentRequest) GetDocumentID() string {
	if m != nil {
		return m.DocumentID
	}
	return ""
}

func (m *PutDocumentRequest) GetDocument() *Document {
	if m != nil {
		return m.Document
	}
	return nil
}

type PutDocumentResponse struct {
	Document *Document `protobuf:"bytes,1,opt,name=Document" json:"Document,omitempty"`
}

func (m *PutDocumentResponse) Reset()                    { *m = PutDocumentResponse{} }
func (m *PutDocumentResponse) String() string            { return proto.CompactTextString(m) }
func (*PutDocumentResponse) ProtoMessage()               {}
func (*PutDocumentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PutDocumentResponse) GetDocument() *Document {
	if m != nil {
		return m.Document
	}
	return nil
}

type GetDocumentRequest struct {
	StoreID    string `protobuf:"bytes,1,opt,name=StoreID" json:"StoreID,omitempty"`
	DocumentID string `protobuf:"bytes,2,opt,name=DocumentID" json:"DocumentID,omitempty"`
}

func (m *GetDocumentRequest) Reset()                    { *m = GetDocumentRequest{} }
func (m *GetDocumentRequest) String() string            { return proto.CompactTextString(m) }
func (*GetDocumentRequest) ProtoMessage()               {}
func (*GetDocumentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetDocumentRequest) GetStoreID() string {
	if m != nil {
		return m.StoreID
	}
	return ""
}

func (m *GetDocumentRequest) GetDocumentID() string {
	if m != nil {
		return m.DocumentID
	}
	return ""
}

type GetDocumentResponse struct {
	Document  *Document `protobuf:"bytes,1,opt,name=Document" json:"Document,omitempty"`
	BinaryUrl string    `protobuf:"bytes,2,opt,name=BinaryUrl" json:"BinaryUrl,omitempty"`
}

func (m *GetDocumentResponse) Reset()                    { *m = GetDocumentResponse{} }
func (m *GetDocumentResponse) String() string            { return proto.CompactTextString(m) }
func (*GetDocumentResponse) ProtoMessage()               {}
func (*GetDocumentResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetDocumentResponse) GetDocument() *Document {
	if m != nil {
		return m.Document
	}
	return nil
}

func (m *GetDocumentResponse) GetBinaryUrl() string {
	if m != nil {
		return m.BinaryUrl
	}
	return ""
}

type DeleteDocumentsRequest struct {
	StoreID    string         `protobuf:"bytes,1,opt,name=StoreID" json:"StoreID,omitempty"`
	DocumentID string         `protobuf:"bytes,2,opt,name=DocumentID" json:"DocumentID,omitempty"`
	Query      *DocumentQuery `protobuf:"bytes,3,opt,name=Query" json:"Query,omitempty"`
}

func (m *DeleteDocumentsRequest) Reset()                    { *m = DeleteDocumentsRequest{} }
func (m *DeleteDocumentsRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteDocumentsRequest) ProtoMessage()               {}
func (*DeleteDocumentsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *DeleteDocumentsRequest) GetStoreID() string {
	if m != nil {
		return m.StoreID
	}
	return ""
}

func (m *DeleteDocumentsRequest) GetDocumentID() string {
	if m != nil {
		return m.DocumentID
	}
	return ""
}

func (m *DeleteDocumentsRequest) GetQuery() *DocumentQuery {
	if m != nil {
		return m.Query
	}
	return nil
}

type DeleteDocumentsResponse struct {
	Success       bool  `protobuf:"varint,1,opt,name=Success" json:"Success,omitempty"`
	DeletionCount int32 `protobuf:"varint,2,opt,name=DeletionCount" json:"DeletionCount,omitempty"`
}

func (m *DeleteDocumentsResponse) Reset()                    { *m = DeleteDocumentsResponse{} }
func (m *DeleteDocumentsResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteDocumentsResponse) ProtoMessage()               {}
func (*DeleteDocumentsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DeleteDocumentsResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *DeleteDocumentsResponse) GetDeletionCount() int32 {
	if m != nil {
		return m.DeletionCount
	}
	return 0
}

type ListDocumentsRequest struct {
	StoreID string         `protobuf:"bytes,1,opt,name=StoreID" json:"StoreID,omitempty"`
	Query   *DocumentQuery `protobuf:"bytes,2,opt,name=Query" json:"Query,omitempty"`
}

func (m *ListDocumentsRequest) Reset()                    { *m = ListDocumentsRequest{} }
func (m *ListDocumentsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListDocumentsRequest) ProtoMessage()               {}
func (*ListDocumentsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *ListDocumentsRequest) GetStoreID() string {
	if m != nil {
		return m.StoreID
	}
	return ""
}

func (m *ListDocumentsRequest) GetQuery() *DocumentQuery {
	if m != nil {
		return m.Query
	}
	return nil
}

type ListDocumentsResponse struct {
	Document  *Document `protobuf:"bytes,1,opt,name=Document" json:"Document,omitempty"`
	BinaryUrl string    `protobuf:"bytes,2,opt,name=BinaryUrl" json:"BinaryUrl,omitempty"`
	Score     int32     `protobuf:"varint,3,opt,name=Score" json:"Score,omitempty"`
}

func (m *ListDocumentsResponse) Reset()                    { *m = ListDocumentsResponse{} }
func (m *ListDocumentsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListDocumentsResponse) ProtoMessage()               {}
func (*ListDocumentsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *ListDocumentsResponse) GetDocument() *Document {
	if m != nil {
		return m.Document
	}
	return nil
}

func (m *ListDocumentsResponse) GetBinaryUrl() string {
	if m != nil {
		return m.BinaryUrl
	}
	return ""
}

func (m *ListDocumentsResponse) GetScore() int32 {
	if m != nil {
		return m.Score
	}
	return 0
}

type CountDocumentsResponse struct {
	Total int64 `protobuf:"varint,1,opt,name=Total" json:"Total,omitempty"`
}

func (m *CountDocumentsResponse) Reset()                    { *m = CountDocumentsResponse{} }
func (m *CountDocumentsResponse) String() string            { return proto.CompactTextString(m) }
func (*CountDocumentsResponse) ProtoMessage()               {}
func (*CountDocumentsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *CountDocumentsResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func init() {
	proto.RegisterType((*Document)(nil), "docstore.Document")
	proto.RegisterType((*DocumentQuery)(nil), "docstore.DocumentQuery")
	proto.RegisterType((*PutDocumentRequest)(nil), "docstore.PutDocumentRequest")
	proto.RegisterType((*PutDocumentResponse)(nil), "docstore.PutDocumentResponse")
	proto.RegisterType((*GetDocumentRequest)(nil), "docstore.GetDocumentRequest")
	proto.RegisterType((*GetDocumentResponse)(nil), "docstore.GetDocumentResponse")
	proto.RegisterType((*DeleteDocumentsRequest)(nil), "docstore.DeleteDocumentsRequest")
	proto.RegisterType((*DeleteDocumentsResponse)(nil), "docstore.DeleteDocumentsResponse")
	proto.RegisterType((*ListDocumentsRequest)(nil), "docstore.ListDocumentsRequest")
	proto.RegisterType((*ListDocumentsResponse)(nil), "docstore.ListDocumentsResponse")
	proto.RegisterType((*CountDocumentsResponse)(nil), "docstore.CountDocumentsResponse")
	proto.RegisterEnum("docstore.DocumentType", DocumentType_name, DocumentType_value)
}

func init() { proto.RegisterFile("docstore.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 525 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xdb, 0x6e, 0xd3, 0x40,
	0x10, 0x8d, 0x93, 0x38, 0xa4, 0x53, 0x12, 0xaa, 0x69, 0x48, 0xad, 0xa8, 0x94, 0xb0, 0xea, 0x43,
	0x55, 0x89, 0x08, 0x85, 0x2f, 0xa0, 0x18, 0x21, 0xa3, 0x92, 0xc2, 0x26, 0x48, 0xf4, 0x09, 0xb9,
	0xee, 0x3e, 0x44, 0x0a, 0xde, 0x60, 0xaf, 0x05, 0x11, 0x12, 0x12, 0x3f, 0xc1, 0x57, 0xf0, 0x91,
	0xc8, 0xe3, 0xac, 0xbd, 0xae, 0x53, 0x28, 0xb7, 0xb7, 0xcc, 0xed, 0x9c, 0x33, 0xb3, 0x33, 0x31,
	0x74, 0x2f, 0x65, 0x10, 0x2b, 0x19, 0x89, 0xd1, 0x32, 0x92, 0x4a, 0x62, 0x5b, 0xdb, 0xec, 0x9b,
	0x05, 0x6d, 0x57, 0x06, 0xc9, 0x7b, 0x11, 0x2a, 0xec, 0x42, 0xdd, 0x73, 0x9d, 0xfa, 0xd0, 0x3a,
	0xda, 0xe2, 0x75, 0xcf, 0xc5, 0x63, 0x68, 0xce, 0x56, 0x4b, 0xe1, 0x34, 0x86, 0xd6, 0x51, 0x77,
	0xdc, 0x1f, 0xe5, 0x28, 0xba, 0x22, 0x8d, 0x72, 0xca, 0xc1, 0x1e, 0xd8, 0x67, 0x1f, 0x43, 0x11,
	0x39, 0x4d, 0x2a, 0xcf, 0x0c, 0x44, 0x68, 0xba, 0xbe, 0xf2, 0x1d, 0x9b, 0x9c, 0xf4, 0x1b, 0x0f,
	0xa1, 0xe3, 0x85, 0x97, 0xe2, 0x93, 0x7f, 0xb1, 0x10, 0x2f, 0x85, 0xf2, 0x9d, 0x16, 0x05, 0xcb,
	0x4e, 0x36, 0x85, 0x8e, 0x66, 0x79, 0x9d, 0x88, 0x68, 0x55, 0x11, 0x97, 0x13, 0x36, 0x4c, 0xc2,
	0x7d, 0xd8, 0x4a, 0xcb, 0xa9, 0x64, 0x2d, 0xa5, 0x70, 0xb0, 0x2f, 0x80, 0xaf, 0x12, 0xa5, 0x71,
	0xb9, 0xf8, 0x90, 0x88, 0x58, 0xa1, 0x03, 0xb7, 0xa6, 0x69, 0x5b, 0x9e, 0xeb, 0x58, 0x54, 0xa1,
	0x4d, 0x3c, 0x00, 0xd0, 0xc9, 0x39, 0xb7, 0xe1, 0xc1, 0x51, 0x31, 0x3c, 0x92, 0xb1, 0x3d, 0xc6,
	0xea, 0x90, 0x78, 0x9e, 0xc3, 0x9e, 0xc1, 0x6e, 0x89, 0x3f, 0x5e, 0xca, 0x30, 0x16, 0x25, 0x18,
	0xeb, 0x06, 0x30, 0x13, 0xc0, 0xe7, 0xe2, 0xdf, 0xb5, 0xc1, 0x02, 0xd8, 0x2d, 0xe1, 0xfd, 0x99,
	0xac, 0x74, 0xf6, 0x27, 0xf3, 0xd0, 0x8f, 0x56, 0x6f, 0xa2, 0xc5, 0x9a, 0xa5, 0x70, 0xb0, 0xaf,
	0x16, 0xf4, 0x5d, 0xb1, 0x10, 0x4a, 0xe8, 0x82, 0xf8, 0xef, 0x1f, 0xe0, 0x21, 0xd8, 0xd9, 0x53,
	0x67, 0xd3, 0xdf, 0xab, 0xea, 0xa3, 0x30, 0xcf, 0xb2, 0xd8, 0x39, 0xec, 0x55, 0x24, 0xac, 0x9b,
	0x4d, 0x35, 0x24, 0x41, 0x20, 0xe2, 0x98, 0x34, 0xb4, 0xb9, 0x36, 0xd3, 0x7d, 0xa5, 0xa2, 0xb9,
	0x0c, 0x9f, 0xca, 0x24, 0x54, 0x24, 0xc3, 0xe6, 0x65, 0x27, 0x7b, 0x07, 0xbd, 0xd3, 0x79, 0xac,
	0x7e, 0xa3, 0xb7, 0x5c, 0x7b, 0xfd, 0x46, 0xda, 0x3f, 0xc3, 0xdd, 0x2b, 0x04, 0xff, 0xe3, 0x99,
	0xd2, 0xb3, 0x9a, 0x06, 0x32, 0xca, 0x8e, 0xde, 0xe6, 0x99, 0xc1, 0x46, 0xd0, 0xa7, 0x36, 0xab,
	0xec, 0x3d, 0xb0, 0x67, 0x52, 0xf9, 0x0b, 0xa2, 0x6e, 0xf0, 0xcc, 0x38, 0x3e, 0x84, 0xdb, 0xe6,
	0x7f, 0x04, 0xb6, 0xa1, 0xf9, 0x62, 0x7a, 0x36, 0xd9, 0xa9, 0x21, 0x40, 0xeb, 0xc4, 0x9b, 0x3c,
	0xe1, 0xe7, 0x3b, 0xd6, 0xf8, 0x7b, 0x83, 0xa4, 0xd3, 0x40, 0xf0, 0x14, 0xb6, 0x8d, 0xdb, 0xc0,
	0xfd, 0xa2, 0x87, 0xea, 0xc9, 0x0e, 0xee, 0x5d, 0x13, 0xcd, 0x44, 0xb1, 0x5a, 0x8a, 0x66, 0xac,
	0xb4, 0x89, 0x56, 0xbd, 0x1c, 0x13, 0x6d, 0xc3, 0x1d, 0xb0, 0x1a, 0xbe, 0x85, 0x3b, 0x57, 0xf6,
	0x06, 0x87, 0xc6, 0x8c, 0x37, 0x6e, 0xf5, 0xe0, 0xc1, 0x4f, 0x32, 0x72, 0xe4, 0x19, 0x74, 0xcb,
	0x83, 0xc5, 0x83, 0xa2, 0x6c, 0xd3, 0x42, 0x0d, 0x0c, 0xe2, 0xcd, 0x4f, 0x42, 0xa8, 0x9d, 0x52,
	0xed, 0x2f, 0x41, 0xef, 0x5f, 0x1b, 0xd7, 0x98, 0x8f, 0xac, 0x8b, 0x16, 0x7d, 0x3c, 0x1e, 0xff,
	0x08, 0x00, 0x00, 0xff, 0xff, 0x7a, 0x81, 0x7a, 0x02, 0x4e, 0x06, 0x00, 0x00,
}
