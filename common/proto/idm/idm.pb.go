// Code generated by protoc-gen-go. DO NOT EDIT.
// source: idm.proto

/*
Package idm is a generated protocol buffer package.

It is generated from these files:
	idm.proto

It has these top-level messages:
	CreateRoleRequest
	CreateRoleResponse
	DeleteRoleRequest
	DeleteRoleResponse
	SearchRoleRequest
	SearchRoleResponse
	Role
	RoleSingleQuery
	CreateUserRequest
	CreateUserResponse
	BindUserRequest
	BindUserResponse
	DeleteUserRequest
	DeleteUserResponse
	SearchUserRequest
	SearchUserResponse
	CountUserResponse
	User
	UserSingleQuery
	CreateWorkspaceRequest
	CreateWorkspaceResponse
	DeleteWorkspaceRequest
	DeleteWorkspaceResponse
	SearchWorkspaceRequest
	SearchWorkspaceResponse
	Workspace
	WorkspaceSingleQuery
	CreateACLRequest
	CreateACLResponse
	DeleteACLRequest
	DeleteACLResponse
	SearchACLRequest
	SearchACLResponse
	ACLAction
	ACL
	ACLSingleQuery
	UserMeta
	UserMetaNamespace
	UpdateUserMetaRequest
	UpdateUserMetaResponse
	SearchUserMetaRequest
	SearchUserMetaResponse
	UpdateUserMetaNamespaceRequest
	UpdateUserMetaNamespaceResponse
	ListUserMetaNamespaceRequest
	ListUserMetaNamespaceResponse
	ChangeEvent
	PolicyEngineRequest
	PolicyEngineResponse
	PolicyCondition
	Policy
	PolicyGroup
	StorePolicyGroupRequest
	StorePolicyGroupResponse
	DeletePolicyGroupRequest
	DeletePolicyGroupResponse
	ListPolicyGroupsRequest
	ListPolicyGroupsResponse
*/
package idm

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import service "github.com/pmker/yux/common/service/proto"
import tree "github.com/pmker/yux/common/proto/tree"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type NodeType int32

const (
	NodeType_UNKNOWN NodeType = 0
	NodeType_USER    NodeType = 1
	NodeType_GROUP   NodeType = 2
)

var NodeType_name = map[int32]string{
	0: "UNKNOWN",
	1: "USER",
	2: "GROUP",
}
var NodeType_value = map[string]int32{
	"UNKNOWN": 0,
	"USER":    1,
	"GROUP":   2,
}

func (x NodeType) String() string {
	return proto.EnumName(NodeType_name, int32(x))
}
func (NodeType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type WorkspaceScope int32

const (
	WorkspaceScope_ANY   WorkspaceScope = 0
	WorkspaceScope_ADMIN WorkspaceScope = 1
	WorkspaceScope_ROOM  WorkspaceScope = 2
	WorkspaceScope_LINK  WorkspaceScope = 3
)

var WorkspaceScope_name = map[int32]string{
	0: "ANY",
	1: "ADMIN",
	2: "ROOM",
	3: "LINK",
}
var WorkspaceScope_value = map[string]int32{
	"ANY":   0,
	"ADMIN": 1,
	"ROOM":  2,
	"LINK":  3,
}

func (x WorkspaceScope) String() string {
	return proto.EnumName(WorkspaceScope_name, int32(x))
}
func (WorkspaceScope) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// Message Types for ChangeEvent
type ChangeEventType int32

const (
	ChangeEventType_CREATE ChangeEventType = 0
	ChangeEventType_READ   ChangeEventType = 1
	ChangeEventType_UPDATE ChangeEventType = 2
	ChangeEventType_DELETE ChangeEventType = 3
	ChangeEventType_BIND   ChangeEventType = 4
	ChangeEventType_LOGOUT ChangeEventType = 5
)

var ChangeEventType_name = map[int32]string{
	0: "CREATE",
	1: "READ",
	2: "UPDATE",
	3: "DELETE",
	4: "BIND",
	5: "LOGOUT",
}
var ChangeEventType_value = map[string]int32{
	"CREATE": 0,
	"READ":   1,
	"UPDATE": 2,
	"DELETE": 3,
	"BIND":   4,
	"LOGOUT": 5,
}

func (x ChangeEventType) String() string {
	return proto.EnumName(ChangeEventType_name, int32(x))
}
func (ChangeEventType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

type PolicyEffect int32

const (
	PolicyEffect_unknown PolicyEffect = 0
	PolicyEffect_deny    PolicyEffect = 1
	PolicyEffect_allow   PolicyEffect = 2
)

var PolicyEffect_name = map[int32]string{
	0: "unknown",
	1: "deny",
	2: "allow",
}
var PolicyEffect_value = map[string]int32{
	"unknown": 0,
	"deny":    1,
	"allow":   2,
}

func (x PolicyEffect) String() string {
	return proto.EnumName(PolicyEffect_name, int32(x))
}
func (PolicyEffect) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

type PolicyResourceGroup int32

const (
	PolicyResourceGroup_rest PolicyResourceGroup = 0
	PolicyResourceGroup_acl  PolicyResourceGroup = 1
	PolicyResourceGroup_oidc PolicyResourceGroup = 2
)

var PolicyResourceGroup_name = map[int32]string{
	0: "rest",
	1: "acl",
	2: "oidc",
}
var PolicyResourceGroup_value = map[string]int32{
	"rest": 0,
	"acl":  1,
	"oidc": 2,
}

func (x PolicyResourceGroup) String() string {
	return proto.EnumName(PolicyResourceGroup_name, int32(x))
}
func (PolicyResourceGroup) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

type UpdateUserMetaRequest_UserMetaOp int32

const (
	UpdateUserMetaRequest_PUT    UpdateUserMetaRequest_UserMetaOp = 0
	UpdateUserMetaRequest_DELETE UpdateUserMetaRequest_UserMetaOp = 1
)

var UpdateUserMetaRequest_UserMetaOp_name = map[int32]string{
	0: "PUT",
	1: "DELETE",
}
var UpdateUserMetaRequest_UserMetaOp_value = map[string]int32{
	"PUT":    0,
	"DELETE": 1,
}

func (x UpdateUserMetaRequest_UserMetaOp) String() string {
	return proto.EnumName(UpdateUserMetaRequest_UserMetaOp_name, int32(x))
}
func (UpdateUserMetaRequest_UserMetaOp) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{38, 0}
}

type UpdateUserMetaNamespaceRequest_UserMetaNsOp int32

const (
	UpdateUserMetaNamespaceRequest_PUT    UpdateUserMetaNamespaceRequest_UserMetaNsOp = 0
	UpdateUserMetaNamespaceRequest_DELETE UpdateUserMetaNamespaceRequest_UserMetaNsOp = 1
)

var UpdateUserMetaNamespaceRequest_UserMetaNsOp_name = map[int32]string{
	0: "PUT",
	1: "DELETE",
}
var UpdateUserMetaNamespaceRequest_UserMetaNsOp_value = map[string]int32{
	"PUT":    0,
	"DELETE": 1,
}

func (x UpdateUserMetaNamespaceRequest_UserMetaNsOp) String() string {
	return proto.EnumName(UpdateUserMetaNamespaceRequest_UserMetaNsOp_name, int32(x))
}
func (UpdateUserMetaNamespaceRequest_UserMetaNsOp) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor0, []int{42, 0}
}

// *****************************************************************************
//  Messages structure
// *****************************************************************************
type CreateRoleRequest struct {
	Role *Role `protobuf:"bytes,1,opt,name=Role" json:"Role,omitempty"`
}

func (m *CreateRoleRequest) Reset()                    { *m = CreateRoleRequest{} }
func (m *CreateRoleRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRoleRequest) ProtoMessage()               {}
func (*CreateRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateRoleRequest) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

type CreateRoleResponse struct {
	Role *Role `protobuf:"bytes,1,opt,name=Role" json:"Role,omitempty"`
}

func (m *CreateRoleResponse) Reset()                    { *m = CreateRoleResponse{} }
func (m *CreateRoleResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateRoleResponse) ProtoMessage()               {}
func (*CreateRoleResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateRoleResponse) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

type DeleteRoleRequest struct {
	Query *service.Query `protobuf:"bytes,1,opt,name=Query" json:"Query,omitempty"`
}

func (m *DeleteRoleRequest) Reset()                    { *m = DeleteRoleRequest{} }
func (m *DeleteRoleRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteRoleRequest) ProtoMessage()               {}
func (*DeleteRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *DeleteRoleRequest) GetQuery() *service.Query {
	if m != nil {
		return m.Query
	}
	return nil
}

type DeleteRoleResponse struct {
	RowsDeleted int64 `protobuf:"varint,1,opt,name=RowsDeleted" json:"RowsDeleted,omitempty"`
}

func (m *DeleteRoleResponse) Reset()                    { *m = DeleteRoleResponse{} }
func (m *DeleteRoleResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteRoleResponse) ProtoMessage()               {}
func (*DeleteRoleResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DeleteRoleResponse) GetRowsDeleted() int64 {
	if m != nil {
		return m.RowsDeleted
	}
	return 0
}

type SearchRoleRequest struct {
	Query *service.Query `protobuf:"bytes,1,opt,name=Query" json:"Query,omitempty"`
}

func (m *SearchRoleRequest) Reset()                    { *m = SearchRoleRequest{} }
func (m *SearchRoleRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchRoleRequest) ProtoMessage()               {}
func (*SearchRoleRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *SearchRoleRequest) GetQuery() *service.Query {
	if m != nil {
		return m.Query
	}
	return nil
}

type SearchRoleResponse struct {
	Role *Role `protobuf:"bytes,1,opt,name=Role" json:"Role,omitempty"`
}

func (m *SearchRoleResponse) Reset()                    { *m = SearchRoleResponse{} }
func (m *SearchRoleResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchRoleResponse) ProtoMessage()               {}
func (*SearchRoleResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *SearchRoleResponse) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

type Role struct {
	Uuid                    string                    `protobuf:"bytes,1,opt,name=Uuid" json:"Uuid,omitempty"`
	Label                   string                    `protobuf:"bytes,2,opt,name=Label" json:"Label,omitempty"`
	IsTeam                  bool                      `protobuf:"varint,3,opt,name=IsTeam" json:"IsTeam,omitempty"`
	GroupRole               bool                      `protobuf:"varint,4,opt,name=GroupRole" json:"GroupRole,omitempty"`
	UserRole                bool                      `protobuf:"varint,5,opt,name=UserRole" json:"UserRole,omitempty"`
	LastUpdated             int32                     `protobuf:"varint,6,opt,name=LastUpdated" json:"LastUpdated,omitempty"`
	AutoApplies             []string                  `protobuf:"bytes,7,rep,name=AutoApplies" json:"AutoApplies,omitempty"`
	Policies                []*service.ResourcePolicy `protobuf:"bytes,8,rep,name=Policies" json:"Policies,omitempty"`
	PoliciesContextEditable bool                      `protobuf:"varint,9,opt,name=PoliciesContextEditable" json:"PoliciesContextEditable,omitempty"`
}

func (m *Role) Reset()                    { *m = Role{} }
func (m *Role) String() string            { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()               {}
func (*Role) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Role) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Role) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Role) GetIsTeam() bool {
	if m != nil {
		return m.IsTeam
	}
	return false
}

func (m *Role) GetGroupRole() bool {
	if m != nil {
		return m.GroupRole
	}
	return false
}

func (m *Role) GetUserRole() bool {
	if m != nil {
		return m.UserRole
	}
	return false
}

func (m *Role) GetLastUpdated() int32 {
	if m != nil {
		return m.LastUpdated
	}
	return 0
}

func (m *Role) GetAutoApplies() []string {
	if m != nil {
		return m.AutoApplies
	}
	return nil
}

func (m *Role) GetPolicies() []*service.ResourcePolicy {
	if m != nil {
		return m.Policies
	}
	return nil
}

func (m *Role) GetPoliciesContextEditable() bool {
	if m != nil {
		return m.PoliciesContextEditable
	}
	return false
}

type RoleSingleQuery struct {
	Uuid         []string `protobuf:"bytes,1,rep,name=Uuid" json:"Uuid,omitempty"`
	Label        string   `protobuf:"bytes,2,opt,name=Label" json:"Label,omitempty"`
	IsTeam       bool     `protobuf:"varint,3,opt,name=IsTeam" json:"IsTeam,omitempty"`
	IsGroupRole  bool     `protobuf:"varint,4,opt,name=IsGroupRole" json:"IsGroupRole,omitempty"`
	IsUserRole   bool     `protobuf:"varint,5,opt,name=IsUserRole" json:"IsUserRole,omitempty"`
	HasAutoApply bool     `protobuf:"varint,6,opt,name=HasAutoApply" json:"HasAutoApply,omitempty"`
	Not          bool     `protobuf:"varint,7,opt,name=not" json:"not,omitempty"`
}

func (m *RoleSingleQuery) Reset()                    { *m = RoleSingleQuery{} }
func (m *RoleSingleQuery) String() string            { return proto.CompactTextString(m) }
func (*RoleSingleQuery) ProtoMessage()               {}
func (*RoleSingleQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *RoleSingleQuery) GetUuid() []string {
	if m != nil {
		return m.Uuid
	}
	return nil
}

func (m *RoleSingleQuery) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *RoleSingleQuery) GetIsTeam() bool {
	if m != nil {
		return m.IsTeam
	}
	return false
}

func (m *RoleSingleQuery) GetIsGroupRole() bool {
	if m != nil {
		return m.IsGroupRole
	}
	return false
}

func (m *RoleSingleQuery) GetIsUserRole() bool {
	if m != nil {
		return m.IsUserRole
	}
	return false
}

func (m *RoleSingleQuery) GetHasAutoApply() bool {
	if m != nil {
		return m.HasAutoApply
	}
	return false
}

func (m *RoleSingleQuery) GetNot() bool {
	if m != nil {
		return m.Not
	}
	return false
}

// *****************************************************************************
//  Messages structure
// *****************************************************************************
type CreateUserRequest struct {
	User *User `protobuf:"bytes,1,opt,name=User" json:"User,omitempty"`
}

func (m *CreateUserRequest) Reset()                    { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()               {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CreateUserRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type CreateUserResponse struct {
	User *User `protobuf:"bytes,1,opt,name=User" json:"User,omitempty"`
}

func (m *CreateUserResponse) Reset()                    { *m = CreateUserResponse{} }
func (m *CreateUserResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateUserResponse) ProtoMessage()               {}
func (*CreateUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CreateUserResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type BindUserRequest struct {
	UserName string `protobuf:"bytes,1,opt,name=userName" json:"userName,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *BindUserRequest) Reset()                    { *m = BindUserRequest{} }
func (m *BindUserRequest) String() string            { return proto.CompactTextString(m) }
func (*BindUserRequest) ProtoMessage()               {}
func (*BindUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *BindUserRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *BindUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type BindUserResponse struct {
	User *User `protobuf:"bytes,1,opt,name=User" json:"User,omitempty"`
}

func (m *BindUserResponse) Reset()                    { *m = BindUserResponse{} }
func (m *BindUserResponse) String() string            { return proto.CompactTextString(m) }
func (*BindUserResponse) ProtoMessage()               {}
func (*BindUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *BindUserResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type DeleteUserRequest struct {
	Query *service.Query `protobuf:"bytes,1,opt,name=Query" json:"Query,omitempty"`
}

func (m *DeleteUserRequest) Reset()                    { *m = DeleteUserRequest{} }
func (m *DeleteUserRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteUserRequest) ProtoMessage()               {}
func (*DeleteUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *DeleteUserRequest) GetQuery() *service.Query {
	if m != nil {
		return m.Query
	}
	return nil
}

type DeleteUserResponse struct {
	RowsDeleted int64 `protobuf:"varint,1,opt,name=RowsDeleted" json:"RowsDeleted,omitempty"`
}

func (m *DeleteUserResponse) Reset()                    { *m = DeleteUserResponse{} }
func (m *DeleteUserResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteUserResponse) ProtoMessage()               {}
func (*DeleteUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *DeleteUserResponse) GetRowsDeleted() int64 {
	if m != nil {
		return m.RowsDeleted
	}
	return 0
}

type SearchUserRequest struct {
	Query *service.Query `protobuf:"bytes,1,opt,name=Query" json:"Query,omitempty"`
}

func (m *SearchUserRequest) Reset()                    { *m = SearchUserRequest{} }
func (m *SearchUserRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchUserRequest) ProtoMessage()               {}
func (*SearchUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *SearchUserRequest) GetQuery() *service.Query {
	if m != nil {
		return m.Query
	}
	return nil
}

type SearchUserResponse struct {
	User *User `protobuf:"bytes,1,opt,name=User" json:"User,omitempty"`
}

func (m *SearchUserResponse) Reset()                    { *m = SearchUserResponse{} }
func (m *SearchUserResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchUserResponse) ProtoMessage()               {}
func (*SearchUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *SearchUserResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type CountUserResponse struct {
	Count int32 `protobuf:"varint,1,opt,name=Count" json:"Count,omitempty"`
}

func (m *CountUserResponse) Reset()                    { *m = CountUserResponse{} }
func (m *CountUserResponse) String() string            { return proto.CompactTextString(m) }
func (*CountUserResponse) ProtoMessage()               {}
func (*CountUserResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *CountUserResponse) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type User struct {
	Uuid       string            `protobuf:"bytes,1,opt,name=Uuid" json:"Uuid,omitempty"`
	GroupPath  string            `protobuf:"bytes,2,opt,name=GroupPath" json:"GroupPath,omitempty"`
	Attributes map[string]string `protobuf:"bytes,3,rep,name=Attributes" json:"Attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Roles      []*Role           `protobuf:"bytes,4,rep,name=Roles" json:"Roles,omitempty"`
	// User specific data
	Login       string `protobuf:"bytes,5,opt,name=Login" json:"Login,omitempty"`
	Password    string `protobuf:"bytes,6,opt,name=Password" json:"Password,omitempty"`
	OldPassword string `protobuf:"bytes,11,opt,name=OldPassword" json:"OldPassword,omitempty"`
	// Group specific data
	IsGroup                 bool                      `protobuf:"varint,7,opt,name=IsGroup" json:"IsGroup,omitempty"`
	GroupLabel              string                    `protobuf:"bytes,8,opt,name=GroupLabel" json:"GroupLabel,omitempty"`
	Policies                []*service.ResourcePolicy `protobuf:"bytes,9,rep,name=Policies" json:"Policies,omitempty"`
	PoliciesContextEditable bool                      `protobuf:"varint,10,opt,name=PoliciesContextEditable" json:"PoliciesContextEditable,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *User) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *User) GetGroupPath() string {
	if m != nil {
		return m.GroupPath
	}
	return ""
}

func (m *User) GetAttributes() map[string]string {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *User) GetRoles() []*Role {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *User) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetOldPassword() string {
	if m != nil {
		return m.OldPassword
	}
	return ""
}

func (m *User) GetIsGroup() bool {
	if m != nil {
		return m.IsGroup
	}
	return false
}

func (m *User) GetGroupLabel() string {
	if m != nil {
		return m.GroupLabel
	}
	return ""
}

func (m *User) GetPolicies() []*service.ResourcePolicy {
	if m != nil {
		return m.Policies
	}
	return nil
}

func (m *User) GetPoliciesContextEditable() bool {
	if m != nil {
		return m.PoliciesContextEditable
	}
	return false
}

type UserSingleQuery struct {
	Uuid     string `protobuf:"bytes,11,opt,name=Uuid" json:"Uuid,omitempty"`
	Login    string `protobuf:"bytes,1,opt,name=Login" json:"Login,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=Password" json:"Password,omitempty"`
	// Search on group path, and if so, search recursively
	GroupPath string `protobuf:"bytes,3,opt,name=GroupPath" json:"GroupPath,omitempty"`
	Recursive bool   `protobuf:"varint,4,opt,name=Recursive" json:"Recursive,omitempty"`
	// Search a specific group by path
	FullPath string `protobuf:"bytes,12,opt,name=FullPath" json:"FullPath,omitempty"`
	// Search on attribute
	AttributeName     string `protobuf:"bytes,5,opt,name=AttributeName" json:"AttributeName,omitempty"`
	AttributeValue    string `protobuf:"bytes,6,opt,name=AttributeValue" json:"AttributeValue,omitempty"`
	AttributeAnyValue bool   `protobuf:"varint,7,opt,name=AttributeAnyValue" json:"AttributeAnyValue,omitempty"`
	// Search on roles
	HasRole  string   `protobuf:"bytes,8,opt,name=HasRole" json:"HasRole,omitempty"`
	NodeType NodeType `protobuf:"varint,9,opt,name=NodeType,enum=idm.NodeType" json:"NodeType,omitempty"`
	Not      bool     `protobuf:"varint,10,opt,name=not" json:"not,omitempty"`
}

func (m *UserSingleQuery) Reset()                    { *m = UserSingleQuery{} }
func (m *UserSingleQuery) String() string            { return proto.CompactTextString(m) }
func (*UserSingleQuery) ProtoMessage()               {}
func (*UserSingleQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *UserSingleQuery) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *UserSingleQuery) GetLogin() string {
	if m != nil {
		return m.Login
	}
	return ""
}

func (m *UserSingleQuery) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UserSingleQuery) GetGroupPath() string {
	if m != nil {
		return m.GroupPath
	}
	return ""
}

func (m *UserSingleQuery) GetRecursive() bool {
	if m != nil {
		return m.Recursive
	}
	return false
}

func (m *UserSingleQuery) GetFullPath() string {
	if m != nil {
		return m.FullPath
	}
	return ""
}

func (m *UserSingleQuery) GetAttributeName() string {
	if m != nil {
		return m.AttributeName
	}
	return ""
}

func (m *UserSingleQuery) GetAttributeValue() string {
	if m != nil {
		return m.AttributeValue
	}
	return ""
}

func (m *UserSingleQuery) GetAttributeAnyValue() bool {
	if m != nil {
		return m.AttributeAnyValue
	}
	return false
}

func (m *UserSingleQuery) GetHasRole() string {
	if m != nil {
		return m.HasRole
	}
	return ""
}

func (m *UserSingleQuery) GetNodeType() NodeType {
	if m != nil {
		return m.NodeType
	}
	return NodeType_UNKNOWN
}

func (m *UserSingleQuery) GetNot() bool {
	if m != nil {
		return m.Not
	}
	return false
}

// *****************************************************************************
//  Messages structure
// *****************************************************************************
type CreateWorkspaceRequest struct {
	Workspace *Workspace `protobuf:"bytes,1,opt,name=Workspace" json:"Workspace,omitempty"`
}

func (m *CreateWorkspaceRequest) Reset()                    { *m = CreateWorkspaceRequest{} }
func (m *CreateWorkspaceRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateWorkspaceRequest) ProtoMessage()               {}
func (*CreateWorkspaceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *CreateWorkspaceRequest) GetWorkspace() *Workspace {
	if m != nil {
		return m.Workspace
	}
	return nil
}

type CreateWorkspaceResponse struct {
	Workspace *Workspace `protobuf:"bytes,1,opt,name=Workspace" json:"Workspace,omitempty"`
}

func (m *CreateWorkspaceResponse) Reset()                    { *m = CreateWorkspaceResponse{} }
func (m *CreateWorkspaceResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateWorkspaceResponse) ProtoMessage()               {}
func (*CreateWorkspaceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *CreateWorkspaceResponse) GetWorkspace() *Workspace {
	if m != nil {
		return m.Workspace
	}
	return nil
}

type DeleteWorkspaceRequest struct {
	Query *service.Query `protobuf:"bytes,1,opt,name=Query" json:"Query,omitempty"`
}

func (m *DeleteWorkspaceRequest) Reset()                    { *m = DeleteWorkspaceRequest{} }
func (m *DeleteWorkspaceRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteWorkspaceRequest) ProtoMessage()               {}
func (*DeleteWorkspaceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *DeleteWorkspaceRequest) GetQuery() *service.Query {
	if m != nil {
		return m.Query
	}
	return nil
}

type DeleteWorkspaceResponse struct {
	RowsDeleted int64 `protobuf:"varint,1,opt,name=RowsDeleted" json:"RowsDeleted,omitempty"`
}

func (m *DeleteWorkspaceResponse) Reset()                    { *m = DeleteWorkspaceResponse{} }
func (m *DeleteWorkspaceResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteWorkspaceResponse) ProtoMessage()               {}
func (*DeleteWorkspaceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *DeleteWorkspaceResponse) GetRowsDeleted() int64 {
	if m != nil {
		return m.RowsDeleted
	}
	return 0
}

type SearchWorkspaceRequest struct {
	Query *service.Query `protobuf:"bytes,1,opt,name=Query" json:"Query,omitempty"`
}

func (m *SearchWorkspaceRequest) Reset()                    { *m = SearchWorkspaceRequest{} }
func (m *SearchWorkspaceRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchWorkspaceRequest) ProtoMessage()               {}
func (*SearchWorkspaceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *SearchWorkspaceRequest) GetQuery() *service.Query {
	if m != nil {
		return m.Query
	}
	return nil
}

type SearchWorkspaceResponse struct {
	Workspace *Workspace `protobuf:"bytes,1,opt,name=Workspace" json:"Workspace,omitempty"`
}

func (m *SearchWorkspaceResponse) Reset()                    { *m = SearchWorkspaceResponse{} }
func (m *SearchWorkspaceResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchWorkspaceResponse) ProtoMessage()               {}
func (*SearchWorkspaceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *SearchWorkspaceResponse) GetWorkspace() *Workspace {
	if m != nil {
		return m.Workspace
	}
	return nil
}

type Workspace struct {
	UUID                    string                    `protobuf:"bytes,1,opt,name=UUID" json:"UUID,omitempty"`
	Label                   string                    `protobuf:"bytes,2,opt,name=Label" json:"Label,omitempty"`
	Description             string                    `protobuf:"bytes,3,opt,name=Description" json:"Description,omitempty"`
	Slug                    string                    `protobuf:"bytes,4,opt,name=Slug" json:"Slug,omitempty"`
	Scope                   WorkspaceScope            `protobuf:"varint,5,opt,name=Scope,enum=idm.WorkspaceScope" json:"Scope,omitempty"`
	LastUpdated             int32                     `protobuf:"varint,6,opt,name=LastUpdated" json:"LastUpdated,omitempty"`
	Policies                []*service.ResourcePolicy `protobuf:"bytes,7,rep,name=Policies" json:"Policies,omitempty"`
	Attributes              string                    `protobuf:"bytes,8,opt,name=Attributes" json:"Attributes,omitempty"`
	RootUUIDs               []string                  `protobuf:"bytes,9,rep,name=RootUUIDs" json:"RootUUIDs,omitempty"`
	RootNodes               map[string]*tree.Node     `protobuf:"bytes,11,rep,name=RootNodes" json:"RootNodes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	PoliciesContextEditable bool                      `protobuf:"varint,12,opt,name=PoliciesContextEditable" json:"PoliciesContextEditable,omitempty"`
}

func (m *Workspace) Reset()                    { *m = Workspace{} }
func (m *Workspace) String() string            { return proto.CompactTextString(m) }
func (*Workspace) ProtoMessage()               {}
func (*Workspace) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *Workspace) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *Workspace) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Workspace) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Workspace) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *Workspace) GetScope() WorkspaceScope {
	if m != nil {
		return m.Scope
	}
	return WorkspaceScope_ANY
}

func (m *Workspace) GetLastUpdated() int32 {
	if m != nil {
		return m.LastUpdated
	}
	return 0
}

func (m *Workspace) GetPolicies() []*service.ResourcePolicy {
	if m != nil {
		return m.Policies
	}
	return nil
}

func (m *Workspace) GetAttributes() string {
	if m != nil {
		return m.Attributes
	}
	return ""
}

func (m *Workspace) GetRootUUIDs() []string {
	if m != nil {
		return m.RootUUIDs
	}
	return nil
}

func (m *Workspace) GetRootNodes() map[string]*tree.Node {
	if m != nil {
		return m.RootNodes
	}
	return nil
}

func (m *Workspace) GetPoliciesContextEditable() bool {
	if m != nil {
		return m.PoliciesContextEditable
	}
	return false
}

type WorkspaceSingleQuery struct {
	Uuid        string         `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Label       string         `protobuf:"bytes,2,opt,name=label" json:"label,omitempty"`
	Description string         `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Slug        string         `protobuf:"bytes,4,opt,name=slug" json:"slug,omitempty"`
	Scope       WorkspaceScope `protobuf:"varint,5,opt,name=scope,enum=idm.WorkspaceScope" json:"scope,omitempty"`
	Not         bool           `protobuf:"varint,6,opt,name=not" json:"not,omitempty"`
}

func (m *WorkspaceSingleQuery) Reset()                    { *m = WorkspaceSingleQuery{} }
func (m *WorkspaceSingleQuery) String() string            { return proto.CompactTextString(m) }
func (*WorkspaceSingleQuery) ProtoMessage()               {}
func (*WorkspaceSingleQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *WorkspaceSingleQuery) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *WorkspaceSingleQuery) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *WorkspaceSingleQuery) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *WorkspaceSingleQuery) GetSlug() string {
	if m != nil {
		return m.Slug
	}
	return ""
}

func (m *WorkspaceSingleQuery) GetScope() WorkspaceScope {
	if m != nil {
		return m.Scope
	}
	return WorkspaceScope_ANY
}

func (m *WorkspaceSingleQuery) GetNot() bool {
	if m != nil {
		return m.Not
	}
	return false
}

// *****************************************************************************
//  ACL Messages structure
// *****************************************************************************
type CreateACLRequest struct {
	ACL *ACL `protobuf:"bytes,1,opt,name=ACL" json:"ACL,omitempty"`
}

func (m *CreateACLRequest) Reset()                    { *m = CreateACLRequest{} }
func (m *CreateACLRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateACLRequest) ProtoMessage()               {}
func (*CreateACLRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *CreateACLRequest) GetACL() *ACL {
	if m != nil {
		return m.ACL
	}
	return nil
}

type CreateACLResponse struct {
	ACL *ACL `protobuf:"bytes,1,opt,name=ACL" json:"ACL,omitempty"`
}

func (m *CreateACLResponse) Reset()                    { *m = CreateACLResponse{} }
func (m *CreateACLResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateACLResponse) ProtoMessage()               {}
func (*CreateACLResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *CreateACLResponse) GetACL() *ACL {
	if m != nil {
		return m.ACL
	}
	return nil
}

type DeleteACLRequest struct {
	Query *service.Query `protobuf:"bytes,1,opt,name=Query" json:"Query,omitempty"`
}

func (m *DeleteACLRequest) Reset()                    { *m = DeleteACLRequest{} }
func (m *DeleteACLRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteACLRequest) ProtoMessage()               {}
func (*DeleteACLRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *DeleteACLRequest) GetQuery() *service.Query {
	if m != nil {
		return m.Query
	}
	return nil
}

type DeleteACLResponse struct {
	RowsDeleted int64 `protobuf:"varint,1,opt,name=RowsDeleted" json:"RowsDeleted,omitempty"`
}

func (m *DeleteACLResponse) Reset()                    { *m = DeleteACLResponse{} }
func (m *DeleteACLResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteACLResponse) ProtoMessage()               {}
func (*DeleteACLResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *DeleteACLResponse) GetRowsDeleted() int64 {
	if m != nil {
		return m.RowsDeleted
	}
	return 0
}

type SearchACLRequest struct {
	Query *service.Query `protobuf:"bytes,1,opt,name=Query" json:"Query,omitempty"`
}

func (m *SearchACLRequest) Reset()                    { *m = SearchACLRequest{} }
func (m *SearchACLRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchACLRequest) ProtoMessage()               {}
func (*SearchACLRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *SearchACLRequest) GetQuery() *service.Query {
	if m != nil {
		return m.Query
	}
	return nil
}

type SearchACLResponse struct {
	ACL *ACL `protobuf:"bytes,1,opt,name=ACL" json:"ACL,omitempty"`
}

func (m *SearchACLResponse) Reset()                    { *m = SearchACLResponse{} }
func (m *SearchACLResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchACLResponse) ProtoMessage()               {}
func (*SearchACLResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *SearchACLResponse) GetACL() *ACL {
	if m != nil {
		return m.ACL
	}
	return nil
}

type ACLAction struct {
	Name  string `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=Value" json:"Value,omitempty"`
}

func (m *ACLAction) Reset()                    { *m = ACLAction{} }
func (m *ACLAction) String() string            { return proto.CompactTextString(m) }
func (*ACLAction) ProtoMessage()               {}
func (*ACLAction) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *ACLAction) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ACLAction) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ACL struct {
	ID          string     `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	Action      *ACLAction `protobuf:"bytes,2,opt,name=Action" json:"Action,omitempty"`
	RoleID      string     `protobuf:"bytes,3,opt,name=RoleID" json:"RoleID,omitempty"`
	WorkspaceID string     `protobuf:"bytes,4,opt,name=WorkspaceID" json:"WorkspaceID,omitempty"`
	NodeID      string     `protobuf:"bytes,5,opt,name=NodeID" json:"NodeID,omitempty"`
}

func (m *ACL) Reset()                    { *m = ACL{} }
func (m *ACL) String() string            { return proto.CompactTextString(m) }
func (*ACL) ProtoMessage()               {}
func (*ACL) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *ACL) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *ACL) GetAction() *ACLAction {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *ACL) GetRoleID() string {
	if m != nil {
		return m.RoleID
	}
	return ""
}

func (m *ACL) GetWorkspaceID() string {
	if m != nil {
		return m.WorkspaceID
	}
	return ""
}

func (m *ACL) GetNodeID() string {
	if m != nil {
		return m.NodeID
	}
	return ""
}

type ACLSingleQuery struct {
	Actions      []*ACLAction `protobuf:"bytes,1,rep,name=Actions" json:"Actions,omitempty"`
	RoleIDs      []string     `protobuf:"bytes,2,rep,name=RoleIDs" json:"RoleIDs,omitempty"`
	WorkspaceIDs []string     `protobuf:"bytes,3,rep,name=WorkspaceIDs" json:"WorkspaceIDs,omitempty"`
	NodeIDs      []string     `protobuf:"bytes,4,rep,name=NodeIDs" json:"NodeIDs,omitempty"`
	Not          bool         `protobuf:"varint,5,opt,name=not" json:"not,omitempty"`
}

func (m *ACLSingleQuery) Reset()                    { *m = ACLSingleQuery{} }
func (m *ACLSingleQuery) String() string            { return proto.CompactTextString(m) }
func (*ACLSingleQuery) ProtoMessage()               {}
func (*ACLSingleQuery) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *ACLSingleQuery) GetActions() []*ACLAction {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *ACLSingleQuery) GetRoleIDs() []string {
	if m != nil {
		return m.RoleIDs
	}
	return nil
}

func (m *ACLSingleQuery) GetWorkspaceIDs() []string {
	if m != nil {
		return m.WorkspaceIDs
	}
	return nil
}

func (m *ACLSingleQuery) GetNodeIDs() []string {
	if m != nil {
		return m.NodeIDs
	}
	return nil
}

func (m *ACLSingleQuery) GetNot() bool {
	if m != nil {
		return m.Not
	}
	return false
}

// Piece of metadata attached to a node
type UserMeta struct {
	Uuid                    string                    `protobuf:"bytes,1,opt,name=Uuid" json:"Uuid,omitempty"`
	NodeUuid                string                    `protobuf:"bytes,2,opt,name=NodeUuid" json:"NodeUuid,omitempty"`
	Namespace               string                    `protobuf:"bytes,3,opt,name=Namespace" json:"Namespace,omitempty"`
	JsonValue               string                    `protobuf:"bytes,4,opt,name=JsonValue" json:"JsonValue,omitempty"`
	Policies                []*service.ResourcePolicy `protobuf:"bytes,5,rep,name=Policies" json:"Policies,omitempty"`
	PoliciesContextEditable bool                      `protobuf:"varint,6,opt,name=PoliciesContextEditable" json:"PoliciesContextEditable,omitempty"`
}

func (m *UserMeta) Reset()                    { *m = UserMeta{} }
func (m *UserMeta) String() string            { return proto.CompactTextString(m) }
func (*UserMeta) ProtoMessage()               {}
func (*UserMeta) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *UserMeta) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *UserMeta) GetNodeUuid() string {
	if m != nil {
		return m.NodeUuid
	}
	return ""
}

func (m *UserMeta) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *UserMeta) GetJsonValue() string {
	if m != nil {
		return m.JsonValue
	}
	return ""
}

func (m *UserMeta) GetPolicies() []*service.ResourcePolicy {
	if m != nil {
		return m.Policies
	}
	return nil
}

func (m *UserMeta) GetPoliciesContextEditable() bool {
	if m != nil {
		return m.PoliciesContextEditable
	}
	return false
}

// Globally declared Namespace with associated policies
type UserMetaNamespace struct {
	Namespace      string                    `protobuf:"bytes,1,opt,name=Namespace" json:"Namespace,omitempty"`
	Label          string                    `protobuf:"bytes,2,opt,name=Label" json:"Label,omitempty"`
	Order          int32                     `protobuf:"varint,3,opt,name=Order" json:"Order,omitempty"`
	Indexable      bool                      `protobuf:"varint,4,opt,name=Indexable" json:"Indexable,omitempty"`
	JsonDefinition string                    `protobuf:"bytes,5,opt,name=JsonDefinition" json:"JsonDefinition,omitempty"`
	Policies       []*service.ResourcePolicy `protobuf:"bytes,6,rep,name=Policies" json:"Policies,omitempty"`
}

func (m *UserMetaNamespace) Reset()                    { *m = UserMetaNamespace{} }
func (m *UserMetaNamespace) String() string            { return proto.CompactTextString(m) }
func (*UserMetaNamespace) ProtoMessage()               {}
func (*UserMetaNamespace) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *UserMetaNamespace) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *UserMetaNamespace) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *UserMetaNamespace) GetOrder() int32 {
	if m != nil {
		return m.Order
	}
	return 0
}

func (m *UserMetaNamespace) GetIndexable() bool {
	if m != nil {
		return m.Indexable
	}
	return false
}

func (m *UserMetaNamespace) GetJsonDefinition() string {
	if m != nil {
		return m.JsonDefinition
	}
	return ""
}

func (m *UserMetaNamespace) GetPolicies() []*service.ResourcePolicy {
	if m != nil {
		return m.Policies
	}
	return nil
}

// Request for modifying UserMeta
type UpdateUserMetaRequest struct {
	Operation UpdateUserMetaRequest_UserMetaOp `protobuf:"varint,1,opt,name=Operation,enum=idm.UpdateUserMetaRequest_UserMetaOp" json:"Operation,omitempty"`
	MetaDatas []*UserMeta                      `protobuf:"bytes,3,rep,name=MetaDatas" json:"MetaDatas,omitempty"`
}

func (m *UpdateUserMetaRequest) Reset()                    { *m = UpdateUserMetaRequest{} }
func (m *UpdateUserMetaRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserMetaRequest) ProtoMessage()               {}
func (*UpdateUserMetaRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *UpdateUserMetaRequest) GetOperation() UpdateUserMetaRequest_UserMetaOp {
	if m != nil {
		return m.Operation
	}
	return UpdateUserMetaRequest_PUT
}

func (m *UpdateUserMetaRequest) GetMetaDatas() []*UserMeta {
	if m != nil {
		return m.MetaDatas
	}
	return nil
}

// Response of UpdateUserMeta service
type UpdateUserMetaResponse struct {
	MetaDatas []*UserMeta `protobuf:"bytes,3,rep,name=MetaDatas" json:"MetaDatas,omitempty"`
}

func (m *UpdateUserMetaResponse) Reset()                    { *m = UpdateUserMetaResponse{} }
func (m *UpdateUserMetaResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserMetaResponse) ProtoMessage()               {}
func (*UpdateUserMetaResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *UpdateUserMetaResponse) GetMetaDatas() []*UserMeta {
	if m != nil {
		return m.MetaDatas
	}
	return nil
}

// Request for searching UserMeta by NodeUuid or by Namespace
type SearchUserMetaRequest struct {
	MetaUuids            []string                     `protobuf:"bytes,1,rep,name=MetaUuids" json:"MetaUuids,omitempty"`
	NodeUuids            []string                     `protobuf:"bytes,2,rep,name=NodeUuids" json:"NodeUuids,omitempty"`
	Namespace            string                       `protobuf:"bytes,3,opt,name=Namespace" json:"Namespace,omitempty"`
	ResourceSubjectOwner string                       `protobuf:"bytes,4,opt,name=ResourceSubjectOwner" json:"ResourceSubjectOwner,omitempty"`
	ResourceQuery        *service.ResourcePolicyQuery `protobuf:"bytes,5,opt,name=ResourceQuery" json:"ResourceQuery,omitempty"`
}

func (m *SearchUserMetaRequest) Reset()                    { *m = SearchUserMetaRequest{} }
func (m *SearchUserMetaRequest) String() string            { return proto.CompactTextString(m) }
func (*SearchUserMetaRequest) ProtoMessage()               {}
func (*SearchUserMetaRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *SearchUserMetaRequest) GetMetaUuids() []string {
	if m != nil {
		return m.MetaUuids
	}
	return nil
}

func (m *SearchUserMetaRequest) GetNodeUuids() []string {
	if m != nil {
		return m.NodeUuids
	}
	return nil
}

func (m *SearchUserMetaRequest) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *SearchUserMetaRequest) GetResourceSubjectOwner() string {
	if m != nil {
		return m.ResourceSubjectOwner
	}
	return ""
}

func (m *SearchUserMetaRequest) GetResourceQuery() *service.ResourcePolicyQuery {
	if m != nil {
		return m.ResourceQuery
	}
	return nil
}

// Streamed container for the UserMeta results
type SearchUserMetaResponse struct {
	UserMeta *UserMeta `protobuf:"bytes,1,opt,name=UserMeta" json:"UserMeta,omitempty"`
}

func (m *SearchUserMetaResponse) Reset()                    { *m = SearchUserMetaResponse{} }
func (m *SearchUserMetaResponse) String() string            { return proto.CompactTextString(m) }
func (*SearchUserMetaResponse) ProtoMessage()               {}
func (*SearchUserMetaResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *SearchUserMetaResponse) GetUserMeta() *UserMeta {
	if m != nil {
		return m.UserMeta
	}
	return nil
}

// Modify UserMetaNamespaces
type UpdateUserMetaNamespaceRequest struct {
	Operation  UpdateUserMetaNamespaceRequest_UserMetaNsOp `protobuf:"varint,1,opt,name=Operation,enum=idm.UpdateUserMetaNamespaceRequest_UserMetaNsOp" json:"Operation,omitempty"`
	Namespaces []*UserMetaNamespace                        `protobuf:"bytes,2,rep,name=Namespaces" json:"Namespaces,omitempty"`
}

func (m *UpdateUserMetaNamespaceRequest) Reset()                    { *m = UpdateUserMetaNamespaceRequest{} }
func (m *UpdateUserMetaNamespaceRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserMetaNamespaceRequest) ProtoMessage()               {}
func (*UpdateUserMetaNamespaceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *UpdateUserMetaNamespaceRequest) GetOperation() UpdateUserMetaNamespaceRequest_UserMetaNsOp {
	if m != nil {
		return m.Operation
	}
	return UpdateUserMetaNamespaceRequest_PUT
}

func (m *UpdateUserMetaNamespaceRequest) GetNamespaces() []*UserMetaNamespace {
	if m != nil {
		return m.Namespaces
	}
	return nil
}

// Response of the
type UpdateUserMetaNamespaceResponse struct {
	Namespaces []*UserMetaNamespace `protobuf:"bytes,1,rep,name=Namespaces" json:"Namespaces,omitempty"`
}

func (m *UpdateUserMetaNamespaceResponse) Reset()         { *m = UpdateUserMetaNamespaceResponse{} }
func (m *UpdateUserMetaNamespaceResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateUserMetaNamespaceResponse) ProtoMessage()    {}
func (*UpdateUserMetaNamespaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{43}
}

func (m *UpdateUserMetaNamespaceResponse) GetNamespaces() []*UserMetaNamespace {
	if m != nil {
		return m.Namespaces
	}
	return nil
}

// List All MetaNamespaces
type ListUserMetaNamespaceRequest struct {
}

func (m *ListUserMetaNamespaceRequest) Reset()                    { *m = ListUserMetaNamespaceRequest{} }
func (m *ListUserMetaNamespaceRequest) String() string            { return proto.CompactTextString(m) }
func (*ListUserMetaNamespaceRequest) ProtoMessage()               {}
func (*ListUserMetaNamespaceRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

// Collection of results
type ListUserMetaNamespaceResponse struct {
	UserMetaNamespace *UserMetaNamespace `protobuf:"bytes,1,opt,name=UserMetaNamespace" json:"UserMetaNamespace,omitempty"`
}

func (m *ListUserMetaNamespaceResponse) Reset()                    { *m = ListUserMetaNamespaceResponse{} }
func (m *ListUserMetaNamespaceResponse) String() string            { return proto.CompactTextString(m) }
func (*ListUserMetaNamespaceResponse) ProtoMessage()               {}
func (*ListUserMetaNamespaceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *ListUserMetaNamespaceResponse) GetUserMetaNamespace() *UserMetaNamespace {
	if m != nil {
		return m.UserMetaNamespace
	}
	return nil
}

// Global Event message for IDM
type ChangeEvent struct {
	JsonType   string            `protobuf:"bytes,1,opt,name=jsonType,json=@type" json:"jsonType,omitempty"`
	Type       ChangeEventType   `protobuf:"varint,2,opt,name=Type,enum=idm.ChangeEventType" json:"Type,omitempty"`
	User       *User             `protobuf:"bytes,3,opt,name=User" json:"User,omitempty"`
	Role       *Role             `protobuf:"bytes,4,opt,name=Role" json:"Role,omitempty"`
	Workspace  *Workspace        `protobuf:"bytes,5,opt,name=Workspace" json:"Workspace,omitempty"`
	Acl        *ACL              `protobuf:"bytes,6,opt,name=Acl" json:"Acl,omitempty"`
	Attributes map[string]string `protobuf:"bytes,7,rep,name=Attributes" json:"Attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *ChangeEvent) Reset()                    { *m = ChangeEvent{} }
func (m *ChangeEvent) String() string            { return proto.CompactTextString(m) }
func (*ChangeEvent) ProtoMessage()               {}
func (*ChangeEvent) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

func (m *ChangeEvent) GetJsonType() string {
	if m != nil {
		return m.JsonType
	}
	return ""
}

func (m *ChangeEvent) GetType() ChangeEventType {
	if m != nil {
		return m.Type
	}
	return ChangeEventType_CREATE
}

func (m *ChangeEvent) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *ChangeEvent) GetRole() *Role {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *ChangeEvent) GetWorkspace() *Workspace {
	if m != nil {
		return m.Workspace
	}
	return nil
}

func (m *ChangeEvent) GetAcl() *ACL {
	if m != nil {
		return m.Acl
	}
	return nil
}

func (m *ChangeEvent) GetAttributes() map[string]string {
	if m != nil {
		return m.Attributes
	}
	return nil
}

// ************************************
// Messages Structures
// ************************************
type PolicyEngineRequest struct {
	Resource string            `protobuf:"bytes,1,opt,name=Resource" json:"Resource,omitempty"`
	Action   string            `protobuf:"bytes,2,opt,name=Action" json:"Action,omitempty"`
	Subjects []string          `protobuf:"bytes,3,rep,name=Subjects" json:"Subjects,omitempty"`
	Context  map[string]string `protobuf:"bytes,4,rep,name=Context" json:"Context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *PolicyEngineRequest) Reset()                    { *m = PolicyEngineRequest{} }
func (m *PolicyEngineRequest) String() string            { return proto.CompactTextString(m) }
func (*PolicyEngineRequest) ProtoMessage()               {}
func (*PolicyEngineRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *PolicyEngineRequest) GetResource() string {
	if m != nil {
		return m.Resource
	}
	return ""
}

func (m *PolicyEngineRequest) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *PolicyEngineRequest) GetSubjects() []string {
	if m != nil {
		return m.Subjects
	}
	return nil
}

func (m *PolicyEngineRequest) GetContext() map[string]string {
	if m != nil {
		return m.Context
	}
	return nil
}

type PolicyEngineResponse struct {
	Allowed      bool `protobuf:"varint,1,opt,name=Allowed" json:"Allowed,omitempty"`
	ExplicitDeny bool `protobuf:"varint,2,opt,name=ExplicitDeny" json:"ExplicitDeny,omitempty"`
	DefaultDeny  bool `protobuf:"varint,3,opt,name=DefaultDeny" json:"DefaultDeny,omitempty"`
}

func (m *PolicyEngineResponse) Reset()                    { *m = PolicyEngineResponse{} }
func (m *PolicyEngineResponse) String() string            { return proto.CompactTextString(m) }
func (*PolicyEngineResponse) ProtoMessage()               {}
func (*PolicyEngineResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{48} }

func (m *PolicyEngineResponse) GetAllowed() bool {
	if m != nil {
		return m.Allowed
	}
	return false
}

func (m *PolicyEngineResponse) GetExplicitDeny() bool {
	if m != nil {
		return m.ExplicitDeny
	}
	return false
}

func (m *PolicyEngineResponse) GetDefaultDeny() bool {
	if m != nil {
		return m.DefaultDeny
	}
	return false
}

type PolicyCondition struct {
	Type        string `protobuf:"bytes,1,opt,name=type" json:"type,omitempty"`
	JsonOptions string `protobuf:"bytes,2,opt,name=jsonOptions" json:"jsonOptions,omitempty"`
}

func (m *PolicyCondition) Reset()                    { *m = PolicyCondition{} }
func (m *PolicyCondition) String() string            { return proto.CompactTextString(m) }
func (*PolicyCondition) ProtoMessage()               {}
func (*PolicyCondition) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{49} }

func (m *PolicyCondition) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *PolicyCondition) GetJsonOptions() string {
	if m != nil {
		return m.JsonOptions
	}
	return ""
}

type Policy struct {
	Id          string                      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Description string                      `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Subjects    []string                    `protobuf:"bytes,3,rep,name=subjects" json:"subjects,omitempty"`
	Resources   []string                    `protobuf:"bytes,4,rep,name=resources" json:"resources,omitempty"`
	Actions     []string                    `protobuf:"bytes,5,rep,name=actions" json:"actions,omitempty"`
	Effect      PolicyEffect                `protobuf:"varint,6,opt,name=effect,enum=idm.PolicyEffect" json:"effect,omitempty"`
	Conditions  map[string]*PolicyCondition `protobuf:"bytes,7,rep,name=conditions" json:"conditions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Policy) Reset()                    { *m = Policy{} }
func (m *Policy) String() string            { return proto.CompactTextString(m) }
func (*Policy) ProtoMessage()               {}
func (*Policy) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *Policy) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Policy) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Policy) GetSubjects() []string {
	if m != nil {
		return m.Subjects
	}
	return nil
}

func (m *Policy) GetResources() []string {
	if m != nil {
		return m.Resources
	}
	return nil
}

func (m *Policy) GetActions() []string {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *Policy) GetEffect() PolicyEffect {
	if m != nil {
		return m.Effect
	}
	return PolicyEffect_unknown
}

func (m *Policy) GetConditions() map[string]*PolicyCondition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

type PolicyGroup struct {
	Uuid          string              `protobuf:"bytes,1,opt,name=Uuid" json:"Uuid,omitempty"`
	Name          string              `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Description   string              `protobuf:"bytes,3,opt,name=Description" json:"Description,omitempty"`
	OwnerUuid     string              `protobuf:"bytes,4,opt,name=OwnerUuid" json:"OwnerUuid,omitempty"`
	ResourceGroup PolicyResourceGroup `protobuf:"varint,5,opt,name=ResourceGroup,enum=idm.PolicyResourceGroup" json:"ResourceGroup,omitempty"`
	LastUpdated   int32               `protobuf:"varint,6,opt,name=LastUpdated" json:"LastUpdated,omitempty"`
	Policies      []*Policy           `protobuf:"bytes,7,rep,name=Policies" json:"Policies,omitempty"`
}

func (m *PolicyGroup) Reset()                    { *m = PolicyGroup{} }
func (m *PolicyGroup) String() string            { return proto.CompactTextString(m) }
func (*PolicyGroup) ProtoMessage()               {}
func (*PolicyGroup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{51} }

func (m *PolicyGroup) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *PolicyGroup) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PolicyGroup) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *PolicyGroup) GetOwnerUuid() string {
	if m != nil {
		return m.OwnerUuid
	}
	return ""
}

func (m *PolicyGroup) GetResourceGroup() PolicyResourceGroup {
	if m != nil {
		return m.ResourceGroup
	}
	return PolicyResourceGroup_rest
}

func (m *PolicyGroup) GetLastUpdated() int32 {
	if m != nil {
		return m.LastUpdated
	}
	return 0
}

func (m *PolicyGroup) GetPolicies() []*Policy {
	if m != nil {
		return m.Policies
	}
	return nil
}

// Request / Response Messages
type StorePolicyGroupRequest struct {
	PolicyGroup *PolicyGroup `protobuf:"bytes,1,opt,name=PolicyGroup" json:"PolicyGroup,omitempty"`
}

func (m *StorePolicyGroupRequest) Reset()                    { *m = StorePolicyGroupRequest{} }
func (m *StorePolicyGroupRequest) String() string            { return proto.CompactTextString(m) }
func (*StorePolicyGroupRequest) ProtoMessage()               {}
func (*StorePolicyGroupRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{52} }

func (m *StorePolicyGroupRequest) GetPolicyGroup() *PolicyGroup {
	if m != nil {
		return m.PolicyGroup
	}
	return nil
}

type StorePolicyGroupResponse struct {
	PolicyGroup *PolicyGroup `protobuf:"bytes,1,opt,name=PolicyGroup" json:"PolicyGroup,omitempty"`
}

func (m *StorePolicyGroupResponse) Reset()                    { *m = StorePolicyGroupResponse{} }
func (m *StorePolicyGroupResponse) String() string            { return proto.CompactTextString(m) }
func (*StorePolicyGroupResponse) ProtoMessage()               {}
func (*StorePolicyGroupResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{53} }

func (m *StorePolicyGroupResponse) GetPolicyGroup() *PolicyGroup {
	if m != nil {
		return m.PolicyGroup
	}
	return nil
}

type DeletePolicyGroupRequest struct {
	PolicyGroup *PolicyGroup `protobuf:"bytes,1,opt,name=PolicyGroup" json:"PolicyGroup,omitempty"`
}

func (m *DeletePolicyGroupRequest) Reset()                    { *m = DeletePolicyGroupRequest{} }
func (m *DeletePolicyGroupRequest) String() string            { return proto.CompactTextString(m) }
func (*DeletePolicyGroupRequest) ProtoMessage()               {}
func (*DeletePolicyGroupRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{54} }

func (m *DeletePolicyGroupRequest) GetPolicyGroup() *PolicyGroup {
	if m != nil {
		return m.PolicyGroup
	}
	return nil
}

type DeletePolicyGroupResponse struct {
	Success bool `protobuf:"varint,1,opt,name=Success" json:"Success,omitempty"`
}

func (m *DeletePolicyGroupResponse) Reset()                    { *m = DeletePolicyGroupResponse{} }
func (m *DeletePolicyGroupResponse) String() string            { return proto.CompactTextString(m) }
func (*DeletePolicyGroupResponse) ProtoMessage()               {}
func (*DeletePolicyGroupResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{55} }

func (m *DeletePolicyGroupResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type ListPolicyGroupsRequest struct {
}

func (m *ListPolicyGroupsRequest) Reset()                    { *m = ListPolicyGroupsRequest{} }
func (m *ListPolicyGroupsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListPolicyGroupsRequest) ProtoMessage()               {}
func (*ListPolicyGroupsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{56} }

type ListPolicyGroupsResponse struct {
	PolicyGroups []*PolicyGroup `protobuf:"bytes,1,rep,name=PolicyGroups" json:"PolicyGroups,omitempty"`
	Total        int32          `protobuf:"varint,2,opt,name=Total" json:"Total,omitempty"`
}

func (m *ListPolicyGroupsResponse) Reset()                    { *m = ListPolicyGroupsResponse{} }
func (m *ListPolicyGroupsResponse) String() string            { return proto.CompactTextString(m) }
func (*ListPolicyGroupsResponse) ProtoMessage()               {}
func (*ListPolicyGroupsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

func (m *ListPolicyGroupsResponse) GetPolicyGroups() []*PolicyGroup {
	if m != nil {
		return m.PolicyGroups
	}
	return nil
}

func (m *ListPolicyGroupsResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func init() {
	proto.RegisterType((*CreateRoleRequest)(nil), "idm.CreateRoleRequest")
	proto.RegisterType((*CreateRoleResponse)(nil), "idm.CreateRoleResponse")
	proto.RegisterType((*DeleteRoleRequest)(nil), "idm.DeleteRoleRequest")
	proto.RegisterType((*DeleteRoleResponse)(nil), "idm.DeleteRoleResponse")
	proto.RegisterType((*SearchRoleRequest)(nil), "idm.SearchRoleRequest")
	proto.RegisterType((*SearchRoleResponse)(nil), "idm.SearchRoleResponse")
	proto.RegisterType((*Role)(nil), "idm.Role")
	proto.RegisterType((*RoleSingleQuery)(nil), "idm.RoleSingleQuery")
	proto.RegisterType((*CreateUserRequest)(nil), "idm.CreateUserRequest")
	proto.RegisterType((*CreateUserResponse)(nil), "idm.CreateUserResponse")
	proto.RegisterType((*BindUserRequest)(nil), "idm.BindUserRequest")
	proto.RegisterType((*BindUserResponse)(nil), "idm.BindUserResponse")
	proto.RegisterType((*DeleteUserRequest)(nil), "idm.DeleteUserRequest")
	proto.RegisterType((*DeleteUserResponse)(nil), "idm.DeleteUserResponse")
	proto.RegisterType((*SearchUserRequest)(nil), "idm.SearchUserRequest")
	proto.RegisterType((*SearchUserResponse)(nil), "idm.SearchUserResponse")
	proto.RegisterType((*CountUserResponse)(nil), "idm.CountUserResponse")
	proto.RegisterType((*User)(nil), "idm.User")
	proto.RegisterType((*UserSingleQuery)(nil), "idm.UserSingleQuery")
	proto.RegisterType((*CreateWorkspaceRequest)(nil), "idm.CreateWorkspaceRequest")
	proto.RegisterType((*CreateWorkspaceResponse)(nil), "idm.CreateWorkspaceResponse")
	proto.RegisterType((*DeleteWorkspaceRequest)(nil), "idm.DeleteWorkspaceRequest")
	proto.RegisterType((*DeleteWorkspaceResponse)(nil), "idm.DeleteWorkspaceResponse")
	proto.RegisterType((*SearchWorkspaceRequest)(nil), "idm.SearchWorkspaceRequest")
	proto.RegisterType((*SearchWorkspaceResponse)(nil), "idm.SearchWorkspaceResponse")
	proto.RegisterType((*Workspace)(nil), "idm.Workspace")
	proto.RegisterType((*WorkspaceSingleQuery)(nil), "idm.WorkspaceSingleQuery")
	proto.RegisterType((*CreateACLRequest)(nil), "idm.CreateACLRequest")
	proto.RegisterType((*CreateACLResponse)(nil), "idm.CreateACLResponse")
	proto.RegisterType((*DeleteACLRequest)(nil), "idm.DeleteACLRequest")
	proto.RegisterType((*DeleteACLResponse)(nil), "idm.DeleteACLResponse")
	proto.RegisterType((*SearchACLRequest)(nil), "idm.SearchACLRequest")
	proto.RegisterType((*SearchACLResponse)(nil), "idm.SearchACLResponse")
	proto.RegisterType((*ACLAction)(nil), "idm.ACLAction")
	proto.RegisterType((*ACL)(nil), "idm.ACL")
	proto.RegisterType((*ACLSingleQuery)(nil), "idm.ACLSingleQuery")
	proto.RegisterType((*UserMeta)(nil), "idm.UserMeta")
	proto.RegisterType((*UserMetaNamespace)(nil), "idm.UserMetaNamespace")
	proto.RegisterType((*UpdateUserMetaRequest)(nil), "idm.UpdateUserMetaRequest")
	proto.RegisterType((*UpdateUserMetaResponse)(nil), "idm.UpdateUserMetaResponse")
	proto.RegisterType((*SearchUserMetaRequest)(nil), "idm.SearchUserMetaRequest")
	proto.RegisterType((*SearchUserMetaResponse)(nil), "idm.SearchUserMetaResponse")
	proto.RegisterType((*UpdateUserMetaNamespaceRequest)(nil), "idm.UpdateUserMetaNamespaceRequest")
	proto.RegisterType((*UpdateUserMetaNamespaceResponse)(nil), "idm.UpdateUserMetaNamespaceResponse")
	proto.RegisterType((*ListUserMetaNamespaceRequest)(nil), "idm.ListUserMetaNamespaceRequest")
	proto.RegisterType((*ListUserMetaNamespaceResponse)(nil), "idm.ListUserMetaNamespaceResponse")
	proto.RegisterType((*ChangeEvent)(nil), "idm.ChangeEvent")
	proto.RegisterType((*PolicyEngineRequest)(nil), "idm.PolicyEngineRequest")
	proto.RegisterType((*PolicyEngineResponse)(nil), "idm.PolicyEngineResponse")
	proto.RegisterType((*PolicyCondition)(nil), "idm.PolicyCondition")
	proto.RegisterType((*Policy)(nil), "idm.Policy")
	proto.RegisterType((*PolicyGroup)(nil), "idm.PolicyGroup")
	proto.RegisterType((*StorePolicyGroupRequest)(nil), "idm.StorePolicyGroupRequest")
	proto.RegisterType((*StorePolicyGroupResponse)(nil), "idm.StorePolicyGroupResponse")
	proto.RegisterType((*DeletePolicyGroupRequest)(nil), "idm.DeletePolicyGroupRequest")
	proto.RegisterType((*DeletePolicyGroupResponse)(nil), "idm.DeletePolicyGroupResponse")
	proto.RegisterType((*ListPolicyGroupsRequest)(nil), "idm.ListPolicyGroupsRequest")
	proto.RegisterType((*ListPolicyGroupsResponse)(nil), "idm.ListPolicyGroupsResponse")
	proto.RegisterEnum("idm.NodeType", NodeType_name, NodeType_value)
	proto.RegisterEnum("idm.WorkspaceScope", WorkspaceScope_name, WorkspaceScope_value)
	proto.RegisterEnum("idm.ChangeEventType", ChangeEventType_name, ChangeEventType_value)
	proto.RegisterEnum("idm.PolicyEffect", PolicyEffect_name, PolicyEffect_value)
	proto.RegisterEnum("idm.PolicyResourceGroup", PolicyResourceGroup_name, PolicyResourceGroup_value)
	proto.RegisterEnum("idm.UpdateUserMetaRequest_UserMetaOp", UpdateUserMetaRequest_UserMetaOp_name, UpdateUserMetaRequest_UserMetaOp_value)
	proto.RegisterEnum("idm.UpdateUserMetaNamespaceRequest_UserMetaNsOp", UpdateUserMetaNamespaceRequest_UserMetaNsOp_name, UpdateUserMetaNamespaceRequest_UserMetaNsOp_value)
}

func init() { proto.RegisterFile("idm.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 2754 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x1a, 0x4d, 0x6f, 0x1b, 0xd7,
	0x51, 0xbb, 0x14, 0x25, 0xee, 0x50, 0xa6, 0xa8, 0x17, 0x59, 0xa2, 0x69, 0xd9, 0x51, 0x36, 0x6e,
	0x2a, 0xab, 0x06, 0xe5, 0xd2, 0x75, 0x20, 0xc7, 0x89, 0x63, 0x9a, 0x64, 0x64, 0xd6, 0x32, 0xa9,
	0xac, 0xc4, 0x04, 0x39, 0xae, 0xc8, 0x27, 0x99, 0x31, 0xb5, 0xcb, 0xee, 0x2e, 0x6d, 0xeb, 0x56,
	0xf4, 0xd8, 0x4b, 0xd1, 0x53, 0xff, 0x40, 0x8f, 0xbd, 0x15, 0xfd, 0x15, 0x41, 0x81, 0x5e, 0x0a,
	0xa4, 0xd7, 0x02, 0x3d, 0x14, 0xe8, 0x1f, 0xe8, 0xad, 0x78, 0x9f, 0xfb, 0xf6, 0x83, 0x14, 0xa5,
	0xfa, 0x22, 0xf0, 0xcd, 0xbc, 0x99, 0x79, 0x6f, 0xbe, 0xde, 0xcc, 0xac, 0xc0, 0x18, 0xf4, 0xcf,
	0x2a, 0x23, 0xcf, 0x0d, 0x5c, 0x94, 0x19, 0xf4, 0xcf, 0xca, 0xbb, 0xa7, 0x83, 0xe0, 0xd5, 0xf8,
	0xb8, 0xd2, 0x73, 0xcf, 0x76, 0x46, 0xe7, 0xfd, 0x81, 0xbb, 0xd3, 0xc3, 0xc3, 0xa1, 0xbf, 0xd3,
	0x73, 0xcf, 0xce, 0x5c, 0x67, 0xc7, 0xc7, 0xde, 0x9b, 0x41, 0x0f, 0xef, 0x50, 0x0a, 0x0e, 0x64,
	0xe4, 0xe5, 0x07, 0xd3, 0x29, 0x19, 0x45, 0xe0, 0x61, 0x4c, 0xff, 0x30, 0x22, 0xb3, 0x0a, 0x2b,
	0x75, 0x0f, 0xdb, 0x01, 0xb6, 0xdc, 0x21, 0xb6, 0xf0, 0xaf, 0xc6, 0xd8, 0x0f, 0xd0, 0x2d, 0x98,
	0x27, 0xcb, 0x92, 0xb6, 0xa9, 0x6d, 0xe5, 0xab, 0x46, 0x85, 0x1c, 0x91, 0xe2, 0x29, 0xd8, 0x7c,
	0x00, 0x48, 0xa5, 0xf1, 0x47, 0xae, 0xe3, 0xe3, 0x8b, 0x88, 0x1e, 0xc1, 0x4a, 0x03, 0x0f, 0x71,
	0x54, 0xd0, 0x1d, 0xc8, 0x7e, 0x3d, 0xc6, 0xde, 0x39, 0x27, 0x2a, 0x54, 0xf8, 0xf5, 0x2a, 0x14,
	0x6a, 0x31, 0xa4, 0xf9, 0x29, 0x20, 0x95, 0x94, 0xcb, 0xdb, 0x84, 0xbc, 0xe5, 0xbe, 0xf5, 0x19,
	0xa6, 0x4f, 0x39, 0x64, 0x2c, 0x15, 0x44, 0x44, 0x1e, 0x62, 0xdb, 0xeb, 0xbd, 0xba, 0xbc, 0xc8,
	0x07, 0x80, 0x54, 0xd2, 0xd9, 0xae, 0xf8, 0x17, 0x9d, 0xe1, 0x11, 0x82, 0xf9, 0xee, 0x78, 0xc0,
	0xce, 0x64, 0x58, 0xf4, 0x37, 0x5a, 0x85, 0xec, 0xbe, 0x7d, 0x8c, 0x87, 0x25, 0x9d, 0x02, 0xd9,
	0x02, 0xad, 0xc1, 0x42, 0xcb, 0x3f, 0xc2, 0xf6, 0x59, 0x29, 0xb3, 0xa9, 0x6d, 0xe5, 0x2c, 0xbe,
	0x42, 0x1b, 0x60, 0xec, 0x79, 0xee, 0x78, 0x44, 0xc5, 0xcd, 0x53, 0x54, 0x08, 0x40, 0x65, 0xc8,
	0x75, 0x7d, 0xec, 0x51, 0x64, 0x96, 0x22, 0xe5, 0x9a, 0xa8, 0x65, 0xdf, 0xf6, 0x83, 0xee, 0xa8,
	0x6f, 0x13, 0xb5, 0x2c, 0x6c, 0x6a, 0x5b, 0x59, 0x4b, 0x05, 0x91, 0x1d, 0xb5, 0x71, 0xe0, 0xd6,
	0x46, 0xa3, 0xe1, 0x00, 0xfb, 0xa5, 0xc5, 0xcd, 0xcc, 0x96, 0x61, 0xa9, 0x20, 0xf4, 0x00, 0x72,
	0x07, 0xee, 0x70, 0xd0, 0x23, 0xe8, 0xdc, 0x66, 0x66, 0x2b, 0x5f, 0x5d, 0x97, 0x6a, 0xb2, 0xb0,
	0xef, 0x8e, 0xbd, 0x1e, 0xa6, 0x1b, 0xce, 0x2d, 0xb9, 0x11, 0xed, 0xc2, 0xba, 0xf8, 0x5d, 0x77,
	0x9d, 0x00, 0xbf, 0x0b, 0x9a, 0xfd, 0x41, 0x60, 0x1f, 0x0f, 0x71, 0xc9, 0xa0, 0x67, 0x9c, 0x84,
	0x36, 0x7f, 0xd0, 0x60, 0x99, 0x9c, 0xfd, 0x70, 0xe0, 0x9c, 0x0e, 0x31, 0x35, 0x80, 0xa2, 0xc2,
	0xcc, 0x15, 0x55, 0xb8, 0x09, 0xf9, 0x96, 0x1f, 0x57, 0xa2, 0x0a, 0x42, 0xb7, 0x01, 0x5a, 0x7e,
	0x4c, 0x91, 0x0a, 0x04, 0x99, 0xb0, 0xf4, 0xdc, 0xf6, 0x85, 0x62, 0xce, 0xa9, 0x2e, 0x73, 0x56,
	0x04, 0x86, 0x8a, 0x90, 0x71, 0xdc, 0xa0, 0xb4, 0x48, 0x51, 0xe4, 0x67, 0x18, 0x51, 0x94, 0x4f,
	0x18, 0x51, 0x64, 0x19, 0xf1, 0x1c, 0x8a, 0xa7, 0xe0, 0x30, 0xa2, 0x18, 0x4d, 0xe8, 0x6e, 0xd3,
	0x88, 0x5a, 0xb0, 0xfc, 0x6c, 0xe0, 0xf4, 0x55, 0x31, 0x65, 0xc8, 0x8d, 0x7d, 0xec, 0xb5, 0xed,
	0x33, 0xcc, 0x9d, 0x4f, 0xae, 0x09, 0x6e, 0x64, 0xfb, 0xfe, 0x5b, 0xd7, 0xeb, 0x73, 0x05, 0xca,
	0xb5, 0xf9, 0x73, 0x28, 0x86, 0xac, 0x66, 0x93, 0x2e, 0xe3, 0x59, 0x95, 0x7f, 0xc9, 0x78, 0x8e,
	0xc8, 0xbb, 0x44, 0x3c, 0x5f, 0x5e, 0xa4, 0x8c, 0xe7, 0xcb, 0x5c, 0xf1, 0x2e, 0xac, 0xd4, 0xdd,
	0xb1, 0x13, 0x44, 0x68, 0x56, 0x21, 0x4b, 0x81, 0x94, 0x28, 0x6b, 0xb1, 0x85, 0xf9, 0xb7, 0x0c,
	0x63, 0x95, 0x1a, 0xfa, 0x22, 0x98, 0x0f, 0xec, 0xe0, 0x15, 0x57, 0x7d, 0x08, 0x40, 0x8f, 0x00,
	0x6a, 0x41, 0xe0, 0x0d, 0x8e, 0xc7, 0x01, 0xf6, 0x4b, 0x19, 0x1a, 0x6e, 0x37, 0xe4, 0x51, 0x2a,
	0x21, 0xae, 0xe9, 0x04, 0xde, 0xb9, 0xa5, 0x6c, 0x46, 0x1f, 0x42, 0x96, 0x38, 0xaa, 0x5f, 0x9a,
	0xa7, 0x54, 0x4a, 0x42, 0x62, 0x70, 0x1a, 0x31, 0xee, 0xe9, 0xc0, 0xa1, 0xce, 0x4d, 0x22, 0x86,
	0x2c, 0x88, 0x27, 0x1c, 0x08, 0x4f, 0x58, 0x60, 0x9e, 0x20, 0xd6, 0xc4, 0x0a, 0x9d, 0x61, 0x5f,
	0xa2, 0xf3, 0x14, 0xad, 0x82, 0x50, 0x09, 0x16, 0x79, 0x10, 0x71, 0xaf, 0x17, 0x4b, 0x12, 0x4f,
	0xf4, 0x07, 0x0b, 0xd2, 0x1c, 0x25, 0x55, 0x20, 0x91, 0xb4, 0x62, 0xbc, 0x87, 0xb4, 0x02, 0x53,
	0xd3, 0x4a, 0xf9, 0x0b, 0x58, 0x8e, 0x29, 0x8f, 0x44, 0xeb, 0x6b, 0x7c, 0xce, 0x8d, 0x43, 0x7e,
	0x12, 0x0d, 0xbd, 0xb1, 0x87, 0x63, 0x2c, 0x72, 0x0a, 0x5d, 0x7c, 0xa6, 0xef, 0x6a, 0xe6, 0x6f,
	0x32, 0xb0, 0x4c, 0x2c, 0x90, 0x96, 0x95, 0xf2, 0xb1, 0xc4, 0x4e, 0x75, 0xac, 0x4d, 0xd2, 0xb1,
	0x1e, 0xd3, 0x71, 0xc4, 0x1f, 0x32, 0x71, 0x7f, 0xd8, 0x00, 0xc3, 0xc2, 0xbd, 0xb1, 0xe7, 0x0f,
	0xde, 0xc8, 0xd4, 0x2f, 0x01, 0x84, 0xef, 0x57, 0xe3, 0xe1, 0x90, 0x92, 0x2e, 0x31, 0xbe, 0x62,
	0x8d, 0xee, 0xc0, 0x35, 0x79, 0x61, 0x9a, 0x02, 0x98, 0xd5, 0xa3, 0x40, 0xf4, 0x09, 0x14, 0x24,
	0xe0, 0x1b, 0x7a, 0x75, 0xe6, 0x03, 0x31, 0x28, 0xba, 0x07, 0x2b, 0x12, 0x52, 0x73, 0xce, 0xd9,
	0x56, 0x66, 0xf1, 0x24, 0x82, 0x78, 0xc5, 0x73, 0xdb, 0xa7, 0x89, 0x94, 0x19, 0x5e, 0x2c, 0xd1,
	0x5d, 0xc8, 0xb5, 0xdd, 0x3e, 0x3e, 0x3a, 0x1f, 0xb1, 0x87, 0xa0, 0x50, 0xbd, 0x46, 0xfd, 0x54,
	0x00, 0x2d, 0x89, 0x16, 0xc9, 0x14, 0xc2, 0x64, 0xfa, 0x15, 0xac, 0xb1, 0xc4, 0xf8, 0xad, 0xeb,
	0xbd, 0xf6, 0x47, 0x76, 0x4f, 0xbe, 0xe3, 0xf7, 0xc0, 0x90, 0x30, 0x19, 0xfb, 0x84, 0x6f, 0xb8,
	0x33, 0xdc, 0x60, 0xee, 0xc1, 0x7a, 0x82, 0x0f, 0x0f, 0xe8, 0xcb, 0x31, 0x7a, 0x02, 0x6b, 0x2c,
	0x1d, 0x25, 0x0e, 0x34, 0x5b, 0x22, 0x7a, 0x0c, 0xeb, 0x09, 0xfa, 0x99, 0x13, 0xe0, 0x13, 0x58,
	0x63, 0x59, 0xec, 0x8a, 0xc2, 0xf7, 0x60, 0x3d, 0x41, 0x7f, 0x25, 0x2d, 0xfc, 0x27, 0xa3, 0x6c,
	0xa7, 0x51, 0xd1, 0x6d, 0x35, 0x64, 0xce, 0xeb, 0xb6, 0x1a, 0x13, 0xde, 0xea, 0x4d, 0xc8, 0x37,
	0xb0, 0xdf, 0xf3, 0x06, 0xa3, 0x60, 0xe0, 0x3a, 0xdc, 0xf7, 0x55, 0x10, 0xe1, 0x75, 0x38, 0x1c,
	0x9f, 0x52, 0xc7, 0x37, 0x2c, 0xfa, 0x1b, 0xdd, 0x85, 0xec, 0x61, 0xcf, 0x1d, 0x31, 0x7f, 0x2e,
	0x54, 0x3f, 0x88, 0x9e, 0x8b, 0xa2, 0x2c, 0xb6, 0x63, 0x86, 0xea, 0x47, 0x4d, 0x42, 0x8b, 0xb3,
	0x26, 0xa1, 0xdb, 0x91, 0x1c, 0xcd, 0x33, 0x9b, 0x92, 0x88, 0x49, 0xcc, 0xba, 0x6e, 0x40, 0x6e,
	0xce, 0x52, 0x9b, 0x61, 0x85, 0x00, 0xf4, 0x98, 0x61, 0x89, 0x9b, 0xfb, 0xa5, 0x3c, 0x95, 0x79,
	0x2b, 0x7a, 0x87, 0x8a, 0xc4, 0xb3, 0x24, 0x1f, 0xee, 0x9f, 0x96, 0xff, 0x96, 0xa6, 0xe7, 0xbf,
	0xe7, 0x50, 0x88, 0xb2, 0x4d, 0x49, 0x7f, 0x9b, 0x6a, 0xfa, 0xcb, 0x57, 0xa1, 0x42, 0x5b, 0x03,
	0x42, 0xa2, 0xa6, 0xc2, 0x3f, 0x6b, 0xb0, 0x1a, 0xea, 0x3b, 0x9a, 0x0f, 0xc7, 0xca, 0x6b, 0x37,
	0xe6, 0xf9, 0x70, 0xa8, 0x5a, 0x7e, 0x28, 0x2c, 0xdf, 0x4f, 0x5a, 0xbe, 0x1f, 0xb5, 0xbc, 0xaf,
	0x58, 0xde, 0xe7, 0x96, 0xf7, 0x2f, 0xb4, 0x3c, 0xdd, 0x21, 0x72, 0xc7, 0x42, 0x98, 0x3b, 0x2a,
	0x50, 0x64, 0x31, 0x5f, 0xab, 0xef, 0x87, 0x05, 0x52, 0xa6, 0x56, 0xdf, 0xe7, 0x0e, 0x9e, 0xa3,
	0xec, 0x08, 0x96, 0x00, 0xcd, 0x1d, 0x51, 0xb8, 0xd1, 0xfd, 0x3c, 0x2e, 0xa6, 0x11, 0xec, 0x42,
	0x91, 0x45, 0xa6, 0x22, 0x60, 0xb6, 0x40, 0x7c, 0x28, 0x8a, 0x27, 0x55, 0xd4, 0xc5, 0xf1, 0xbf,
	0x0b, 0x45, 0x16, 0xbf, 0x97, 0x16, 0xb8, 0x23, 0x4a, 0xa7, 0x59, 0xef, 0xf6, 0x10, 0x8c, 0x5a,
	0x7d, 0xbf, 0xd6, 0x13, 0xa6, 0x51, 0x4a, 0x4a, 0xfa, 0x9b, 0x98, 0xf9, 0x1b, 0xf5, 0xe1, 0xa4,
	0x0b, 0xf3, 0x77, 0x1a, 0xe5, 0x89, 0x0a, 0xa0, 0xcb, 0x84, 0xa0, 0xb7, 0x1a, 0xe8, 0x13, 0x58,
	0x60, 0xbc, 0xb8, 0xa3, 0x15, 0x84, 0x34, 0x06, 0xb5, 0x38, 0x96, 0x14, 0xf3, 0xe4, 0xd1, 0x68,
	0x35, 0xb8, 0x87, 0xf0, 0x15, 0xd1, 0x8d, 0x34, 0x7b, 0xab, 0xc1, 0x7d, 0x44, 0x05, 0x11, 0x4a,
	0xe2, 0xb6, 0xad, 0x06, 0x7f, 0xf5, 0xf8, 0xca, 0xfc, 0xa3, 0x06, 0x85, 0x5a, 0x7d, 0x5f, 0xf5,
	0xda, 0x2d, 0x58, 0x64, 0xe2, 0x7c, 0xda, 0x5e, 0x24, 0x4f, 0x23, 0xd0, 0xe4, 0x55, 0x63, 0x07,
	0xf0, 0x4b, 0x3a, 0x8d, 0x6a, 0xb1, 0x24, 0xbd, 0x81, 0x22, 0x9d, 0xd5, 0x6d, 0x86, 0x15, 0x81,
	0x11, 0x6a, 0x76, 0x08, 0x56, 0xa0, 0x19, 0x96, 0x58, 0x0a, 0x67, 0xcd, 0x86, 0xce, 0xfa, 0x2f,
	0x8d, 0xf5, 0x74, 0x2f, 0x71, 0x60, 0xa7, 0x16, 0x91, 0x65, 0xf6, 0x8c, 0x52, 0x38, 0x2f, 0x28,
	0xc4, 0x9a, 0xa4, 0x1f, 0x62, 0x13, 0x96, 0xbc, 0x79, 0x41, 0x21, 0x01, 0x04, 0xfb, 0x4b, 0xdf,
	0x75, 0x98, 0xb5, 0x98, 0xe6, 0x42, 0x40, 0x24, 0x1f, 0x66, 0xdf, 0x43, 0x51, 0xb6, 0x30, 0xbd,
	0xd7, 0xfb, 0x51, 0x83, 0x15, 0x71, 0xcf, 0xc8, 0x11, 0xc3, 0x0b, 0x68, 0xf1, 0x0b, 0xa4, 0xbf,
	0x25, 0xab, 0x90, 0xed, 0x78, 0x7d, 0xec, 0xd1, 0x0b, 0x67, 0x2d, 0xb6, 0x20, 0x9c, 0x5a, 0x4e,
	0x1f, 0xbf, 0xa3, 0x67, 0xe1, 0xd5, 0x93, 0x04, 0x90, 0xda, 0x87, 0xdc, 0xbc, 0x81, 0x4f, 0x06,
	0xce, 0x80, 0xba, 0x23, 0x73, 0x96, 0x18, 0x34, 0xa2, 0x94, 0x85, 0x19, 0x95, 0x62, 0xfe, 0x49,
	0x83, 0xeb, 0xec, 0x95, 0x11, 0x17, 0x14, 0x31, 0x5a, 0x07, 0xa3, 0x33, 0xc2, 0x9e, 0x4d, 0x25,
	0x6a, 0x34, 0x95, 0xfd, 0x84, 0x55, 0xf8, 0x69, 0xdb, 0x2b, 0x62, 0xdd, 0x19, 0x59, 0x21, 0x1d,
	0xfa, 0x19, 0x18, 0x04, 0xd8, 0xb0, 0x03, 0x5b, 0xb4, 0x09, 0xd7, 0x64, 0x9b, 0x40, 0xc9, 0x43,
	0xbc, 0xf9, 0x11, 0x40, 0xc8, 0x05, 0x2d, 0x42, 0xe6, 0xa0, 0x7b, 0x54, 0x9c, 0x43, 0x00, 0x0b,
	0x8d, 0xe6, 0x7e, 0xf3, 0xa8, 0x59, 0xd4, 0xcc, 0x26, 0xac, 0xc5, 0xc5, 0xf3, 0xbc, 0x70, 0x29,
	0x49, 0xff, 0xd6, 0xe0, 0x7a, 0xd8, 0x5a, 0xa9, 0xb7, 0xde, 0x60, 0x6c, 0x88, 0x87, 0xfa, 0xbc,
	0x8f, 0x0f, 0x01, 0xd4, 0xe4, 0xdc, 0x7f, 0x45, 0x70, 0x85, 0x80, 0x0b, 0x3c, 0xba, 0x0a, 0xab,
	0xc2, 0x0a, 0x87, 0xe3, 0xe3, 0xef, 0x71, 0x2f, 0xe8, 0xbc, 0x75, 0xb0, 0xc7, 0x9d, 0x3b, 0x15,
	0x87, 0x9e, 0xc1, 0x35, 0x01, 0x67, 0xf9, 0x32, 0x4b, 0x13, 0xd1, 0xc6, 0x04, 0xbb, 0xb2, 0xec,
	0x19, 0x25, 0x31, 0xeb, 0xa2, 0xfe, 0x4a, 0xa8, 0xec, 0x6e, 0x18, 0xbd, 0x3c, 0x9f, 0xc6, 0x34,
	0x26, 0xd1, 0xe6, 0x5f, 0x35, 0xb8, 0x1d, 0x55, 0xbc, 0xbc, 0x98, 0xd0, 0x5c, 0x3b, 0xe9, 0x2f,
	0xf7, 0x53, 0xfc, 0x25, 0x4e, 0x27, 0xa5, 0xb5, 0xfd, 0xa8, 0xeb, 0x7c, 0x0a, 0x20, 0xf7, 0x32,
	0x65, 0xe7, 0xab, 0x6b, 0x91, 0xf3, 0x85, 0xac, 0x94, 0x9d, 0xe6, 0xc7, 0xb0, 0xa4, 0xb2, 0x4c,
	0xf7, 0xa3, 0xef, 0xe0, 0xc3, 0x89, 0xc7, 0xe2, 0xda, 0x89, 0xca, 0xd7, 0x66, 0x96, 0x7f, 0x1b,
	0x36, 0xf6, 0x07, 0x7e, 0x30, 0xe9, 0xbe, 0x26, 0x86, 0x5b, 0x13, 0xf0, 0x5c, 0x70, 0x23, 0x25,
	0xd9, 0x70, 0xfb, 0x4c, 0x92, 0x9f, 0x24, 0x30, 0xff, 0xa1, 0x43, 0xbe, 0xfe, 0xca, 0x76, 0x4e,
	0x71, 0xf3, 0x0d, 0x76, 0x02, 0xb4, 0x0e, 0xb9, 0xef, 0x7d, 0xd7, 0xa1, 0x1d, 0x0d, 0x6f, 0xfa,
	0x9e, 0x06, 0xa4, 0x7f, 0xd9, 0x82, 0x79, 0x0a, 0xd4, 0xa9, 0xc9, 0x56, 0xa9, 0x04, 0x85, 0x90,
	0x76, 0x3b, 0x74, 0x87, 0x9c, 0x3c, 0x64, 0x52, 0x27, 0x0f, 0x72, 0xd0, 0x38, 0x9f, 0x3a, 0x68,
	0x8c, 0x16, 0xeb, 0xd9, 0x0b, 0x8a, 0x75, 0xfa, 0xcc, 0xf7, 0x86, 0x34, 0x31, 0x47, 0x9f, 0xf9,
	0xde, 0x10, 0x3d, 0x8d, 0x14, 0xb6, 0xac, 0x1e, 0xde, 0x8c, 0x9f, 0x7b, 0xda, 0x0c, 0xe2, 0xff,
	0xed, 0xb2, 0xff, 0xa9, 0xc1, 0x07, 0x2c, 0xe2, 0x9a, 0xce, 0xe9, 0xc0, 0xc1, 0xca, 0x24, 0x4b,
	0xc4, 0x9e, 0x98, 0x64, 0x89, 0x35, 0x79, 0xea, 0x95, 0x62, 0xc2, 0x90, 0xc5, 0x43, 0x19, 0x72,
	0x3c, 0xe4, 0xc5, 0x7b, 0x2c, 0xd7, 0xe8, 0x4b, 0x58, 0xe4, 0x4f, 0x11, 0x1f, 0x96, 0xb0, 0x04,
	0x9c, 0x22, 0xba, 0x22, 0x9e, 0x2c, 0x7a, 0x55, 0x41, 0x55, 0xfe, 0x0c, 0x96, 0x54, 0xc4, 0xa5,
	0x2e, 0xf9, 0x06, 0x56, 0xa3, 0x82, 0xb8, 0x7b, 0x96, 0x60, 0xb1, 0x36, 0x1c, 0xba, 0x6f, 0x79,
	0xb5, 0x97, 0xb3, 0xc4, 0x92, 0x94, 0x17, 0xcd, 0x77, 0x23, 0xf2, 0xb0, 0x04, 0x0d, 0xec, 0x9c,
	0x53, 0x96, 0x39, 0x2b, 0x02, 0x63, 0xcd, 0xd4, 0x89, 0x3d, 0x1e, 0xb2, 0x2d, 0x6c, 0xfa, 0xa9,
	0x82, 0xcc, 0x3d, 0x58, 0x66, 0x72, 0xeb, 0xae, 0xd3, 0x1f, 0x88, 0x52, 0x2e, 0x08, 0xfd, 0x96,
	0xfe, 0x26, 0x8c, 0x88, 0x3f, 0x77, 0x46, 0xac, 0x26, 0x62, 0xc7, 0x57, 0x41, 0xe6, 0x0f, 0x3a,
	0x2c, 0x30, 0x4e, 0xa4, 0xb2, 0x93, 0x95, 0x89, 0x3e, 0xe8, 0xc7, 0x0b, 0x7b, 0x3d, 0x59, 0xd8,
	0x97, 0x21, 0xe7, 0xc7, 0xcc, 0x22, 0xd6, 0x24, 0xcf, 0x7b, 0xdc, 0xac, 0xa2, 0x48, 0x0a, 0x01,
	0x44, 0x3f, 0x36, 0x2f, 0xd4, 0xb2, 0xac, 0x80, 0xe2, 0x4b, 0x74, 0x17, 0x16, 0xf0, 0xc9, 0x09,
	0xee, 0xb1, 0x82, 0xbf, 0x50, 0x5d, 0x51, 0xad, 0x49, 0x11, 0x16, 0xdf, 0x80, 0x1e, 0x03, 0xf4,
	0xc4, 0xf5, 0x85, 0x8b, 0xdf, 0x54, 0xb6, 0x57, 0xa4, 0x72, 0x84, 0x77, 0x87, 0xdb, 0xcb, 0x87,
	0xb0, 0x1c, 0x43, 0xa7, 0x18, 0x7e, 0x3b, 0xda, 0x44, 0xad, 0x2a, 0xcc, 0x25, 0xb1, 0xea, 0x0e,
	0xbf, 0xd6, 0x21, 0xcf, 0xd0, 0x6c, 0x6e, 0x96, 0x56, 0xee, 0x89, 0x92, 0x5b, 0x57, 0x4a, 0xee,
	0x8b, 0xbb, 0xe7, 0x0d, 0x30, 0xe8, 0x6b, 0x47, 0xd9, 0xf1, 0x52, 0x4f, 0x02, 0xd0, 0x93, 0xf0,
	0x09, 0x64, 0xf3, 0x3b, 0xd6, 0x55, 0x95, 0x94, 0xf3, 0x46, 0xf0, 0x56, 0x74, 0xfb, 0x0c, 0xcd,
	0xf5, 0x4f, 0x13, 0xcd, 0x75, 0x5e, 0x65, 0x1e, 0xd6, 0x4a, 0x2f, 0x61, 0xfd, 0x30, 0x70, 0x3d,
	0xac, 0xa8, 0x41, 0x44, 0x7e, 0x35, 0xa2, 0x1c, 0x9e, 0xad, 0x8b, 0x0a, 0x1b, 0xb6, 0x5b, 0xdd,
	0x64, 0xb6, 0xa1, 0x94, 0x64, 0xc7, 0x83, 0xec, 0x8a, 0xfc, 0x58, 0xcf, 0xf5, 0x9e, 0xce, 0xf7,
	0x10, 0x6e, 0xa4, 0xf0, 0x0b, 0xb3, 0xc0, 0xe1, 0xb8, 0xd7, 0xc3, 0xbe, 0x2f, 0xb2, 0x00, 0x5f,
	0x9a, 0x37, 0x60, 0x9d, 0xbc, 0x6f, 0x0a, 0x91, 0x2f, 0x9e, 0xbe, 0x13, 0x28, 0x25, 0x51, 0x9c,
	0xe1, 0x2f, 0x60, 0x49, 0x85, 0xf3, 0x07, 0x37, 0x79, 0xc4, 0xc8, 0x2e, 0x92, 0xbe, 0x8e, 0xdc,
	0xc0, 0x66, 0x55, 0x76, 0xd6, 0x62, 0x8b, 0xed, 0x7b, 0xe1, 0xf4, 0x0e, 0xe5, 0x61, 0xb1, 0xdb,
	0x7e, 0xd1, 0xee, 0x7c, 0xdb, 0x2e, 0xce, 0xa1, 0x1c, 0xcc, 0x77, 0x0f, 0x9b, 0x56, 0x51, 0x43,
	0x06, 0x64, 0xf7, 0xac, 0x4e, 0xf7, 0xa0, 0xa8, 0x6f, 0xef, 0x42, 0x21, 0xda, 0x9d, 0x93, 0x92,
	0xa1, 0xd6, 0xfe, 0xae, 0x38, 0x47, 0x76, 0xd5, 0x1a, 0x2f, 0x5b, 0xed, 0xa2, 0x46, 0x48, 0xad,
	0x4e, 0xe7, 0x65, 0x51, 0x27, 0xbf, 0xf6, 0x5b, 0xed, 0x17, 0xc5, 0xcc, 0x76, 0x17, 0x96, 0x63,
	0x2f, 0x25, 0x29, 0x32, 0xea, 0x56, 0xb3, 0x76, 0xd4, 0x64, 0xd2, 0xac, 0x66, 0xad, 0x51, 0xd4,
	0x08, 0xb4, 0x7b, 0xd0, 0x20, 0x50, 0x5d, 0x29, 0x43, 0x32, 0x64, 0xc7, 0xb3, 0x56, 0xbb, 0x51,
	0x9c, 0x27, 0xd0, 0xfd, 0xce, 0x5e, 0xa7, 0x7b, 0x54, 0xcc, 0x6e, 0xdf, 0x17, 0xaa, 0x60, 0x49,
	0x81, 0x5c, 0x61, 0xec, 0xbc, 0x76, 0xdc, 0xb7, 0x0e, 0x63, 0xda, 0xc7, 0xce, 0x39, 0xbb, 0x82,
	0x4d, 0x32, 0x6f, 0x51, 0xdf, 0xae, 0x8a, 0xf7, 0x28, 0xea, 0xfb, 0x39, 0x98, 0xf7, 0xb0, 0x1f,
	0x14, 0xe7, 0xc8, 0x8d, 0xec, 0xde, 0x90, 0x5d, 0xc3, 0x1d, 0xf4, 0x7b, 0x45, 0xbd, 0xfa, 0x07,
	0x9d, 0xb4, 0xee, 0x43, 0x7c, 0xc8, 0x4a, 0x49, 0xf4, 0x25, 0x40, 0xf8, 0x81, 0x14, 0xb1, 0x4a,
	0x23, 0xf1, 0x95, 0xb5, 0xbc, 0x9e, 0x80, 0x33, 0xfb, 0x99, 0x73, 0x84, 0x41, 0xf8, 0xc5, 0x93,
	0x33, 0x48, 0x7c, 0x3d, 0xe5, 0x0c, 0x92, 0x9f, 0x46, 0xcd, 0x39, 0x54, 0x03, 0x08, 0xbf, 0x5f,
	0x72, 0x06, 0x89, 0x6f, 0xa1, 0x9c, 0x41, 0xf2, 0x43, 0xa7, 0x39, 0x77, 0x5f, 0x43, 0x75, 0x80,
	0xc3, 0xc0, 0xc3, 0xf6, 0xd9, 0x15, 0x59, 0x6c, 0x69, 0xf7, 0xb5, 0xea, 0xef, 0x33, 0x90, 0xa7,
	0x43, 0xf4, 0xb8, 0x66, 0x68, 0x99, 0xa3, 0x6a, 0x46, 0xf9, 0xa6, 0x13, 0xd1, 0x8c, 0xfa, 0xf1,
	0x45, 0xd5, 0x8c, 0xc2, 0x20, 0xf1, 0x1d, 0x2a, 0xa2, 0x99, 0x18, 0x83, 0x47, 0x90, 0x13, 0x9f,
	0xba, 0x10, 0xcb, 0xd4, 0xb1, 0x8f, 0x68, 0xe5, 0xeb, 0x31, 0xa8, 0x24, 0xfd, 0x02, 0x0c, 0xf9,
	0x3d, 0x28, 0xa2, 0x10, 0x95, 0x9a, 0xdf, 0x29, 0xfe, 0xdd, 0x48, 0xb5, 0xc9, 0x54, 0xfa, 0xf5,
	0x04, 0x3c, 0xcd, 0x26, 0x57, 0x64, 0x41, 0x6d, 0xf2, 0xa3, 0x0e, 0xc5, 0x30, 0x4a, 0xb9, 0x61,
	0xda, 0xb0, 0x1c, 0x1b, 0x90, 0xa3, 0x9b, 0x8a, 0x15, 0xe2, 0x03, 0xe7, 0xf2, 0x46, 0x3a, 0x52,
	0x5e, 0xb6, 0x0d, 0xcb, 0xb1, 0x39, 0x37, 0xe7, 0x97, 0x3e, 0x3d, 0xe7, 0xfc, 0x26, 0x8c, 0xc6,
	0xcd, 0x39, 0x74, 0x00, 0xcb, 0xb1, 0xd1, 0x35, 0xe7, 0x97, 0x3e, 0x10, 0xe7, 0xfc, 0x26, 0x4c,
	0xbb, 0xa9, 0x2e, 0x2d, 0x58, 0x66, 0xba, 0x7c, 0x3f, 0x1c, 0xa9, 0x6a, 0x7f, 0xab, 0x03, 0xd4,
	0xea, 0xfb, 0x42, 0xa9, 0x9f, 0x83, 0x21, 0x27, 0x8a, 0xe8, 0xba, 0xa2, 0xb1, 0x70, 0x7e, 0x57,
	0x5e, 0x8b, 0x83, 0xe5, 0x95, 0x3f, 0x07, 0x43, 0x0e, 0x09, 0x39, 0x75, 0x7c, 0xdc, 0x58, 0x5e,
	0x8b, 0x83, 0x25, 0xf5, 0x13, 0x30, 0xe4, 0xc4, 0x8f, 0x53, 0xc7, 0x67, 0x87, 0xe5, 0xb5, 0x38,
	0x58, 0x51, 0xcf, 0x53, 0x30, 0x98, 0x7a, 0xae, 0x42, 0x4f, 0x95, 0xf1, 0x5f, 0x9d, 0x7d, 0x40,
	0x23, 0xcd, 0x94, 0xd0, 0xc8, 0x0b, 0x28, 0x44, 0x9b, 0x45, 0x54, 0x9e, 0x3c, 0x08, 0x29, 0xdf,
	0x4c, 0xc5, 0xc9, 0x2b, 0xbe, 0x84, 0x42, 0xb4, 0x1d, 0xe7, 0xcc, 0x52, 0xc7, 0x11, 0xe5, 0x9b,
	0xa9, 0x38, 0xe5, 0xc6, 0x27, 0xb0, 0x3e, 0xa1, 0x91, 0x45, 0x1f, 0xcf, 0xd0, 0x7d, 0x97, 0xef,
	0x4c, 0xdf, 0x24, 0x8f, 0x7d, 0x0c, 0xd7, 0x53, 0xbb, 0x56, 0xf4, 0x11, 0x65, 0x30, 0xad, 0xe3,
	0x2d, 0x9b, 0xd3, 0xb6, 0x84, 0x77, 0xa9, 0xfe, 0x5d, 0x8f, 0xb6, 0x55, 0x42, 0xff, 0xcf, 0xc0,
	0x68, 0xf9, 0xa2, 0xc9, 0x28, 0x4d, 0x6a, 0x81, 0xca, 0x37, 0x52, 0x30, 0xf2, 0xfc, 0x5f, 0x43,
	0x31, 0x5e, 0x6c, 0x21, 0x1e, 0x1c, 0xe9, 0x25, 0x5d, 0xf9, 0xd6, 0x04, 0xac, 0xca, 0x32, 0x5e,
	0xcd, 0x70, 0x96, 0x13, 0xea, 0x1f, 0xce, 0x72, 0x52, 0x09, 0x64, 0xce, 0xa1, 0x23, 0x31, 0x62,
	0x57, 0x8f, 0x79, 0x4b, 0x09, 0x97, 0x94, 0x73, 0xde, 0x9e, 0x84, 0x16, 0x5c, 0x8f, 0x17, 0xe8,
	0x7f, 0x4d, 0x3d, 0xf8, 0x5f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x34, 0x13, 0x7b, 0x76, 0xb6, 0x25,
	0x00, 0x00,
}
