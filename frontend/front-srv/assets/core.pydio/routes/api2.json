{"swagger":"2.0","host":"localhost","schemes":["http"],"basePath":"/api/v2","info":{"version":"2.0.0","title":"Pydio API V2","description":"Access to a Pydio Server. Second version of the API."},"paths":{"/fs/{path}":{"get":{"x-pydio-action":"ls","description":"Get information about a node and its metadata. By default, it will return \nPydio \"primary\" metadata (stat, internal informations). Extended metadata can\nbe added by some plugins.  \nFor collections (folders), pass the **children** parameter to list its content.  \nTo access the actual content of the nodes, see the I/O API.\n","operationId":"getNodeInfos","parameters":[{"$ref":"#/parameters/pathParameter"},{"name":"meta","in":"query","description":"Level of precision for expected metadata","type":"string","enum":["minimal","standard","extended"],"required":true,"default":"standard"},{"name":"children","in":"query","description":"Load children if node is a collection","required":false,"type":"string","enum":["dfz","d","df","f","fz","z","dz"]},{"name":"recursive","in":"formData","description":"If requiring children, load grandchildren recursively","type":"boolean","required":false},{"name":"max_depth","in":"formData","description":"If requiring children recursively, stop at the given depth. If -1, no limit.","type":"integer","required":false,"default":-1},{"name":"max_nodes","in":"formData","description":"If requiring children recursively, stop at the given depth. If -1, no limit.","type":"integer","required":false,"default":-1},{"name":"remote_order","in":"formData","description":"Apply server-side sorting","type":"boolean","required":false,"default":false},{"name":"order_column","in":"formData","description":"Order column to use for server-side sorting","type":"string","required":false},{"name":"order_direction","in":"formData","description":"Order direction to use for server-side sorting (asc or desc)","type":"string","required":false},{"name":"page_position","in":"formData","description":"For a single file, try to detect the page position in the parent node listing.","type":"boolean","required":false,"default":false},{"name":"X-Indexation-Required","in":"header","description":"Invalidate current index and trigger a background indexation","type":"boolean","required":false}],"produces":["application/json","application/xml"],"responses":{"200":{"description":"Successful response","schema":{"$ref":"#/definitions/NodeList"}}},"tags":["File"]},"post":{"x-pydio-action":"fs_create_resource","description":"Create new resources or move/copy existing resources:\n+ Create a new folder (pass a path **with a trailing slash**), or a new empty file (no trailing slash).\n+ Copy a resource to a new destination: pass destination as {path}, and origin via copy_from parameter.\n+ Rename / Move a resource : basically a copy operation followed by a delete of original\n","operationId":"createNode","parameters":[{"$ref":"#/parameters/pathParameter"},{"name":"copy_source","in":"query","description":"If it's a move or a copy, indicated the path of the original node. Path must contain the original workspace Id, as it can be used for cross repository copy as well.","type":"string","required":false},{"name":"delete_source","in":"query","description":"If it's a move/rename, will remove original after copy operation","required":false,"type":"boolean"},{"name":"override","in":"query","description":"Ignore existing resource and override it","required":false,"type":"boolean","default":false},{"name":"recursive","in":"query","description":"For directories, create parents if necessary","required":false,"type":"boolean","default":false}],"produces":["application/json","application/xml"],"responses":{"200":{"description":"Successful response","schema":{"$ref":"#/definitions/PydioResponse"}}},"tags":["File"]},"patch":{"x-pydio-action":"fs_update_metadata","description":"Update existing resources metadata (see I/O for content modification). Basic metadata is provided by core plugins, but they can be extended by other plugins.\nFor example :\n`{\"core\": {\"chmod\": 777}}, {\"user_meta\":[{\"metaName\":\"metaValue\"}]}`\n`{\"bookmarks\":{\"bookmarked\": true}, \"locks\":{\"locked\":true}, \"meta.watch\":{\"watch\":true}}`\netc...\n","operationId":"updateNode","parameters":[{"$ref":"#/parameters/pathParameter"},{"name":"metadata","in":"formData","description":"Json-serialized metadata to update","type":"string","required":true}],"produces":["application/json","application/xml"],"responses":{"200":{"description":"Successful response","schema":{"$ref":"#/definitions/PydioResponse"}}},"tags":["File"]},"delete":{"x-pydio-action":"delete","description":"Delete existing resource\n","operationId":"deleteNode","parameters":[{"$ref":"#/parameters/pathParameter"}],"produces":["application/json","application/xml"],"responses":{"200":{"description":"Successful response","schema":{"$ref":"#/definitions/PydioResponse"}}},"tags":["File"]}},"/io/{path}":{"get":{"x-pydio-action":"download","description":"Get resource content. Depending on the attachment parameter, will try to either trigger a download, or send binary stream with appropriate headers. Depending on the active plugins, may be able to serve: + Plain text + MP3/Wav Stream + MP4 Stream + On-the-fly generated images + On-the-fly generated thumbnails for images or pdf\n","operationId":"download","parameters":[{"$ref":"#/parameters/pathParameter"},{"name":"attachment","in":"query","description":"if set, send back a force-download, otherwise use Accept header to try to find the best response Content-Type.","type":"boolean","required":false},{"name":"additional_parameters","in":"query","description":"some plugin can take more parameters to send various contents\nderived from main resource. For example, for images, you can pass\nget_thumb & dimension\n","type":"string","required":false}],"produces":["application/octet-stream"],"responses":{"200":{"description":"Successful Response","schema":{"type":"file"}}},"tags":["File"]},"put":{"x-pydio-action":"upload","description":"Create or update resource by posting to Input Stream\n","operationId":"uploadStream","parameters":[{"$ref":"#/parameters/pathParameter"},{"name":"raw","in":"body","description":"binary data","required":true,"schema":{"$ref":"#/definitions/InputStream"}},{"name":"X-Rename-If-Exists","in":"header","required":false,"description":"Automatically increment filename if it already exists","type":"boolean"},{"name":"X-Append-To","in":"header","required":false,"description":"Append uploaded data at the end of existing file","type":"string"},{"name":"X-Partial-Upload","in":"header","required":false,"description":"If the current put is a part of a file. If set, the X-Partial-Target-Bytesize header is required.","type":"boolean"},{"name":"X-Partial-Target-Bytesize","in":"header","required":false,"description":"In case of partial upload, the size of the full file as expected at the end of upload.","type":"integer"}],"responses":{"200":{"description":"Successful Response","schema":{"$ref":"#/definitions/PydioResponse"}}},"tags":["File"]}},"/tasks":{"get":{"description":"List tasks currently running on the server (and visible to the current user).\n","operationId":"listTasks","x-pydio-plugin":"core.tasks","x-pydio-action":"tasks_list","parameters":[{"name":"filter","in":"formData","description":"additional filters for task listing (JSON serialized)","type":"string","required":false},{"$ref":"#/parameters/workspaceIdFormParameter"},{"$ref":"#/parameters/nodeSelectionParameter"}],"responses":{"200":{"description":"Successful Response","schema":{"type":"array","items":{"$ref":"#/definitions/Task"}}}},"tags":["Task"]}},"/tasks/{taskId}":{"get":{"description":"Get information about a currently running task Id\n","operationId":"getTaskInfo","x-pydio-plugin":"core.tasks","x-pydio-action":"task_info","parameters":[{"name":"taskId","in":"path","description":"Task to monitor on the server","type":"string","required":true}],"responses":{"200":{"description":"Successful Response","schema":{"$ref":"#/definitions/Task"}}},"tags":["Task"]},"post":{"description":"Create a task on the server. This will generally trigger a server-side background \"Task\", which ID will be returned in the PydioResponse['tasks'] array\n","operationId":"createTask","x-pydio-plugin":"core.tasks","x-pydio-action":"task_create","consumes":["application/json"],"parameters":[{"name":"taskId","in":"path","description":"Task to launch on the server","type":"string","required":true},{"name":"request_body","in":"body","description":"JSON Task object","schema":{"$ref":"#/definitions/Task"}}],"responses":{"200":{"description":"Successful Response","schema":{"$ref":"#/definitions/Task"}}},"tags":["Task"]},"patch":{"description":"Update a task on the server.\n","operationId":"updateTask","x-pydio-plugin":"core.tasks","x-pydio-action":"task_update","consumes":["application/json"],"parameters":[{"name":"taskId","in":"path","description":"Task to update on the server","type":"string","required":true},{"name":"request_body","in":"body","description":"JSON Diff describing the patches to apply on the task object","schema":{"$ref":"#/definitions/Task"}}],"responses":{"200":{"description":"Successful Response","schema":{"$ref":"#/definitions/Task"}}},"tags":["Task"]},"delete":{"description":"Update a task on the server.\n","operationId":"deleteTask","x-pydio-plugin":"core.tasks","x-pydio-action":"task_delete","parameters":[{"name":"taskId","in":"path","description":"Task to delete on the server","type":"string","required":true}],"responses":{"200":{"description":"Successful Response","schema":{"$ref":"#/definitions/Task"}}},"tags":["Task"]}},"/user":{"get":{"description":"List accessible workspace for currently logged user. Alias for /state/?xPath=user/repositories\n","operationId":"userInfo","produces":["application/json"],"x-pydio-plugin":"core.conf","x-pydio-action":"user_state","responses":{"200":{"description":"Successful Response","schema":{"type":"object"}}},"tags":["User Account"]}},"/user/workspaces":{"get":{"description":"List accessible workspace for currently logged user. Alias for /state/?xPath=user/repositories\n","operationId":"userWorkspaces","produces":["application/json"],"x-pydio-plugin":"core.conf","x-pydio-action":"user_state","responses":{"200":{"description":"Successful Response","schema":{"type":"object"}}},"tags":["User Account"]}},"/user/preferences":{"get":{"description":"List accessible workspace for currently logged user. Alias for /state/?xPath=user/preferences\n","operationId":"userPreferences","produces":["application/json"],"x-pydio-plugin":"core.conf","x-pydio-action":"user_state","responses":{"200":{"description":"Successful Response","schema":{"type":"object"}}},"tags":["User Account"]}},"/workspaces/{workspaceId}":{"get":{"description":"Get information about the given workspace.\nInfo can be gathered via various plugins. Pass the expected metadata type via the X-Pydio-Ws-Info header. Currently supported values are quota|info|changes\n","operationId":"getWorkspaceInfo","produces":["application/json"],"parameters":[{"name":"X-Pydio-WS-Info","in":"header","required":true,"type":"string","enum":["quota","info"]},{"$ref":"#/parameters/workspaceIdParameter"}],"x-pydio-plugin":"core.conf","x-pydio-action":"load_repository_info","responses":{"200":{"description":"Successful Response","schema":{"type":"object","properties":{"USAGE":{"type":"integer"},"TOTAL":{"type":"integer"}}}}},"tags":["Workspace"]}},"/workspaces/{workspaceId}/changes/{sequenceId}":{"get":{"description":"Sends back all changes since a given sequence ID.  \n\nThis plugin requires **meta.syncable** active on the workspace.\n","operationId":"changes","produces":["application/json"],"parameters":[{"name":"sequenceId","in":"path","description":"File to upload","required":true,"type":"integer"},{"$ref":"#/parameters/workspaceIdParameter"}],"x-pydio-plugin":"meta.syncable","x-pydio-action":"changes","responses":{"200":{"description":"Successful Response","schema":{"type":"array","items":{"type":"object","properties":{"seq_id":{"type":"integer"},"node":{"$ref":"#/definitions/Node"}}}}}},"tags":["Workspace"]}},"/admin/roles":{"get":{"x-pydio-action":"ls","description":"List roles\n","operationId":"getRoles","produces":["application/json","application/xml"],"responses":{"200":{"description":"A list of roles represented as standard nodes","schema":{"$ref":"#/definitions/NodeList"}}},"tags":["Provisioning"]}},"/admin/roles/{roleId}":{"get":{"x-pydio-action":"edit_role","description":"Get Role by Id\n","operationId":"getRole","parameters":[{"name":"roleId","in":"path","description":"Id of the role to load","type":"string","required":true},{"name":"load_fill_values","in":"query","description":"Load additional data to build a form for editing this role","type":"boolean","required":false}],"produces":["application/json"],"responses":{"200":{"description":"Successful response","schema":{"$ref":"#/definitions/Role"}}},"tags":["Provisioning"]},"delete":{"x-pydio-action":"delete","description":"Delete Role by Id\n","operationId":"deleteRole","parameters":[{"name":"roleId","in":"path","description":"Id of the role to delete","type":"string","required":true}],"produces":["application/json"],"responses":{"200":{"description":"Successful response","schema":{"$ref":"#/definitions/PydioResponse"}}},"tags":["Provisioning"]},"post":{"x-pydio-action":"create_role","description":"Create a new role with this ID\n","operationId":"createRole","parameters":[{"name":"roleId","in":"path","description":"Id of the role to load","type":"string","required":true},{"name":"role","in":"body","schema":{"$ref":"#/definitions/Role"},"description":"JSON description of the new role","required":true}],"produces":["application/json"],"consumes":["application/json"],"responses":{"200":{"description":"Successful response","schema":{"$ref":"#/definitions/Role"}}},"tags":["Provisioning"]},"patch":{"x-pydio-action":"post_json_role","description":"Update the role\n","operationId":"updateRole","parameters":[{"name":"roleId","in":"path","description":"Id of the role to load","type":"string","required":true},{"name":"role","in":"body","schema":{"$ref":"#/definitions/Role"},"description":"JSON description of the new role","required":true}],"produces":["application/json"],"consumes":["application/json"],"responses":{"200":{"description":"Successful response","schema":{"$ref":"#/definitions/Role"}}},"tags":["Provisioning"]}},"/admin/people/{path}":{"get":{"x-pydio-action":"ls","description":"List roles\n","operationId":"getPeople","produces":["application/json","application/xml"],"parameters":[{"$ref":"#/parameters/peopleParameterOptional"},{"name":"list","in":"query","description":"list children of the current resource","type":"boolean","default":true}],"responses":{"200":{"description":"A user/group or list of users and groups","schema":{"$ref":"#/definitions/NodeList"}}},"tags":["Provisioning"]},"delete":{"x-pydio-action":"people-delete-resource","description":"Delete Role by Id\n","operationId":"deletePeople","parameters":[{"$ref":"#/parameters/peopleParameter"}],"produces":["application/json"],"responses":{"200":{"description":"Successful response","schema":{"$ref":"#/definitions/PydioResponse"}}},"tags":["Provisioning"]},"post":{"x-pydio-action":"people-create-resource","description":"Create a new user or a new group with this path. To create a user,  make sure to pass a userPass parameter. Otherwise it will create a  group.\n","operationId":"createPeople","parameters":[{"$ref":"#/parameters/peopleParameter"},{"name":"resourceType","in":"formData","type":"string","enum":["user","group"],"description":"Wether it's a user or a group","required":true},{"name":"groupLabel","in":"formData","type":"string","description":"Label of the new group if we are creating a group","required":false},{"name":"userPass","in":"formData","type":"string","description":"Password of the new user if we are creating a user","required":false}],"produces":["application/json"],"consumes":["application/json"],"responses":{"200":{"description":"Successful response","schema":{"$ref":"#/definitions/PydioResponse"}}},"tags":["Provisioning"]},"patch":{"x-pydio-action":"people-patch-resource","description":"Update user or group specific data with this path. Use resourceType parameter to discriminate, and send a parameterName/parameterValue couple to be patched.\n\nAuthorized parameterName values are described below, along with the parameterValue corresponding specification: \n- For groups\n  - groupLabel : relabel an existing group\n- For users\n  - userPass: change user password\n  - userProfile: update user profile\n  - userLock: set/remove a lock on a user. Value must be a lockname:lockvalue string where lockvalue is \"true\" or \"fale\".\n  - userRoles: Bunch update roles, eventually reorder them, as a JSON encoded array.\n  - userAddRole: add a role to the user\n  - userRemoveRole: remove a role currently applied to the user.\n  - userPreferences: a JSON associative array of key/values to update.\n\nTo edit user/group permissions or parameters, use the role api instead,  using the object specific role_id (AJXP_GRP_/groupPath or AJXP_USR_/userId).\n","operationId":"patchPeople","parameters":[{"$ref":"#/parameters/peopleParameter"},{"name":"resourceType","in":"query","type":"string","enum":["user","group"],"description":"Wether it's a user or a group","required":true},{"name":"patch-tuple","in":"body","schema":{"$ref":"#/definitions/PeoplePatch"},"description":"parameterName / parameterValue association","required":true}],"produces":["application/json"],"consumes":["application/json"],"responses":{"200":{"description":"Successful response","schema":{"$ref":"#/definitions/PydioResponse"}}},"tags":["Provisioning"]}},"/admin/workspaces":{"get":{"x-pydio-action":"ls","description":"List Workspaces\n","operationId":"adminListWorkspaces","produces":["application/json","application/xml"],"responses":{"200":{"description":"A list of workspaces represented as standard nodes","schema":{"$ref":"#/definitions/NodeList"}}},"tags":["Provisioning"]},"post":{"x-pydio-action":"post_repository","description":"Create a workspace from scratch by posting JSON data\n","operationId":"adminCreateWorkspace","parameters":[{"name":"payload","in":"body","description":"Repository details","schema":{"$ref":"#/definitions/AdminWorkspace"},"required":true}],"produces":["application/json","application/xml"],"responses":{"200":{"description":"Workspace object","schema":{"$ref":"#/definitions/AdminWorkspace"}}},"tags":["Provisioning"]},"patch":{"x-pydio-action":"patch_repository","description":"Update a workspace by posting JSON data\n","operationId":"adminUpdateWorkspace","parameters":[{"name":"payload","in":"body","description":"Repository details","schema":{"$ref":"#/definitions/AdminWorkspace"},"required":true}],"produces":["application/json","application/xml"],"responses":{"200":{"description":"Workspace object","schema":{"$ref":"#/definitions/AdminWorkspace"}}},"tags":["Provisioning"]}},"/admin/workspaces/{workspaceId}":{"get":{"x-pydio-action":"edit_repository","description":"Load detail of a workspace\n","operationId":"adminGetWorkspace","parameters":[{"name":"workspaceId","in":"path","description":"Id or Alias / Load detail of this workspace","type":"string","required":true},{"name":"load_fill_values","in":"query","description":"Load additional data to build a form for editing this role","type":"boolean","required":false}],"produces":["application/json","application/xml"],"responses":{"200":{"description":"Workspace object","schema":{"$ref":"#/definitions/AdminWorkspace"}}},"tags":["Provisioning"]},"delete":{"x-pydio-action":"delete","description":"Load detail of a workspace\n","operationId":"adminDeleteWorkspace","parameters":[{"name":"workspaceId","in":"path","description":"Id or Alias / Load detail of this workspace","type":"string","required":true}],"produces":["application/json","application/xml"],"responses":{"200":{"description":"Confirmation response","schema":{"$ref":"#/definitions/PydioResponse"}}},"tags":["Provisioning"]},"patch":{"x-pydio-action":"patch_repository","description":"NOT IMPLEMENTED YET - Edit details of a workspace\n","operationId":"adminEditWorkspace","parameters":[{"name":"workspaceId","in":"path","description":"Id or Alias / Update details for this workspace","type":"string","required":true},{"name":"payload","in":"body","description":"Repository details","schema":{"$ref":"#/definitions/AdminWorkspace"},"required":true}],"produces":["application/json","application/xml"],"responses":{"200":{"description":"Workspace object","schema":{"$ref":"#/definitions/AdminWorkspace"}}},"tags":["Provisioning"]}},"/admin/workspaces/{workspaceId}/features/{metaId}":{"post":{"x-pydio-action":"meta_source_add","description":"Add a metasource\n","operationId":"adminAddWorkspaceFeature","parameters":[{"name":"workspaceId","in":"path","description":"id or alias of this workspace","type":"string","required":true},{"name":"metaId","in":"path","description":"plugin id for new meta","type":"string","required":true},{"name":"parameters","in":"body","description":"Meta source parameters","schema":{"$ref":"#/definitions/MetaSourceParameters"},"required":true}],"produces":["application/json","application/xml"],"responses":{"200":{"description":"Workspace object","schema":{"$ref":"#/definitions/PydioResponse"},"examples":{"application/json":{"message":"Succesfully added metasource"}}}},"tags":["Provisioning"]},"patch":{"x-pydio-action":"meta_source_edit","description":"Edit a metasource\n","operationId":"adminEditWorkspaceFeature","parameters":[{"name":"workspaceId","in":"path","description":"id or alias of this workspace","type":"string","required":true},{"name":"metaId","in":"path","description":"plugin id for meta","type":"string","required":true},{"name":"parameters","in":"body","description":"Meta source parameters","schema":{"$ref":"#/definitions/MetaSourceParameters"},"required":true}],"produces":["application/json","application/xml"],"responses":{"200":{"description":"Workspace object","schema":{"$ref":"#/definitions/PydioResponse"}}},"tags":["Provisioning"]},"delete":{"x-pydio-action":"meta_source_delete","description":"Edit a metasource\n","operationId":"adminRemoveWorkspaceFeature","parameters":[{"name":"workspaceId","in":"path","description":"id or alias of this workspace","type":"string","required":true},{"name":"metaId","in":"path","description":"plugin id for meta","type":"string","required":true}],"produces":["application/json","application/xml"],"responses":{"200":{"description":"Workspace object","schema":{"$ref":"#/definitions/PydioResponse"}}},"tags":["Provisioning"]}}},"parameters":{"pathParameter":{"name":"path","in":"path","description":"Workspace id or alias + full path to the node, e.g. \"/my-files/path/to/node\"","required":true,"type":"string"},"workspaceIdParameter":{"name":"workspaceId","in":"path","description":"Id or Alias of the workspace","required":true,"type":"string"},"workspaceIdFormParameter":{"name":"workspaceId","in":"formData","description":"Id or Alias of the workspace","required":true,"type":"string"},"nodeSelectionParameter":{"name":"path","in":"formData","description":"One or more node pathes","required":false,"type":"array","items":{"type":"string"},"collectionFormat":"multi"},"peopleParameter":{"name":"path","in":"path","description":"User or group identifier, including full group path","required":true,"type":"string"},"peopleParameterOptional":{"name":"path","in":"path","description":"User or group identifier, including full group path (optional)","required":true,"type":"string"}},"definitions":{"PydioResponse":{"title":"PydioResponse","description":"Generic container for messages after successful operations or errors","type":"object","properties":{"message":{"type":"string"},"level":{"type":"string"},"errorCode":{"type":"integer"},"nodesDiff":{"$ref":"#/definitions/NodesDiff"},"bgAction":{"$ref":"#/definitions/BgAction"},"tasks":{"type":"array","items":{"$ref":"#/definitions/Task"}}},"example":{"message":"Operation completed successfuly"}},"Task":{"title":"Task","description":"Background operation started on the server. It's the client mission to check it on a regular basis.","type":"object","properties":{"id":{"type":"string"},"status":{"type":"integer"},"label":{"type":"string"},"description":{"type":"string"},"userId":{"type":"string"},"wsId":{"type":"string"},"actionName":{"type":"string"},"schedule":{"type":"object","properties":{"scheduleType":{"type":"string"},"scheduleValue":{"type":"string"}}},"parameters":{"type":"object"}}},"BgAction":{"title":"BgAction","description":"triggers a background action on the client side","type":"object","properties":{"actionName":{"type":"string"},"delay":{"type":"integer"}}},"Node":{"title":"Node","description":"A file or folder represented as a generic resource, including metadata and children. Properties before children are part of the \"standard\" metadat set, properties after are returned by the \"extended\" metadata set.","type":"object","properties":{"path":{"type":"string"},"is_leaf":{"type":"boolean"},"label":{"type":"string"},"ajxp_modiftime":{"type":"integer"},"bytesize":{"type":"integer"},"stat":{"type":"object"},"ajxp_relativetime":{"type":"string"},"ajxp_description":{"type":"string"},"icon":{"type":"string"},"filesize":{"type":"string"},"mimestring_id":{"type":"string"},"ajxp_readonly":{"type":"boolean"},"file_perms":{"type":"string"},"repo_has_recycle":{"type":"boolean"},"children":{"$ref":"#/definitions/NodeList"}}},"NodesDiff":{"title":"NodesDiff","description":"Description of node removed / added / updated in the backend","type":"object","properties":{"add":{"type":"array","items":{"$ref":"#/definitions/Node"}},"update":{"type":"array","description":"Nodes may have an additional attribute original_path","items":{"$ref":"#/definitions/Node"}},"remove":{"type":"array","items":{"type":"string"}}}},"NodeList":{"title":"NodeList","description":"List of Node objects","type":"object","properties":{"pagination":{"$ref":"#/definitions/PaginationData"},"data":{"type":"object","properties":{"node":{"$ref":"#/definitions/Node"},"children":{"type":"array","items":{"$ref":"#/definitions/Node"}}}}}},"PaginationData":{"title":"PaginationData","description":"Additional metadata attached to a NodeList for pagination. Could be sent through headers instead.","type":"object","properties":{"count":{"type":"integer","description":"total number of children"},"current":{"type":"integer","description":"current page"},"total":{"type":"integer","description":"total number of pages"},"dirs":{"type":"integer","description":"total number of \"collection\" childrens"},"remoteSort":{"type":"object","description":"additional attributes describing current server-side sorting"}}},"InputStream":{"title":"InputStream","description":"Simple binary stream","type":"string"},"Role":{"title":"Role","description":"Representation of a Role, central container of permissions, actions and parameters.","type":"object","properties":{"ACL":{"type":"object","description":"Key/value associating workspace IDs and rights strings (r/w)"},"MASKS":{"type":"object","description":"Folders permissions masks"},"PARAMETERS":{"type":"object","description":"Refined values of plugins parameters"},"ACTIONS":{"type":"object","description":"Enabled/disabled actions of plugins"},"APPLIES":{"type":"object","description":"Set of profiles on which this role automatically applies"}}},"PeoplePatch":{"title":"PeoplePatch","description":"a key / value tuple describing which parameter to patch","type":"object","properties":{"resourceType":{"type":"string","enum":["user","group"]},"parameterName":{"type":"string","enum":["groupLabel","userPass","userProfile","userLock","userRoles","userAddRole","userRemoveRole","userPreferences"]},"parameterValue":{"type":"string"}}},"AdminWorkspace":{"title":"Workspace Definition","description":"Parameters of a workspace, as seen by administrator","type":"object","required":["display","accessType"],"properties":{"id":{"type":"string","description":"Id of this workspace"},"slug":{"type":"string","description":"human readable identifier, computed from display"},"display":{"type":"string","description":"Label for this workspace"},"displayStringId":{"type":"string","description":"an i18n identifier to adapt the label to the user language"},"accessType":{"type":"string","description":"plugin name to be used as driver to access the storage. Resulting plugin id is \"access.accessType\"."},"writeable":{"type":"boolean","description":"wether this workspace/template is writeable or not (not writeable if defined in bootstrap php configs)."},"isTemplate":{"type":"boolean","description":"wether this is a template or a concrete workspace."},"groupPath":{"type":"string","description":"If this repository has a groupPath"},"parameters":{"type":"object","description":"a key/value object containing all driver parameters."},"features":{"type":"object","description":"The additional features parameters."},"mask":{"type":"object","description":"permission mask applied on workspace files and folders"},"info":{"type":"object","description":"additional informations provided by the server","properties":{"user":{"type":"integer","description":"computed number of users accessing this workspace"},"shares":{"type":"integer","description":"number of children shared from this workspace"}}}},"example":{"id":1,"securityScope":"USER","slug":"my-files","display":"My Files","displayStringId":432,"accessType":"fs","writeable":false,"isTemplate":false,"parameters":{"CREATION_TIME":1468593800,"USER_DESCRIPTION":476,"PATH":"PYDIO_DATA_PATH/personal/PYDIO_USER","CREATE":true,"RECYCLE_BIN":"recycle_bin","CHMOD_VALUE":"0600","DEFAULT_RIGHTS":"rw","PAGINATION_THRESHOLD":500,"PAGINATION_NUMBER":200},"features":{"metastore.serial":{"METADATA_FILE":".ajxp_meta","METADATA_FILE_LOCATION":"infolders"},"meta.user":{"meta_fields":"tags","meta_labels":"Tags","meta_visibility":"hidden"},"meta.filehasher":[],"meta.watch":[],"meta.syncable":{"REPO_SYNCABLE":true},"meta.exif":{"meta_fields":"COMPUTED_GPS.GPS_Latitude,COMPUTED_GPS.GPS_Longitude","meta_labels":"Latitude,Longitude"},"index.lucene":{"index_meta_fields":"tags","repository_specific_keywords":"PYDIO_USER"}},"INFO":{"users":12,"shares":74}}},"MetaSourceParameters":{"title":"MetaSource","description":"A set of parameters for meta sources","type":"object","example":{"PLUGIN_PARAMETER_STRING":"parameterValue1","PLUGIN_PARAMETER_INT":1,"PLUGIN_PARAMETER_BOOL":true}}}}