/**
 * Pydio Cells Rest API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var _ApiClient = require("../ApiClient");

var _ApiClient2 = _interopRequireDefault(_ApiClient);

var _modelIdmACL = require('../model/IdmACL');

var _modelIdmACL2 = _interopRequireDefault(_modelIdmACL);

var _modelRestACLCollection = require('../model/RestACLCollection');

var _modelRestACLCollection2 = _interopRequireDefault(_modelRestACLCollection);

var _modelRestDeleteResponse = require('../model/RestDeleteResponse');

var _modelRestDeleteResponse2 = _interopRequireDefault(_modelRestDeleteResponse);

var _modelRestSearchACLRequest = require('../model/RestSearchACLRequest');

var _modelRestSearchACLRequest2 = _interopRequireDefault(_modelRestSearchACLRequest);

/**
* ACLService service.
* @module api/ACLServiceApi
* @version 1.0
*/

var ACLServiceApi = (function () {

  /**
  * Constructs a new ACLServiceApi. 
  * @alias module:api/ACLServiceApi
  * @class
  * @param {module:ApiClient} apiClient Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */

  function ACLServiceApi(apiClient) {
    _classCallCheck(this, ACLServiceApi);

    this.apiClient = apiClient || _ApiClient2['default'].instance;
  }

  /**
   * Delete one or more ACLs
   * @param {module:model/IdmACL} body 
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestDeleteResponse} and HTTP response
   */

  ACLServiceApi.prototype.deleteAclWithHttpInfo = function deleteAclWithHttpInfo(body) {
    var postBody = body;

    // verify the required parameter 'body' is set
    if (body === undefined || body === null) {
      throw new Error("Missing the required parameter 'body' when calling deleteAcl");
    }

    var pathParams = {};
    var queryParams = {};
    var headerParams = {};
    var formParams = {};

    var authNames = [];
    var contentTypes = ['application/json'];
    var accepts = ['application/json'];
    var returnType = _modelRestDeleteResponse2['default'];

    return this.apiClient.callApi('/acl/bulk/delete', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);
  };

  /**
   * Delete one or more ACLs
   * @param {module:model/IdmACL} body 
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestDeleteResponse}
   */

  ACLServiceApi.prototype.deleteAcl = function deleteAcl(body) {
    return this.deleteAclWithHttpInfo(body).then(function (response_and_data) {
      return response_and_data.data;
    });
  };

  /**
   * Store an ACL
   * @param {module:model/IdmACL} body 
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/IdmACL} and HTTP response
   */

  ACLServiceApi.prototype.putAclWithHttpInfo = function putAclWithHttpInfo(body) {
    var postBody = body;

    // verify the required parameter 'body' is set
    if (body === undefined || body === null) {
      throw new Error("Missing the required parameter 'body' when calling putAcl");
    }

    var pathParams = {};
    var queryParams = {};
    var headerParams = {};
    var formParams = {};

    var authNames = [];
    var contentTypes = ['application/json'];
    var accepts = ['application/json'];
    var returnType = _modelIdmACL2['default'];

    return this.apiClient.callApi('/acl', 'PUT', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);
  };

  /**
   * Store an ACL
   * @param {module:model/IdmACL} body 
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/IdmACL}
   */

  ACLServiceApi.prototype.putAcl = function putAcl(body) {
    return this.putAclWithHttpInfo(body).then(function (response_and_data) {
      return response_and_data.data;
    });
  };

  /**
   * Search Acls
   * @param {module:model/RestSearchACLRequest} body 
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/RestACLCollection} and HTTP response
   */

  ACLServiceApi.prototype.searchAclsWithHttpInfo = function searchAclsWithHttpInfo(body) {
    var postBody = body;

    // verify the required parameter 'body' is set
    if (body === undefined || body === null) {
      throw new Error("Missing the required parameter 'body' when calling searchAcls");
    }

    var pathParams = {};
    var queryParams = {};
    var headerParams = {};
    var formParams = {};

    var authNames = [];
    var contentTypes = ['application/json'];
    var accepts = ['application/json'];
    var returnType = _modelRestACLCollection2['default'];

    return this.apiClient.callApi('/acl', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType);
  };

  /**
   * Search Acls
   * @param {module:model/RestSearchACLRequest} body 
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/RestACLCollection}
   */

  ACLServiceApi.prototype.searchAcls = function searchAcls(body) {
    return this.searchAclsWithHttpInfo(body).then(function (response_and_data) {
      return response_and_data.data;
    });
  };

  return ACLServiceApi;
})();

exports['default'] = ACLServiceApi;
module.exports = exports['default'];
