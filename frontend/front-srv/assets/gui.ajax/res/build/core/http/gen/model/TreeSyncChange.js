/**
 * Pydio Cells Rest API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

'use strict';

exports.__esModule = true;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

var _ApiClient = require('../ApiClient');

var _ApiClient2 = _interopRequireDefault(_ApiClient);

var _TreeSyncChangeNode = require('./TreeSyncChangeNode');

var _TreeSyncChangeNode2 = _interopRequireDefault(_TreeSyncChangeNode);

var _TreeSyncChangeType = require('./TreeSyncChangeType');

var _TreeSyncChangeType2 = _interopRequireDefault(_TreeSyncChangeType);

/**
* The TreeSyncChange model module.
* @module model/TreeSyncChange
* @version 1.0
*/

var TreeSyncChange = (function () {
    /**
    * Constructs a new <code>TreeSyncChange</code>.
    * @alias module:model/TreeSyncChange
    * @class
    */

    function TreeSyncChange() {
        _classCallCheck(this, TreeSyncChange);

        this.seq = undefined;
        this.nodeId = undefined;
        this.type = undefined;
        this.source = undefined;
        this.target = undefined;
        this.node = undefined;
    }

    /**
    * Constructs a <code>TreeSyncChange</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/TreeSyncChange} obj Optional instance to populate.
    * @return {module:model/TreeSyncChange} The populated <code>TreeSyncChange</code> instance.
    */

    TreeSyncChange.constructFromObject = function constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TreeSyncChange();

            if (data.hasOwnProperty('seq')) {
                obj['seq'] = _ApiClient2['default'].convertToType(data['seq'], 'String');
            }
            if (data.hasOwnProperty('nodeId')) {
                obj['nodeId'] = _ApiClient2['default'].convertToType(data['nodeId'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = _TreeSyncChangeType2['default'].constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = _ApiClient2['default'].convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('target')) {
                obj['target'] = _ApiClient2['default'].convertToType(data['target'], 'String');
            }
            if (data.hasOwnProperty('node')) {
                obj['node'] = _TreeSyncChangeNode2['default'].constructFromObject(data['node']);
            }
        }
        return obj;
    };

    /**
    * @member {String} seq
    */
    return TreeSyncChange;
})();

exports['default'] = TreeSyncChange;
module.exports = exports['default'];

/**
* @member {String} nodeId
*/

/**
* @member {module:model/TreeSyncChangeType} type
*/

/**
* @member {String} source
*/

/**
* @member {String} target
*/

/**
* @member {module:model/TreeSyncChangeNode} node
*/
